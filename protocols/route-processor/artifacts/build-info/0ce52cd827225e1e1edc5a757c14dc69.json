{"id":"0ce52cd827225e1e1edc5a757c14dc69","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/InputStream.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.8.10;\r\n\r\nlibrary InputStream {\r\n  function createStream(bytes memory data) internal pure returns (uint256 stream) {\r\n    assembly {\r\n      stream := mload(0x40)\r\n      mstore(0x40, add(stream, 64))\r\n      mstore(stream, data)\r\n      let length := mload(data)\r\n      mstore(add(stream, 32), add(data, length))\r\n    }\r\n  }\r\n\r\n  function isNotEmpty(uint256 stream) internal pure returns (bool) {\r\n    uint256 pos;\r\n    uint256 finish;\r\n    assembly {\r\n      pos := mload(stream)\r\n      finish := mload(add(stream, 32))\r\n    }\r\n    return pos < finish;\r\n  }\r\n\r\n  function readUint8(uint256 stream) internal pure returns (uint8 res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 1)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readUint16(uint256 stream) internal pure returns (uint16 res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 2)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readUint32(uint256 stream) internal pure returns (uint32 res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 4)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readUint(uint256 stream) internal pure returns (uint256 res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 32)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readBytes32(uint256 stream) internal pure returns (bytes32 res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 32)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readAddress(uint256 stream) internal pure returns (address res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      pos := add(pos, 20)\r\n      res := mload(pos)\r\n      mstore(stream, pos)\r\n    }\r\n  }\r\n\r\n  function readBytes(uint256 stream) internal pure returns (bytes memory res) {\r\n    assembly {\r\n      let pos := mload(stream)\r\n      res := add(pos, 32)\r\n      let length := mload(res)\r\n      mstore(stream, add(res, length))\r\n    }\r\n  }\r\n}\r\n"},"contracts/RouteProcessor.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.8.10;\r\n\r\nimport '../interfaces/IUniswapV2Pair.sol';\r\nimport '../interfaces/IBentoBoxMinimal.sol';\r\nimport '../interfaces/IPool.sol';\r\nimport '../interfaces/IWETH.sol';\r\nimport './InputStream.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\n\r\naddress constant NATIVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n/// @title A route processor for the Sushi Aggregator\r\n/// @author Okavango\r\ncontract RouteProcessor {\r\n  using SafeERC20 for IERC20;\r\n  using InputStream for uint256;\r\n\r\n  IBentoBoxMinimal public immutable bentoBox;\r\n\r\n  uint private unlocked = 1;\r\n  modifier lock() {\r\n      require(unlocked == 1, 'RouteProcessor is locked');\r\n      unlocked = 2;\r\n      _;\r\n      unlocked = 1;\r\n  }\r\n\r\n  constructor(address _bentoBox) {\r\n    bentoBox = IBentoBoxMinimal(_bentoBox);\r\n  }\r\n\r\n  /// @notice For native unwrapping\r\n  receive() external payable {}\r\n\r\n  /// @notice Processes the route generated off-chain. Has a lock\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function processRoute(\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) external payable lock returns (uint256 amountOut) {\r\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\r\n  }\r\n\r\n  /// @notice Transfers some value to <transferValueTo> and then processes the route\r\n  /// @param transferValueTo Address where the value should be transferred\r\n  /// @param amountValueTransfer How much value to transfer\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function transferValueAndprocessRoute(\r\n    address payable transferValueTo,\r\n    uint256 amountValueTransfer,\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) external payable lock returns (uint256 amountOut) {\r\n    (bool success, bytes memory returnBytes) = transferValueTo.call{value: amountValueTransfer}('');\r\n    require(success, string(abi.encodePacked(returnBytes)));\r\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\r\n  }\r\n\r\n  /// @notice Processes the route generated off-chain\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function processRouteInternal(\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) private returns (uint256 amountOut) {\r\n    uint256 amountInAcc = 0;\r\n    uint256 balanceInitial = tokenOut == NATIVE_ADDRESS ? \r\n      address(to).balance : IERC20(tokenOut).balanceOf(to);\r\n\r\n    uint256 stream = InputStream.createStream(route);\r\n    while (stream.isNotEmpty()) {\r\n      uint8 commandCode = stream.readUint8();\r\n      if (commandCode < 20) {\r\n        if (commandCode == 10)\r\n          swapUniswapPool(stream); // Sushi/Uniswap pool swap\r\n        else if (commandCode == 4)\r\n          distributeERC20Shares(stream); // distribute ERC20 tokens from this router to pools\r\n        else if (commandCode == 3)\r\n          amountInAcc += distributeERC20Amounts(stream, tokenIn); // initial distribution\r\n        else if (commandCode == 5)\r\n          amountInAcc += wrapAndDistributeERC20Amounts(stream); // wrap natives and initial distribution        \r\n        else if (commandCode == 6) \r\n          unwrapNative(to, stream);\r\n        else if (commandCode == 7)\r\n          amountInAcc += distributeERC20AmountsFromRP(stream, tokenIn); // initial distribution\r\n        else revert('Unknown command code');\r\n      } else if (commandCode < 24) {\r\n        if (commandCode == 20) bentoDepositAmountFromBento(stream, tokenIn);\r\n        else if (commandCode == 21) swapTrident(stream);\r\n        else if (commandCode == 23) bentoWithdrawShareFromRP(stream, tokenIn);\r\n        else revert('Unknown command code');\r\n      } else {\r\n        if (commandCode == 24) amountInAcc += distributeBentoShares(stream, tokenIn);\r\n        else if (commandCode == 25) distributeBentoPortions(stream);\r\n        else if (commandCode == 26) bentoDepositAllFromBento(stream);\r\n        else if (commandCode == 27) bentoWithdrawAllFromRP(stream);\r\n        else revert('Unknown command code');\r\n      }\r\n    }\r\n\r\n    require(amountInAcc == amountIn, 'Wrong amountIn value');\r\n    uint256 balanceFinal = tokenOut == NATIVE_ADDRESS ? \r\n      address(to).balance : IERC20(tokenOut).balanceOf(to);\r\n    require(balanceFinal >= balanceInitial + amountOutMin, 'Minimal ouput balance violation');\r\n\r\n    amountOut = balanceFinal - balanceInitial;\r\n  }\r\n\r\n  /// @notice Transfers input tokens sent to BentoBox to a pool\r\n  /// @notice Expected to be called for initial liquidity transfer from user to BentoBox, so we know exact amounts\r\n  /// @param stream [Pool, Amount]. Pool into which an amount of tokens will be transferred\r\n  /// @param token Address of the token to transfer\r\n  function bentoDepositAmountFromBento(uint256 stream, address token) private {\r\n    address to = stream.readAddress();\r\n    uint256 amount = stream.readUint();\r\n    bentoBox.deposit(token, address(bentoBox), to, amount, 0);\r\n  }\r\n\r\n  /// @notice Transfers all available input tokens from BentoBox to a pool\r\n  /// @param stream [Pool, Token]. Pool into which all tokens will be transferred \r\n  function bentoDepositAllFromBento(uint256 stream) private {\r\n    address to = stream.readAddress();\r\n    address token = stream.readAddress();\r\n\r\n    uint256 amount = IERC20(token).balanceOf(address(bentoBox)) +\r\n      bentoBox.strategyData(token).balance -\r\n      bentoBox.totals(token).elastic;\r\n    bentoBox.deposit(token, address(bentoBox), to, amount, 0);\r\n  }\r\n\r\n  /// @notice Withdraws BentoBox tokens from BentoBox to an address\r\n  /// @param stream [To, Amount]. Destination where an amount of token will be transferred\r\n  /// @param token Token to transfer\r\n  function bentoWithdrawShareFromRP(uint256 stream, address token) private {\r\n    address to = stream.readAddress();\r\n    uint256 amount = stream.readUint();\r\n    bentoBox.withdraw(token, address(this), to, amount, 0);\r\n  }\r\n\r\n  /// @notice Withdraws all available BentoBox tokens from BentoBox to an address\r\n  /// @param stream [Token, To]. Token which will be transferred to a destination\r\n  function bentoWithdrawAllFromRP(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    address to = stream.readAddress();\r\n    uint256 amount = bentoBox.balanceOf(token, address(this));\r\n    bentoBox.withdraw(token, address(this), to, 0, amount);\r\n  }\r\n\r\n  /// @notice Performs a Trident pool swap\r\n  /// @param stream [Pool, SwapData]. Pool against a swap defined by SwapData will be executed\r\n  function swapTrident(uint256 stream) private {\r\n    address pool = stream.readAddress();\r\n    bytes memory swapData = stream.readBytes();\r\n    IPool(pool).swap(swapData);\r\n  }\r\n\r\n  /// @notice Performs a Sushi/UniswapV2 pool swap\r\n  /// @param stream [Pool, TokenIn, Direction, To]\r\n  /// @return amountOut Amount of the output token\r\n  function swapUniswapPool(uint256 stream) private returns (uint256 amountOut) {\r\n    address pool = stream.readAddress();\r\n    address tokenIn = stream.readAddress();\r\n    uint8 direction = stream.readUint8();\r\n    address to = stream.readAddress();\r\n\r\n    (uint256 r0, uint256 r1, ) = IUniswapV2Pair(pool).getReserves();\r\n    require(r0 > 0 && r1 > 0, 'Wrong pool reserves');\r\n    (uint256 reserveIn, uint256 reserveOut) = direction == 1 ? (r0, r1) : (r1, r0);\r\n\r\n    uint256 amountIn = IERC20(tokenIn).balanceOf(pool) - reserveIn;\r\n    uint256 amountInWithFee = amountIn * 997;\r\n    amountOut = (amountInWithFee * reserveOut) / (reserveIn * 1000 + amountInWithFee);\r\n    (uint256 amount0Out, uint256 amount1Out) = direction == 1 ? (uint256(0), amountOut) : (amountOut, uint256(0));\r\n    IUniswapV2Pair(pool).swap(amount0Out, amount1Out, to, new bytes(0));\r\n  }\r\n\r\n  /// @notice Distributes input ERC20 tokens from msg.sender to addresses. Tokens should be approved\r\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\r\n  /// @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\r\n  /// @param token Token to distribute\r\n  /// @return amountTotal Total amount distributed\r\n  function distributeERC20Amounts(uint256 stream, address token) private returns (uint256 amountTotal) {\r\n    uint8 num = stream.readUint8();\r\n    amountTotal = 0;\r\n    for (uint256 i = 0; i < num; ++i) {\r\n      address to = stream.readAddress();\r\n      uint256 amount = stream.readUint();\r\n      amountTotal += amount;\r\n      IERC20(token).safeTransferFrom(msg.sender, to, amount);\r\n    }\r\n  }\r\n\r\n  /// @notice Distributes input ERC20 tokens from this contract to addresses. Tokens should be approved\r\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\r\n  /// @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\r\n  /// @param token Token to distribute\r\n  /// @return amountTotal Total amount distributed\r\n  function distributeERC20AmountsFromRP(uint256 stream, address token) private returns (uint256 amountTotal) {\r\n    uint8 num = stream.readUint8();\r\n    amountTotal = 0;\r\n    for (uint256 i = 0; i < num; ++i) {\r\n      address to = stream.readAddress();\r\n      uint256 amount = stream.readUint();\r\n      amountTotal += amount;\r\n      IERC20(token).safeTransfer(to, amount);\r\n    }\r\n  }\r\n\r\n  /// @notice Wraps all native inputs and distributes wrapped ERC20 tokens from RouteProcessor to addresses\r\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\r\n  /// @param stream [WrapToken, ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\r\n  /// @return amountTotal Total amount distributed\r\n  function wrapAndDistributeERC20Amounts(uint256 stream) private returns (uint256 amountTotal) {\r\n    address token = stream.readAddress();\r\n    IWETH(token).deposit{value: address(this).balance}();\r\n    uint8 num = stream.readUint8();\r\n    amountTotal = 0;\r\n    for (uint256 i = 0; i < num; ++i) {\r\n      address to = stream.readAddress();\r\n      uint256 amount = stream.readUint();\r\n      amountTotal += amount;\r\n      IERC20(token).safeTransfer(to, amount);\r\n    }\r\n    require(address(this).balance == 0, \"RouteProcessor: invalid input amount\");\r\n  }\r\n\r\n  /// @notice Distributes input BentoBox tokens from msg.sender to addresses. Tokens should be approved\r\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\r\n  /// @param stream [ArrayLength, ...[To, ShareAmount][]]. An array of destinations and token share amounts\r\n  /// @param token Token to distribute\r\n  /// @return sharesTotal Total shares distributed\r\n  function distributeBentoShares(uint256 stream, address token) private returns (uint256 sharesTotal) {\r\n    uint8 num = stream.readUint8();\r\n    sharesTotal = 0;\r\n    for (uint256 i = 0; i < num; ++i) {\r\n      address to = stream.readAddress();\r\n      uint256 share = stream.readUint();\r\n      sharesTotal += share;\r\n      bentoBox.transfer(token, msg.sender, to, share);\r\n    }\r\n  }\r\n\r\n  /// @notice Distributes ERC20 tokens from RouteProcessor to addresses\r\n  /// @notice Quantity for sending is determined by share in 1/65535\r\n  /// @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\r\n  /// @notice so we have to work with shares - not fixed amounts\r\n  /// @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts\r\n  function distributeERC20Shares(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    uint8 num = stream.readUint8();\r\n    uint256 amountTotal = IERC20(token).balanceOf(address(this))\r\n      - 1;     // slot undrain protection\r\n\r\n    unchecked {\r\n      for (uint256 i = 0; i < num; ++i) {\r\n        address to = stream.readAddress();\r\n        uint16 share = stream.readUint16();\r\n        uint256 amount = (amountTotal * share) / 65535;\r\n        amountTotal -= amount;\r\n        IERC20(token).safeTransfer(to, amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /// @notice Distributes BentoBox tokens from RouteProcessor to addresses\r\n  /// @notice Quantity for sending is determined by portions in 1/65535.\r\n  /// @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\r\n  /// @notice so we have to work with portions - not fixed amounts\r\n  /// @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts\r\n  function distributeBentoPortions(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    uint8 num = stream.readUint8();\r\n    uint256 amountTotal = bentoBox.balanceOf(token, address(this))\r\n      - 1;     // slot undrain protection\r\n\r\n    unchecked {\r\n      for (uint256 i = 0; i < num; ++i) {\r\n        address to = stream.readAddress();\r\n        uint16 share = stream.readUint16();\r\n        uint256 amount = (amountTotal * share) / 65535;\r\n        amountTotal -= amount;\r\n        bentoBox.transfer(token, address(this), to, amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /// @notice Unwraps the Native Token\r\n  /// @param receiver Destination of the unwrapped token\r\n  /// @param stream [Token]. Token to unwrap native\r\n  function unwrapNative(address receiver, uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    IWETH(token).withdraw( IERC20(token).balanceOf(address(this))\r\n      - 1);     // slot undrain protection\r\n    payable(receiver).transfer(address(this).balance);\r\n  }\r\n}\r\n"},"contracts/RouteProcessor3.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.8.10;\r\n\r\nimport '../interfaces/IUniswapV2Pair.sol';\r\nimport '../interfaces/IUniswapV3Pool.sol';\r\nimport '../interfaces/ITridentCLPool.sol';\r\nimport '../interfaces/IBentoBoxMinimal.sol';\r\nimport '../interfaces/IPool.sol';\r\nimport '../interfaces/IWETH.sol';\r\nimport './InputStream.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\naddress constant NATIVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\naddress constant IMPOSSIBLE_POOL_ADDRESS = 0x0000000000000000000000000000000000000001;\r\n\r\n/// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\r\nuint160 constant MIN_SQRT_RATIO = 4295128739;\r\n/// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\r\nuint160 constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\r\n\r\n/// @title A route processor for the Sushi Aggregator\r\n/// @author Ilya Lyalin\r\n/// version 2.1\r\ncontract RouteProcessor3 is Ownable {\r\n  using SafeERC20 for IERC20;\r\n  using SafeERC20 for IERC20Permit;\r\n  using InputStream for uint256;\r\n\r\n  event Route(\r\n    address indexed from, \r\n    address to, \r\n    address indexed tokenIn, \r\n    address indexed tokenOut, \r\n    uint amountIn, \r\n    uint amountOutMin,\r\n    uint amountOut\r\n  );\r\n\r\n  IBentoBoxMinimal public immutable bentoBox;\r\n  mapping (address => bool) priviledgedUsers;\r\n  address private lastCalledPool;\r\n\r\n  uint8 private unlocked = 1;\r\n  uint8 private paused = 1;\r\n  modifier lock() {\r\n      require(unlocked == 1, 'RouteProcessor is locked');\r\n      require(paused == 1, 'RouteProcessor is paused');\r\n      unlocked = 2;\r\n      _;\r\n      unlocked = 1;\r\n  }\r\n\r\n  modifier onlyOwnerOrPriviledgedUser() {\r\n    require(msg.sender == owner() || priviledgedUsers[msg.sender] == true, \"RP: caller is not the owner or a priviledged user\");\r\n    _;\r\n  }\r\n\r\n  constructor(address _bentoBox, address[] memory priviledgedUserList) {\r\n    bentoBox = IBentoBoxMinimal(_bentoBox);\r\n    lastCalledPool = IMPOSSIBLE_POOL_ADDRESS;\r\n\r\n    for (uint i = 0; i < priviledgedUserList.length; i++) {\r\n      priviledgedUsers[priviledgedUserList[i]] = true;\r\n    }\r\n  }\r\n\r\n  function setPriviledge(address user, bool priviledge) external onlyOwner {\r\n    priviledgedUsers[user] = priviledge;\r\n  }\r\n\r\n  function pause() external onlyOwnerOrPriviledgedUser {\r\n    paused = 2;\r\n  }\r\n\r\n  function resume() external onlyOwnerOrPriviledgedUser {\r\n    paused = 1;\r\n  }\r\n\r\n  /// @notice For native unwrapping\r\n  receive() external payable {}\r\n\r\n  /// @notice Processes the route generated off-chain. Has a lock\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function processRoute(\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) external payable lock returns (uint256 amountOut) {\r\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\r\n  }\r\n\r\n  /// @notice Transfers some value to <transferValueTo> and then processes the route\r\n  /// @param transferValueTo Address where the value should be transferred\r\n  /// @param amountValueTransfer How much value to transfer\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function transferValueAndprocessRoute(\r\n    address payable transferValueTo,\r\n    uint256 amountValueTransfer,\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) external payable lock returns (uint256 amountOut) {\r\n    (bool success, bytes memory returnBytes) = transferValueTo.call{value: amountValueTransfer}('');\r\n    require(success, string(abi.encodePacked(returnBytes)));\r\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\r\n  }\r\n\r\n  /// @notice Processes the route generated off-chain\r\n  /// @param tokenIn Address of the input token\r\n  /// @param amountIn Amount of the input token\r\n  /// @param tokenOut Address of the output token\r\n  /// @param amountOutMin Minimum amount of the output token\r\n  /// @return amountOut Actual amount of the output token\r\n  function processRouteInternal(\r\n    address tokenIn,\r\n    uint256 amountIn,\r\n    address tokenOut,\r\n    uint256 amountOutMin,\r\n    address to,\r\n    bytes memory route\r\n  ) private returns (uint256 amountOut) {\r\n    uint256 balanceInInitial = tokenIn == NATIVE_ADDRESS ? address(this).balance : IERC20(tokenIn).balanceOf(msg.sender);\r\n    uint256 balanceOutInitial = tokenOut == NATIVE_ADDRESS ? address(to).balance : IERC20(tokenOut).balanceOf(to);\r\n\r\n    uint256 stream = InputStream.createStream(route);\r\n    while (stream.isNotEmpty()) {\r\n      uint8 commandCode = stream.readUint8();\r\n      if (commandCode == 1) processMyERC20(stream);\r\n      else if (commandCode == 2) processUserERC20(stream, amountIn);\r\n      else if (commandCode == 3) processNative(stream);\r\n      else if (commandCode == 4) processOnePool(stream);\r\n      else if (commandCode == 5) processInsideBento(stream);\r\n      else if (commandCode == 6) applyPermit(tokenIn, stream);\r\n      else revert('RouteProcessor: Unknown command code');\r\n    }\r\n\r\n    uint256 balanceInFinal = tokenIn == NATIVE_ADDRESS ? address(this).balance : IERC20(tokenIn).balanceOf(msg.sender);\r\n    require(balanceInFinal + amountIn >= balanceInInitial, 'RouteProcessor: Minimal imput balance violation');\r\n\r\n    uint256 balanceOutFinal = tokenOut == NATIVE_ADDRESS ? address(to).balance : IERC20(tokenOut).balanceOf(to);\r\n    require(balanceOutFinal >= balanceOutInitial + amountOutMin, 'RouteProcessor: Minimal ouput balance violation');\r\n\r\n    amountOut = balanceOutFinal - balanceOutInitial;\r\n\r\n    emit Route(msg.sender, to, tokenIn, tokenOut, amountIn, amountOutMin, amountOut);\r\n  }\r\n\r\n  function applyPermit(address tokenIn, uint256 stream) private {\r\n    //address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s)\r\n    uint256 value = stream.readUint();\r\n    uint256 deadline = stream.readUint();\r\n    uint8 v = stream.readUint8();\r\n    bytes32 r = stream.readBytes32();\r\n    bytes32 s = stream.readBytes32();\r\n    IERC20Permit(tokenIn).safePermit(msg.sender, address(this), value, deadline, v, r, s);\r\n  }\r\n\r\n  /// @notice Processes native coin: call swap for all pools that swap from native coin\r\n  /// @param stream Streamed process program\r\n  function processNative(uint256 stream) private {\r\n    uint256 amountTotal = address(this).balance;\r\n    distributeAndSwap(stream, address(this), NATIVE_ADDRESS, amountTotal);\r\n  }\r\n\r\n  /// @notice Processes ERC20 token from this contract balance:\r\n  /// @notice Call swap for all pools that swap from this token\r\n  /// @param stream Streamed process program\r\n  function processMyERC20(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    uint256 amountTotal = IERC20(token).balanceOf(address(this));\r\n    unchecked {\r\n      if (amountTotal > 0) amountTotal -= 1;     // slot undrain protection\r\n    }\r\n    distributeAndSwap(stream, address(this), token, amountTotal);\r\n  }\r\n  \r\n  /// @notice Processes ERC20 token from msg.sender balance:\r\n  /// @notice Call swap for all pools that swap from this token\r\n  /// @param stream Streamed process program\r\n  /// @param amountTotal Amount of tokens to take from msg.sender\r\n  function processUserERC20(uint256 stream, uint256 amountTotal) private {\r\n    address token = stream.readAddress();\r\n    distributeAndSwap(stream, msg.sender, token, amountTotal);\r\n  }\r\n\r\n  /// @notice Distributes amountTotal to several pools according to their shares and calls swap for each pool\r\n  /// @param stream Streamed process program\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountTotal Total amount of tokenIn for swaps \r\n  function distributeAndSwap(uint256 stream, address from, address tokenIn, uint256 amountTotal) private {\r\n    uint8 num = stream.readUint8();\r\n    unchecked {\r\n      for (uint256 i = 0; i < num; ++i) {\r\n        uint16 share = stream.readUint16();\r\n        uint256 amount = (amountTotal * share) / 65535;\r\n        amountTotal -= amount;\r\n        swap(stream, from, tokenIn, amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /// @notice Processes ERC20 token for cases when the token has only one output pool\r\n  /// @notice In this case liquidity is already at pool balance. This is an optimization\r\n  /// @notice Call swap for all pools that swap from this token\r\n  /// @param stream Streamed process program\r\n  function processOnePool(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    swap(stream, address(this), token, 0);\r\n  }\r\n\r\n  /// @notice Processes Bento tokens \r\n  /// @notice Call swap for all pools that swap from this token\r\n  /// @param stream Streamed process program\r\n  function processInsideBento(uint256 stream) private {\r\n    address token = stream.readAddress();\r\n    uint8 num = stream.readUint8();\r\n\r\n    uint256 amountTotal = bentoBox.balanceOf(token, address(this));\r\n    unchecked {\r\n      if (amountTotal > 0) amountTotal -= 1;     // slot undrain protection\r\n      for (uint256 i = 0; i < num; ++i) {\r\n        uint16 share = stream.readUint16();\r\n        uint256 amount = (amountTotal * share) / 65535;\r\n        amountTotal -= amount;\r\n        swap(stream, address(this), token, amount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /// @notice Makes swap\r\n  /// @param stream Streamed process program\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function swap(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    uint8 poolType = stream.readUint8();\r\n    if (poolType == 0) swapUniV2(stream, from, tokenIn, amountIn);\r\n    else if (poolType == 1) swapUniV3(stream, from, tokenIn, amountIn);\r\n    else if (poolType == 2) wrapNative(stream, from, tokenIn, amountIn);\r\n    else if (poolType == 3) bentoBridge(stream, from, tokenIn, amountIn);\r\n    else if (poolType == 4) swapTrident(stream, from, tokenIn, amountIn);\r\n    else revert('RouteProcessor: Unknown pool type');\r\n  }\r\n\r\n  /// @notice Wraps/unwraps native token\r\n  /// @param stream [direction & fake, recipient, wrapToken?]\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function wrapNative(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    uint8 directionAndFake = stream.readUint8();\r\n    address to = stream.readAddress();\r\n\r\n    if (directionAndFake & 1 == 1) {  // wrap native\r\n      address wrapToken = stream.readAddress();\r\n      if (directionAndFake & 2 == 0) IWETH(wrapToken).deposit{value: amountIn}();\r\n      if (to != address(this)) IERC20(wrapToken).safeTransfer(to, amountIn);\r\n    } else { // unwrap native\r\n      if (directionAndFake & 2 == 0) {\r\n        if (from != address(this)) IERC20(tokenIn).safeTransferFrom(from, address(this), amountIn);\r\n        IWETH(tokenIn).withdraw(amountIn);\r\n      }\r\n      payable(to).transfer(address(this).balance);\r\n    }\r\n  }\r\n\r\n  /// @notice Bridge/unbridge tokens to/from Bento\r\n  /// @param stream [direction, recipient]\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function bentoBridge(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    uint8 direction = stream.readUint8();\r\n    address to = stream.readAddress();\r\n\r\n    if (direction > 0) {  // outside to Bento\r\n      // deposit to arbitrary recipient is possible only from address(bentoBox)\r\n      if (amountIn != 0) {\r\n        if (from == address(this)) IERC20(tokenIn).safeTransfer(address(bentoBox), amountIn);\r\n        else IERC20(tokenIn).safeTransferFrom(from, address(bentoBox), amountIn);\r\n      } else {\r\n        // tokens already are at address(bentoBox)\r\n        amountIn = IERC20(tokenIn).balanceOf(address(bentoBox)) +\r\n        bentoBox.strategyData(tokenIn).balance -\r\n        bentoBox.totals(tokenIn).elastic;\r\n      }\r\n      bentoBox.deposit(tokenIn, address(bentoBox), to, amountIn, 0);\r\n    } else { // Bento to outside\r\n      if (amountIn > 0) {\r\n        bentoBox.transfer(tokenIn, from, address(this), amountIn);\r\n      } else amountIn = bentoBox.balanceOf(tokenIn, address(this));\r\n      bentoBox.withdraw(tokenIn, address(this), to, 0, amountIn);\r\n    }\r\n  }\r\n\r\n  /// @notice UniswapV2 pool swap\r\n  /// @param stream [pool, direction, recipient]\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function swapUniV2(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    address pool = stream.readAddress();\r\n    uint8 direction = stream.readUint8();\r\n    address to = stream.readAddress();\r\n\r\n    (uint256 r0, uint256 r1, ) = IUniswapV2Pair(pool).getReserves();\r\n    require(r0 > 0 && r1 > 0, 'Wrong pool reserves');\r\n    (uint256 reserveIn, uint256 reserveOut) = direction == 1 ? (r0, r1) : (r1, r0);\r\n\r\n    if (amountIn != 0) {\r\n      if (from == address(this)) IERC20(tokenIn).safeTransfer(pool, amountIn);\r\n      else IERC20(tokenIn).safeTransferFrom(from, pool, amountIn);\r\n    } else amountIn = IERC20(tokenIn).balanceOf(pool) - reserveIn;  // tokens already were transferred\r\n\r\n    uint256 amountInWithFee = amountIn * 997;\r\n    uint256 amountOut = (amountInWithFee * reserveOut) / (reserveIn * 1000 + amountInWithFee);\r\n    (uint256 amount0Out, uint256 amount1Out) = direction == 1 ? (uint256(0), amountOut) : (amountOut, uint256(0));\r\n    IUniswapV2Pair(pool).swap(amount0Out, amount1Out, to, new bytes(0));\r\n  }\r\n\r\n  /// @notice Trident pool swap\r\n  /// @param stream [pool, swapData]\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function swapTrident(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    address pool = stream.readAddress();\r\n    bytes memory swapData = stream.readBytes();\r\n\r\n    if (amountIn != 0) {\r\n      bentoBox.transfer(tokenIn, from, pool, amountIn);\r\n    }\r\n    \r\n    IPool(pool).swap(swapData);\r\n  }\r\n\r\n  /// @notice UniswapV3 pool swap\r\n  /// @param stream [pool, direction, recipient]\r\n  /// @param from Where to take liquidity for swap\r\n  /// @param tokenIn Input token\r\n  /// @param amountIn Amount of tokenIn to take for swap\r\n  function swapUniV3(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\r\n    address pool = stream.readAddress();\r\n    bool zeroForOne = stream.readUint8() > 0;\r\n    address recipient = stream.readAddress();\r\n\r\n    if (from != address(this)) {\r\n      require(from == msg.sender, 'swapUniV3: unexpected from address');\r\n      IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), uint256(amountIn));\r\n    }\r\n\r\n    lastCalledPool = pool;\r\n    IUniswapV3Pool(pool).swap(\r\n      recipient,\r\n      zeroForOne,\r\n      int256(amountIn),\r\n      zeroForOne ? MIN_SQRT_RATIO + 1 : MAX_SQRT_RATIO - 1,\r\n      abi.encode(tokenIn)\r\n    );\r\n    require(lastCalledPool == IMPOSSIBLE_POOL_ADDRESS, 'RouteProcessor.swapUniV3: unexpected'); // Just to be sure\r\n  }\r\n\r\n  /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n  /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n  /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n  /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n  /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n  /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n  /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n  /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n  /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\r\n  function uniswapV3SwapCallback(\r\n    int256 amount0Delta,\r\n    int256 amount1Delta,\r\n    bytes calldata data\r\n  ) external {\r\n    require(msg.sender == lastCalledPool, 'RouteProcessor.uniswapV3SwapCallback: call from unknown source');\r\n    lastCalledPool = IMPOSSIBLE_POOL_ADDRESS;\r\n    (address tokenIn) = abi.decode(data, (address));\r\n    int256 amount = amount0Delta > 0 ? amount0Delta : amount1Delta;\r\n    require(amount > 0, 'RouteProcessor.uniswapV3SwapCallback: not positive amount');\r\n\r\n    // Normally, RouteProcessor shouldn't have any liquidity on board\r\n    // If some liquidity exists, it is sweept by the next user that makes swap through these tokens\r\n    IERC20(tokenIn).safeTransfer(msg.sender, uint256(amount));\r\n  }\r\n\r\n}\r\n"},"interfaces/IBentoBoxMinimal.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity >=0.8.0;\r\n\r\nstruct Rebase {\r\n    uint128 elastic;\r\n    uint128 base;\r\n}\r\n\r\nstruct StrategyData {\r\n    uint64 strategyStartDate;\r\n    uint64 targetPercentage;\r\n    uint128 balance; // the balance of the strategy that BentoBox thinks is in there\r\n}\r\n\r\n/// @notice A rebasing library\r\nlibrary RebaseLibrary {\r\n    /// @notice Calculates the base value in relationship to `elastic` and `total`.\r\n    function toBase(Rebase memory total, uint256 elastic) internal pure returns (uint256 base) {\r\n        if (total.elastic == 0) {\r\n            base = elastic;\r\n        } else {\r\n            base = (elastic * total.base) / total.elastic;\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates the elastic value in relationship to `base` and `total`.\r\n    function toElastic(Rebase memory total, uint256 base) internal pure returns (uint256 elastic) {\r\n        if (total.base == 0) {\r\n            elastic = base;\r\n        } else {\r\n            elastic = (base * total.elastic) / total.base;\r\n        }\r\n    }\r\n}\r\n\r\n/// @notice Minimal BentoBox vault interface.\r\n/// @dev `token` is aliased as `address` from `IERC20` for simplicity.\r\ninterface IBentoBoxMinimal {\r\n    /// @notice Balance per ERC-20 token per account in shares.\r\n    function balanceOf(address, address) external view returns (uint256);\r\n\r\n    /// @dev Helper function to represent an `amount` of `token` in shares.\r\n    /// @param token The ERC-20 token.\r\n    /// @param amount The `token` amount.\r\n    /// @param roundUp If the result `share` should be rounded up.\r\n    /// @return share The token amount represented in shares.\r\n    function toShare(\r\n        address token,\r\n        uint256 amount,\r\n        bool roundUp\r\n    ) external view returns (uint256 share);\r\n\r\n    /// @dev Helper function to represent shares back into the `token` amount.\r\n    /// @param token The ERC-20 token.\r\n    /// @param share The amount of shares.\r\n    /// @param roundUp If the result should be rounded up.\r\n    /// @return amount The share amount back into native representation.\r\n    function toAmount(\r\n        address token,\r\n        uint256 share,\r\n        bool roundUp\r\n    ) external view returns (uint256 amount);\r\n\r\n    /// @notice Registers this contract so that users can approve it for BentoBox.\r\n    function registerProtocol() external;\r\n\r\n    /// @notice Deposit an amount of `token` represented in either `amount` or `share`.\r\n    /// @param token The ERC-20 token to deposit.\r\n    /// @param from which account to pull the tokens.\r\n    /// @param to which account to push the tokens.\r\n    /// @param amount Token amount in native representation to deposit.\r\n    /// @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\r\n    /// @return amountOut The amount deposited.\r\n    /// @return shareOut The deposited amount represented in shares.\r\n    function deposit(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\r\n\r\n    /// @notice Withdraws an amount of `token` from a user account.\r\n    /// @param token_ The ERC-20 token to withdraw.\r\n    /// @param from which user to pull the tokens.\r\n    /// @param to which user to push the tokens.\r\n    /// @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\r\n    /// @param share Like above, but `share` takes precedence over `amount`.\r\n    function withdraw(\r\n        address token_,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external returns (uint256 amountOut, uint256 shareOut);\r\n\r\n    /// @notice Transfer shares from a user account to another one.\r\n    /// @param token The ERC-20 token to transfer.\r\n    /// @param from which user to pull the tokens.\r\n    /// @param to which user to push the tokens.\r\n    /// @param share The amount of `token` in shares.\r\n    function transfer(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 share\r\n    ) external;\r\n\r\n    /// @dev Reads the Rebase `totals`from storage for a given token\r\n    function totals(address token) external view returns (Rebase memory total);\r\n\r\n    function strategyData(address token) external view returns (StrategyData memory total);\r\n\r\n    /// @dev Approves users' BentoBox assets to a \"master\" contract.\r\n    function setMasterContractApproval(\r\n        address user,\r\n        address masterContract,\r\n        bool approved,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function harvest(\r\n        address token,\r\n        bool balance,\r\n        uint256 maxChangeAmount\r\n    ) external;\r\n}\r\n"},"interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n/// @notice Trident pool interface.\r\ninterface IPool {\r\n    /// @notice Executes a swap from one token to another.\r\n    /// @dev The input tokens must've already been sent to the pool.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\r\n    function swap(bytes calldata data) external returns (uint256 finalAmountOut);\r\n\r\n    /// @notice Executes a swap from one token to another with a callback.\r\n    /// @dev This function allows borrowing the output tokens and sending the input tokens in the callback.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\r\n    function flashSwap(bytes calldata data) external returns (uint256 finalAmountOut);\r\n\r\n    /// @notice Mints liquidity tokens.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return liquidity The amount of liquidity tokens that were minted for the user.\r\n    function mint(bytes calldata data) external returns (uint256 liquidity);\r\n\r\n    /// @notice Burns liquidity tokens.\r\n    /// @dev The input LP tokens must've already been sent to the pool.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return withdrawnAmounts The amount of various output tokens that were sent to the user.\r\n    function burn(bytes calldata data) external returns (TokenAmount[] memory withdrawnAmounts);\r\n\r\n    /// @notice Burns liquidity tokens for a single output token.\r\n    /// @dev The input LP tokens must've already been sent to the pool.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return amountOut The amount of output tokens that were sent to the user.\r\n    function burnSingle(bytes calldata data) external returns (uint256 amountOut);\r\n\r\n    /// @return A unique identifier for the pool type.\r\n    function poolIdentifier() external pure returns (bytes32);\r\n\r\n    /// @return An array of tokens supported by the pool.\r\n    function getAssets() external view returns (address[] memory);\r\n\r\n    /// @notice Simulates a trade and returns the expected output.\r\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return finalAmountOut The amount of output tokens that will be sent to the user if the trade is executed.\r\n    function getAmountOut(bytes calldata data) external view returns (uint256 finalAmountOut);\r\n\r\n    /// @notice Simulates a trade and returns the expected output.\r\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\r\n    /// @param data ABI-encoded params that the pool requires.\r\n    /// @return finalAmountIn The amount of input tokens that are required from the user if the trade is executed.\r\n    function getAmountIn(bytes calldata data) external view returns (uint256 finalAmountIn);\r\n\r\n    /// @dev This event must be emitted on all swaps.\r\n    event Swap(address indexed recipient, address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\r\n\r\n    /// @dev This struct frames output tokens for burns.\r\n    struct TokenAmount {\r\n        address token;\r\n        uint256 amount;\r\n    }\r\n}\r\n"},"interfaces/ITridentCLPool.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface ITridentCLPool {\r\n  function token0() external returns (address);\r\n  function token1() external returns (address);\r\n\r\n  function swap(\r\n    address recipient,\r\n    bool zeroForOne,\r\n    int256 amountSpecified,\r\n    uint160 sqrtPriceLimitX96,\r\n    bool unwrapBento,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n}\r\n"},"interfaces/IUniswapV2Pair.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}"},"interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface IUniswapV3Pool {\r\n  function token0() external returns (address);\r\n  function token1() external returns (address);\r\n\r\n  function swap(\r\n    address recipient,\r\n    bool zeroForOne,\r\n    int256 amountSpecified,\r\n    uint160 sqrtPriceLimitX96,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n}\r\n"},"interfaces/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity 0.8.10;\r\n\r\ninterface IWETH {\r\n  function deposit() external payable;\r\n\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n\r\n  function withdraw(uint256) external;\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[859],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":860,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":859,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,859],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":190,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[226]},"id":227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"139:480:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":226,"linearizedBaseContracts":[226],"name":"IERC20Permit","nameLocation":"630:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"649:792:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:2","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"owner","nameLocation":"1479:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1471:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"spender","nameLocation":"1502:7:2","nodeType":"VariableDeclaration","scope":211,"src":"1494:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"value","nameLocation":"1527:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1519:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:2","nodeType":"VariableDeclaration","scope":211,"src":"1542:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"v","nameLocation":"1574:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1568:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":203,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"r","nameLocation":"1593:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1585:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"s","nameLocation":"1612:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1604:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:2"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"1628:0:2"},"scope":226,"src":"1446:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"1635:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:2","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"owner","nameLocation":"1958:5:2","nodeType":"VariableDeclaration","scope":219,"src":"1950:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"1988:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:2"},"scope":226,"src":"1934:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"2003:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:2","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"2214:2:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"2240:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:2"},"scope":226,"src":"2189:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":227,"src":"620:1631:2","usedErrors":[]}],"src":"114:2138:2"},"id":2},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[837],"IERC20":[190],"IERC20Permit":[226],"SafeERC20":[507]},"id":508,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":191,"src":"140:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":227,"src":"164:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":508,"sourceUnit":838,"src":"211:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"249:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":507,"linearizedBaseContracts":[507],"name":"SafeERC20","nameLocation":"715:9:3","nodeType":"ContractDefinition","nodes":[{"id":235,"libraryName":{"id":233,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"737:7:3"},"nodeType":"UsingForDirective","src":"731:26:3","typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":257,"nodeType":"Block","src":"865:103:3","statements":[{"expression":{"arguments":[{"id":246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"895:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":249,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"925:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"925:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":252,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"950:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"954:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":247,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"902:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":245,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"875:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"875:86:3"}]},"id":258,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:3","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"token","nameLocation":"801:5:3","nodeType":"VariableDeclaration","scope":258,"src":"794:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":237,"nodeType":"UserDefinedTypeName","pathNode":{"id":236,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"794:6:3"},"referencedDeclaration":190,"src":"794:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"824:2:3","nodeType":"VariableDeclaration","scope":258,"src":"816:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"844:5:3","nodeType":"VariableDeclaration","scope":258,"src":"836:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:3"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"865:0:3"},"scope":507,"src":"763:205:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"1102:113:3","statements":[{"expression":{"arguments":[{"id":271,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1132:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":274,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1162:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"1162:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":277,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1191:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1197:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1201:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":272,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"1139:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":270,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"1112:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"1112:96:3"}]},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"token","nameLocation":"1016:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1009:6:3"},"referencedDeclaration":190,"src":"1009:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"from","nameLocation":"1039:4:3","nodeType":"VariableDeclaration","scope":284,"src":"1031:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"to","nameLocation":"1061:2:3","nodeType":"VariableDeclaration","scope":284,"src":"1053:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"value","nameLocation":"1081:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1073:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:3"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"1102:0:3"},"scope":507,"src":"974:241:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":327,"nodeType":"Block","src":"1581:497:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1830:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":304,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1870:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:3","typeDescriptions":{}}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1877:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":300,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"1846:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"1846:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1808:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"1808:163:3"},{"expression":{"arguments":[{"id":316,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2001:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":319,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2031:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2031:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":322,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2064:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":317,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2008:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":315,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"1981:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":326,"nodeType":"ExpressionStatement","src":"1981:90:3"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1221:249:3","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":328,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:3","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"token","nameLocation":"1512:5:3","nodeType":"VariableDeclaration","scope":328,"src":"1505:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":287,"nodeType":"UserDefinedTypeName","pathNode":{"id":286,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1505:6:3"},"referencedDeclaration":190,"src":"1505:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"spender","nameLocation":"1535:7:3","nodeType":"VariableDeclaration","scope":328,"src":"1527:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"value","nameLocation":"1560:5:3","nodeType":"VariableDeclaration","scope":328,"src":"1552:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1581:0:3"},"scope":507,"src":"1475:603:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":363,"nodeType":"Block","src":"2200:194:3","statements":[{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:3","nodeType":"VariableDeclaration","scope":363,"src":"2210:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2257:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:3","typeDescriptions":{}}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2264:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":340,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2233:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2233:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2275:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:3"},{"expression":{"arguments":[{"id":352,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2310:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":355,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2340:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2373:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2317:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2290:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"2290:97:3"}]},"id":364,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:3","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"token","nameLocation":"2131:5:3","nodeType":"VariableDeclaration","scope":364,"src":"2124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":330,"nodeType":"UserDefinedTypeName","pathNode":{"id":329,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2124:6:3"},"referencedDeclaration":190,"src":"2124:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"spender","nameLocation":"2154:7:3","nodeType":"VariableDeclaration","scope":364,"src":"2146:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"value","nameLocation":"2179:5:3","nodeType":"VariableDeclaration","scope":364,"src":"2171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:3"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"2200:0:3"},"scope":507,"src":"2084:310:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"2516:370:3","statements":[{"id":410,"nodeType":"UncheckedBlock","src":"2526:354:3","statements":[{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:3","nodeType":"VariableDeclaration","scope":410,"src":"2550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":384,"initialValue":{"arguments":[{"arguments":[{"id":380,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2597:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$507","typeString":"library SafeERC20"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:3","typeDescriptions":{}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2604:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2573:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2573:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2634:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2650:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2626:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"2626:75:3"},{"assignments":[393],"declarations":[{"constant":false,"id":393,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:3","nodeType":"VariableDeclaration","scope":410,"src":"2715:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":397,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2738:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2753:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:3"},{"expression":{"arguments":[{"id":399,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2792:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":402,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2822:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2822:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2846:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2855:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":400,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2799:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":398,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2772:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"2772:97:3"}]}]},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"token","nameLocation":"2447:5:3","nodeType":"VariableDeclaration","scope":412,"src":"2440:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":366,"nodeType":"UserDefinedTypeName","pathNode":{"id":365,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2440:6:3"},"referencedDeclaration":190,"src":"2440:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"spender","nameLocation":"2470:7:3","nodeType":"VariableDeclaration","scope":412,"src":"2462:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"value","nameLocation":"2495:5:3","nodeType":"VariableDeclaration","scope":412,"src":"2487:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:3"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"2516:0:3"},"scope":507,"src":"2400:486:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"3107:257:3","statements":[{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:3","nodeType":"VariableDeclaration","scope":467,"src":"3117:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3152:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":434,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3139:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3139:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:3"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3181:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3188:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3197:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":445,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3204:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3214:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":447,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3217:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":448,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3220:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":439,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3168:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":211,"src":"3168:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"3168:54:3"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:3","nodeType":"VariableDeclaration","scope":467,"src":"3232:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":457,"initialValue":{"arguments":[{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"3266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3253:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"3253:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3290:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":460,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3304:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3282:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"3282:75:3"}]},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:3","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"token","nameLocation":"2934:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2921:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"},"typeName":{"id":414,"nodeType":"UserDefinedTypeName","pathNode":{"id":413,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":226,"src":"2921:12:3"},"referencedDeclaration":226,"src":"2921:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"owner","nameLocation":"2957:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2949:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"spender","nameLocation":"2980:7:3","nodeType":"VariableDeclaration","scope":468,"src":"2972:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"value","nameLocation":"3005:5:3","nodeType":"VariableDeclaration","scope":468,"src":"2997:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:3","nodeType":"VariableDeclaration","scope":468,"src":"3020:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"v","nameLocation":"3052:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3046:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":424,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"r","nameLocation":"3071:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3063:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"s","nameLocation":"3090:1:3","nodeType":"VariableDeclaration","scope":468,"src":"3082:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:3"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"3107:0:3"},"scope":507,"src":"2892:472:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":505,"nodeType":"Block","src":"3817:636:3","statements":[{"assignments":[478],"declarations":[{"constant":false,"id":478,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:3","nodeType":"VariableDeclaration","scope":505,"src":"4166:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":487,"initialValue":{"arguments":[{"id":484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4220:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4200:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:3","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":597,"src":"4192:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":488,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4275:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":504,"nodeType":"IfStatement","src":"4271:176:3","trueBody":{"id":503,"nodeType":"Block","src":"4298:149:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":495,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4370:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:3","typeDescriptions":{}}}],"id":498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":493,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4359:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4351:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"4351:85:3"}]}}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"3370:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":506,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:3","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"token","nameLocation":"3783:5:3","nodeType":"VariableDeclaration","scope":506,"src":"3776:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":471,"nodeType":"UserDefinedTypeName","pathNode":{"id":470,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3776:6:3"},"referencedDeclaration":190,"src":"3776:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"data","nameLocation":"3803:4:3","nodeType":"VariableDeclaration","scope":506,"src":"3790:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"3817:0:3"},"scope":507,"src":"3747:706:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":508,"src":"707:3748:3","usedErrors":[]}],"src":"115:4341:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":509,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":524,"nodeType":"Block","src":"1241:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":518,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"1465:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":517,"id":523,"nodeType":"Return","src":"1458:30:4"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"216:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"1203:7:4","nodeType":"VariableDeclaration","scope":525,"src":"1195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:4"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"1235:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:4"},"scope":837,"src":"1175:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"2483:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2509:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:4","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":539,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2526:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2493:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"2493:73:4"},{"assignments":[545,null],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"success","nameLocation":"2583:7:4","nodeType":"VariableDeclaration","scope":558,"src":"2578:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":552,"initialValue":{"arguments":[{"hexValue":"","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":546,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2596:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2618:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:4"},{"expression":{"arguments":[{"id":554,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2647:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2639:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"2639:78:4"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"1501:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:4","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:4","nodeType":"VariableDeclaration","scope":559,"src":"2431:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"amount","nameLocation":"2466:6:4","nodeType":"VariableDeclaration","scope":559,"src":"2458:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:4"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"2483:0:4"},"scope":837,"src":"2412:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":576,"nodeType":"Block","src":"3555:96:4","statements":[{"expression":{"arguments":[{"id":570,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3594:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3602:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":569,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"3572:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":568,"id":575,"nodeType":"Return","src":"3565:79:4"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"2730:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":577,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"target","nameLocation":"3496:6:4","nodeType":"VariableDeclaration","scope":577,"src":"3488:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"3517:4:4","nodeType":"VariableDeclaration","scope":577,"src":"3504:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":577,"src":"3541:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:4"},"scope":837,"src":"3466:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"4020:76:4","statements":[{"expression":{"arguments":[{"id":590,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4059:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4067:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":593,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4076:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":589,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"4037:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":588,"id":595,"nodeType":"Return","src":"4030:59:4"}]},"documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"3657:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:4","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"target","nameLocation":"3912:6:4","nodeType":"VariableDeclaration","scope":597,"src":"3904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"data","nameLocation":"3941:4:4","nodeType":"VariableDeclaration","scope":597,"src":"3928:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:4","nodeType":"VariableDeclaration","scope":597,"src":"3955:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":583,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4006:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":586,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:4"},"scope":837,"src":"3873:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"4601:111:4","statements":[{"expression":{"arguments":[{"id":610,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"4640:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4648:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4654:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":609,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[617,661],"referencedDeclaration":661,"src":"4618:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":608,"id":615,"nodeType":"Return","src":"4611:94:4"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4102:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:4","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"target","nameLocation":"4506:6:4","nodeType":"VariableDeclaration","scope":617,"src":"4498:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"data","nameLocation":"4535:4:4","nodeType":"VariableDeclaration","scope":617,"src":"4522:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"4557:5:4","nodeType":"VariableDeclaration","scope":617,"src":"4549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:4"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"4587:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":606,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:4"},"scope":837,"src":"4458:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":660,"nodeType":"Block","src":"5139:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5165:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$837","typeString":"library Address"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:4","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5182:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"5149:81:4"},{"assignments":[643,645],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"success","nameLocation":"5246:7:4","nodeType":"VariableDeclaration","scope":660,"src":"5241:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":642,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:4","nodeType":"VariableDeclaration","scope":660,"src":"5255:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":644,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":652,"initialValue":{"arguments":[{"id":650,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5308:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":646,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5282:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:4"},{"expression":{"arguments":[{"id":654,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5357:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5365:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":656,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5374:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":657,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5386:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":653,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5330:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":630,"id":659,"nodeType":"Return","src":"5323:76:4"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4718:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":661,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:4","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"target","nameLocation":"5008:6:4","nodeType":"VariableDeclaration","scope":661,"src":"5000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"data","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":661,"src":"5024:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"value","nameLocation":"5059:5:4","nodeType":"VariableDeclaration","scope":661,"src":"5051:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:4","nodeType":"VariableDeclaration","scope":661,"src":"5074:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":625,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:4"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"5125:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:4"},"scope":837,"src":"4960:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":677,"nodeType":"Block","src":"5683:97:4","statements":[{"expression":{"arguments":[{"id":672,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5719:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"5727:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":671,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[678,707],"referencedDeclaration":707,"src":"5700:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":670,"id":676,"nodeType":"Return","src":"5693:80:4"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"5412:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":678,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:4","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"target","nameLocation":"5619:6:4","nodeType":"VariableDeclaration","scope":678,"src":"5611:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"data","nameLocation":"5640:4:4","nodeType":"VariableDeclaration","scope":678,"src":"5627:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":665,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:4"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"5669:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":668,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:4"},"scope":837,"src":"5583:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"6122:168:4","statements":[{"assignments":[691,693],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"success","nameLocation":"6138:7:4","nodeType":"VariableDeclaration","scope":706,"src":"6133:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":690,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:4","nodeType":"VariableDeclaration","scope":706,"src":"6147:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":692,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":698,"initialValue":{"arguments":[{"id":696,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":694,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6174:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:4"},{"expression":{"arguments":[{"id":700,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6241:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"6249:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":702,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"6258:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":703,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6270:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":699,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":689,"id":705,"nodeType":"Return","src":"6207:76:4"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"5786:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:4","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"target","nameLocation":"6009:6:4","nodeType":"VariableDeclaration","scope":707,"src":"6001:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"data","nameLocation":"6038:4:4","nodeType":"VariableDeclaration","scope":707,"src":"6025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:4","nodeType":"VariableDeclaration","scope":707,"src":"6052:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:4"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"6108:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":687,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:4"},"scope":837,"src":"5964:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":723,"nodeType":"Block","src":"6566:101:4","statements":[{"expression":{"arguments":[{"id":718,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6612:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":717,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[724,753],"referencedDeclaration":753,"src":"6583:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":716,"id":722,"nodeType":"Return","src":"6576:84:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"6296:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:4","nodeType":"FunctionDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"target","nameLocation":"6507:6:4","nodeType":"VariableDeclaration","scope":724,"src":"6499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"data","nameLocation":"6528:4:4","nodeType":"VariableDeclaration","scope":724,"src":"6515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:4"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"6552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":714,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:4"},"scope":837,"src":"6469:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"7008:170:4","statements":[{"assignments":[737,739],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"success","nameLocation":"7024:7:4","nodeType":"VariableDeclaration","scope":752,"src":"7019:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:4","nodeType":"VariableDeclaration","scope":752,"src":"7033:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"7080:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":740,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7060:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:4"},{"expression":{"arguments":[{"id":746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7129:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":748,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"7146:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":749,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"7158:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":745,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7102:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":735,"id":751,"nodeType":"Return","src":"7095:76:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"6673:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:4","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"target","nameLocation":"6900:6:4","nodeType":"VariableDeclaration","scope":753,"src":"6892:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"data","nameLocation":"6929:4:4","nodeType":"VariableDeclaration","scope":753,"src":"6916:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:4","nodeType":"VariableDeclaration","scope":753,"src":"6943:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:4"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"6994:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:4"},"scope":837,"src":"6853:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"7660:434:4","statements":[{"condition":{"id":767,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7674:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":789,"nodeType":"Block","src":"8030:58:4","statements":[{"expression":{"arguments":[{"id":785,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8052:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":786,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8064:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":784,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8044:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"8044:33:4"}]},"id":790,"nodeType":"IfStatement","src":"7670:418:4","trueBody":{"id":783,"nodeType":"Block","src":"7683:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":768,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"7701:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"7697:286:4","trueBody":{"id":779,"nodeType":"Block","src":"7725:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":774,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"7927:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":773,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"7916:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"7908:60:4"}]}},{"expression":{"id":781,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8003:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":766,"id":782,"nodeType":"Return","src":"7996:17:4"}]}}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"7184:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:4","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"7519:6:4","nodeType":"VariableDeclaration","scope":792,"src":"7511:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"success","nameLocation":"7540:7:4","nodeType":"VariableDeclaration","scope":792,"src":"7535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:4","nodeType":"VariableDeclaration","scope":792,"src":"7557:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:4","nodeType":"VariableDeclaration","scope":792,"src":"7590:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":761,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:4"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"7646:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":764,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:4"},"scope":837,"src":"7466:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"8475:135:4","statements":[{"condition":{"id":804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"8489:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":813,"nodeType":"Block","src":"8546:58:4","statements":[{"expression":{"arguments":[{"id":809,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8568:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":810,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"8580:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":808,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8560:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"8560:33:4"}]},"id":814,"nodeType":"IfStatement","src":"8485:119:4","trueBody":{"id":807,"nodeType":"Block","src":"8498:42:4","statements":[{"expression":{"id":805,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":803,"id":806,"nodeType":"Return","src":"8512:17:4"}]}}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"8100:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:4","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"success","nameLocation":"8355:7:4","nodeType":"VariableDeclaration","scope":816,"src":"8350:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:4","nodeType":"VariableDeclaration","scope":816,"src":"8372:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":796,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:4","nodeType":"VariableDeclaration","scope":816,"src":"8405:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":798,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:4"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"8461:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":801,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:4"},"scope":837,"src":"8315:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"8699:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8775:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":833,"nodeType":"Block","src":"9105:45:4","statements":[{"expression":{"arguments":[{"id":830,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9126:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":829,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"9119:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"9119:20:4"}]},"id":834,"nodeType":"IfStatement","src":"8771:379:4","trueBody":{"id":828,"nodeType":"Block","src":"8798:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:4"},"nodeType":"YulFunctionCall","src":"8997:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:4"},"nodeType":"YulFunctionCall","src":"9038:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:4"},"nodeType":"YulFunctionCall","src":"9031:44:4"},"nodeType":"YulExpressionStatement","src":"9031:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":818,"isOffset":false,"isSlot":false,"src":"9003:10:4","valueSize":1},{"declaration":818,"isOffset":false,"isSlot":false,"src":"9046:10:4","valueSize":1}],"id":827,"nodeType":"InlineAssembly","src":"8947:142:4"}]}}]},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:4","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:4","nodeType":"VariableDeclaration","scope":836,"src":"8633:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":817,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:4","nodeType":"VariableDeclaration","scope":836,"src":"8658:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":819,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:4"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"8699:0:4"},"scope":837,"src":"8616:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":838,"src":"194:8964:4","usedErrors":[]}],"src":"101:9058:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[859]},"id":860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":859,"linearizedBaseContracts":[859],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":848,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":844,"id":847,"nodeType":"Return","src":"712:17:5"}]},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":859,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":857,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":853,"id":856,"nodeType":"Return","src":"819:15:5"}]},"id":858,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":859,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":860,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"contracts/InputStream.sol":{"ast":{"absolutePath":"contracts/InputStream.sol","exportedSymbols":{"InputStream":[953]},"id":954,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":861,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"42:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"InputStream","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":953,"linearizedBaseContracts":[953],"name":"InputStream","nameLocation":"77:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":869,"nodeType":"Block","src":"174:206:6","statements":[{"AST":{"nodeType":"YulBlock","src":"190:185:6","statements":[{"nodeType":"YulAssignment","src":"199:21:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"215:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"209:5:6"},"nodeType":"YulFunctionCall","src":"209:11:6"},"variableNames":[{"name":"stream","nodeType":"YulIdentifier","src":"199:6:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"235:4:6","type":"","value":"0x40"},{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"245:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"253:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"241:3:6"},"nodeType":"YulFunctionCall","src":"241:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:6"},"nodeType":"YulFunctionCall","src":"228:29:6"},"nodeType":"YulExpressionStatement","src":"228:29:6"},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"272:6:6"},{"name":"data","nodeType":"YulIdentifier","src":"280:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"265:6:6"},"nodeType":"YulFunctionCall","src":"265:20:6"},"nodeType":"YulExpressionStatement","src":"265:20:6"},{"nodeType":"YulVariableDeclaration","src":"293:25:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"313:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"307:5:6"},"nodeType":"YulFunctionCall","src":"307:11:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"297:6:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"337:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:6"},"nodeType":"YulFunctionCall","src":"333:15:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"354:4:6"},{"name":"length","nodeType":"YulIdentifier","src":"360:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"350:3:6"},"nodeType":"YulFunctionCall","src":"350:17:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"326:6:6"},"nodeType":"YulFunctionCall","src":"326:42:6"},"nodeType":"YulExpressionStatement","src":"326:42:6"}]},"evmVersion":"london","externalReferences":[{"declaration":863,"isOffset":false,"isSlot":false,"src":"280:4:6","valueSize":1},{"declaration":863,"isOffset":false,"isSlot":false,"src":"313:4:6","valueSize":1},{"declaration":863,"isOffset":false,"isSlot":false,"src":"354:4:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"199:6:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"245:6:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"272:6:6","valueSize":1},{"declaration":866,"isOffset":false,"isSlot":false,"src":"337:6:6","valueSize":1}],"id":868,"nodeType":"InlineAssembly","src":"181:194:6"}]},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"createStream","nameLocation":"103:12:6","nodeType":"FunctionDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"data","nameLocation":"129:4:6","nodeType":"VariableDeclaration","scope":870,"src":"116:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":862,"name":"bytes","nodeType":"ElementaryTypeName","src":"116:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"115:19:6"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"stream","nameLocation":"166:6:6","nodeType":"VariableDeclaration","scope":870,"src":"158:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"158:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"157:16:6"},"scope":953,"src":"94:286:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":888,"nodeType":"Block","src":"451:162:6","statements":[{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"pos","nameLocation":"466:3:6","nodeType":"VariableDeclaration","scope":888,"src":"458:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":879,"nodeType":"VariableDeclarationStatement","src":"458:11:6"},{"assignments":[881],"declarations":[{"constant":false,"id":881,"mutability":"mutable","name":"finish","nameLocation":"484:6:6","nodeType":"VariableDeclaration","scope":888,"src":"476:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"476:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":882,"nodeType":"VariableDeclarationStatement","src":"476:14:6"},{"AST":{"nodeType":"YulBlock","src":"506:76:6","statements":[{"nodeType":"YulAssignment","src":"515:20:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"528:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:6"},"nodeType":"YulFunctionCall","src":"522:13:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"515:3:6"}]},{"nodeType":"YulAssignment","src":"543:32:6","value":{"arguments":[{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"563:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"571:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"559:3:6"},"nodeType":"YulFunctionCall","src":"559:15:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"553:5:6"},"nodeType":"YulFunctionCall","src":"553:22:6"},"variableNames":[{"name":"finish","nodeType":"YulIdentifier","src":"543:6:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":881,"isOffset":false,"isSlot":false,"src":"543:6:6","valueSize":1},{"declaration":878,"isOffset":false,"isSlot":false,"src":"515:3:6","valueSize":1},{"declaration":872,"isOffset":false,"isSlot":false,"src":"528:6:6","valueSize":1},{"declaration":872,"isOffset":false,"isSlot":false,"src":"563:6:6","valueSize":1}],"id":883,"nodeType":"InlineAssembly","src":"497:85:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"595:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":885,"name":"finish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"601:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"595:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":876,"id":887,"nodeType":"Return","src":"588:19:6"}]},"id":889,"implemented":true,"kind":"function","modifiers":[],"name":"isNotEmpty","nameLocation":"395:10:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"stream","nameLocation":"414:6:6","nodeType":"VariableDeclaration","scope":889,"src":"406:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:16:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"445:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":874,"name":"bool","nodeType":"ElementaryTypeName","src":"445:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"444:6:6"},"scope":953,"src":"386:227:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":897,"nodeType":"Block","src":"688:139:6","statements":[{"AST":{"nodeType":"YulBlock","src":"704:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"713:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"730:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"724:5:6"},"nodeType":"YulFunctionCall","src":"724:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"717:3:6","type":""}]},{"nodeType":"YulAssignment","src":"745:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"756:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"752:3:6"},"nodeType":"YulFunctionCall","src":"752:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"745:3:6"}]},{"nodeType":"YulAssignment","src":"771:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"784:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:6"},"nodeType":"YulFunctionCall","src":"778:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"771:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"803:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"811:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"796:6:6"},"nodeType":"YulFunctionCall","src":"796:19:6"},"nodeType":"YulExpressionStatement","src":"796:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":894,"isOffset":false,"isSlot":false,"src":"771:3:6","valueSize":1},{"declaration":891,"isOffset":false,"isSlot":false,"src":"730:6:6","valueSize":1},{"declaration":891,"isOffset":false,"isSlot":false,"src":"803:6:6","valueSize":1}],"id":896,"nodeType":"InlineAssembly","src":"695:127:6"}]},"id":898,"implemented":true,"kind":"function","modifiers":[],"name":"readUint8","nameLocation":"628:9:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"stream","nameLocation":"646:6:6","nodeType":"VariableDeclaration","scope":898,"src":"638:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"637:16:6"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"res","nameLocation":"683:3:6","nodeType":"VariableDeclaration","scope":898,"src":"677:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":893,"name":"uint8","nodeType":"ElementaryTypeName","src":"677:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"676:11:6"},"scope":953,"src":"619:208:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"904:139:6","statements":[{"AST":{"nodeType":"YulBlock","src":"920:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"929:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"946:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"940:5:6"},"nodeType":"YulFunctionCall","src":"940:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"933:3:6","type":""}]},{"nodeType":"YulAssignment","src":"961:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"972:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"977:1:6","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"968:3:6"},"nodeType":"YulFunctionCall","src":"968:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"961:3:6"}]},{"nodeType":"YulAssignment","src":"987:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1000:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"994:5:6"},"nodeType":"YulFunctionCall","src":"994:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"987:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1019:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1012:6:6"},"nodeType":"YulFunctionCall","src":"1012:19:6"},"nodeType":"YulExpressionStatement","src":"1012:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":903,"isOffset":false,"isSlot":false,"src":"987:3:6","valueSize":1},{"declaration":900,"isOffset":false,"isSlot":false,"src":"1019:6:6","valueSize":1},{"declaration":900,"isOffset":false,"isSlot":false,"src":"946:6:6","valueSize":1}],"id":905,"nodeType":"InlineAssembly","src":"911:127:6"}]},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"readUint16","nameLocation":"842:10:6","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"stream","nameLocation":"861:6:6","nodeType":"VariableDeclaration","scope":907,"src":"853:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"852:16:6"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"res","nameLocation":"899:3:6","nodeType":"VariableDeclaration","scope":907,"src":"892:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":902,"name":"uint16","nodeType":"ElementaryTypeName","src":"892:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"891:12:6"},"scope":953,"src":"833:210:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"1120:139:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1136:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1145:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1162:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1156:5:6"},"nodeType":"YulFunctionCall","src":"1156:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1149:3:6","type":""}]},{"nodeType":"YulAssignment","src":"1177:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1188:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1193:1:6","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1184:3:6"},"nodeType":"YulFunctionCall","src":"1184:11:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1177:3:6"}]},{"nodeType":"YulAssignment","src":"1203:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1216:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1210:5:6"},"nodeType":"YulFunctionCall","src":"1210:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"1203:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1235:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1243:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1228:6:6"},"nodeType":"YulFunctionCall","src":"1228:19:6"},"nodeType":"YulExpressionStatement","src":"1228:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":912,"isOffset":false,"isSlot":false,"src":"1203:3:6","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"1162:6:6","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"1235:6:6","valueSize":1}],"id":914,"nodeType":"InlineAssembly","src":"1127:127:6"}]},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"readUint32","nameLocation":"1058:10:6","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"stream","nameLocation":"1077:6:6","nodeType":"VariableDeclaration","scope":916,"src":"1069:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1068:16:6"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"res","nameLocation":"1115:3:6","nodeType":"VariableDeclaration","scope":916,"src":"1108:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":911,"name":"uint32","nodeType":"ElementaryTypeName","src":"1108:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1107:12:6"},"scope":953,"src":"1049:210:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":924,"nodeType":"Block","src":"1335:140:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1351:119:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1360:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1377:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1371:5:6"},"nodeType":"YulFunctionCall","src":"1371:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1364:3:6","type":""}]},{"nodeType":"YulAssignment","src":"1392:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1403:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1408:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:6"},"nodeType":"YulFunctionCall","src":"1399:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1392:3:6"}]},{"nodeType":"YulAssignment","src":"1419:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1432:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1426:5:6"},"nodeType":"YulFunctionCall","src":"1426:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"1419:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1451:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1459:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1444:6:6"},"nodeType":"YulFunctionCall","src":"1444:19:6"},"nodeType":"YulExpressionStatement","src":"1444:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":921,"isOffset":false,"isSlot":false,"src":"1419:3:6","valueSize":1},{"declaration":918,"isOffset":false,"isSlot":false,"src":"1377:6:6","valueSize":1},{"declaration":918,"isOffset":false,"isSlot":false,"src":"1451:6:6","valueSize":1}],"id":923,"nodeType":"InlineAssembly","src":"1342:128:6"}]},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"readUint","nameLocation":"1274:8:6","nodeType":"FunctionDefinition","parameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"stream","nameLocation":"1291:6:6","nodeType":"VariableDeclaration","scope":925,"src":"1283:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:16:6"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":921,"mutability":"mutable","name":"res","nameLocation":"1330:3:6","nodeType":"VariableDeclaration","scope":925,"src":"1322:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1321:13:6"},"scope":953,"src":"1265:210:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":933,"nodeType":"Block","src":"1554:140:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1570:119:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1579:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1596:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1590:5:6"},"nodeType":"YulFunctionCall","src":"1590:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1583:3:6","type":""}]},{"nodeType":"YulAssignment","src":"1611:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1622:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:6"},"nodeType":"YulFunctionCall","src":"1618:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1611:3:6"}]},{"nodeType":"YulAssignment","src":"1638:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1651:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1645:5:6"},"nodeType":"YulFunctionCall","src":"1645:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"1638:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1670:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1678:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1663:6:6"},"nodeType":"YulFunctionCall","src":"1663:19:6"},"nodeType":"YulExpressionStatement","src":"1663:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":930,"isOffset":false,"isSlot":false,"src":"1638:3:6","valueSize":1},{"declaration":927,"isOffset":false,"isSlot":false,"src":"1596:6:6","valueSize":1},{"declaration":927,"isOffset":false,"isSlot":false,"src":"1670:6:6","valueSize":1}],"id":932,"nodeType":"InlineAssembly","src":"1561:128:6"}]},"id":934,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"1490:11:6","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"stream","nameLocation":"1510:6:6","nodeType":"VariableDeclaration","scope":934,"src":"1502:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1502:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1501:16:6"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"res","nameLocation":"1549:3:6","nodeType":"VariableDeclaration","scope":934,"src":"1541:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1541:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1540:13:6"},"scope":953,"src":"1481:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"1773:140:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1789:119:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1798:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1815:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1809:5:6"},"nodeType":"YulFunctionCall","src":"1809:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1802:3:6","type":""}]},{"nodeType":"YulAssignment","src":"1830:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1841:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:6","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1837:3:6"},"nodeType":"YulFunctionCall","src":"1837:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1830:3:6"}]},{"nodeType":"YulAssignment","src":"1857:17:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1870:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1864:5:6"},"nodeType":"YulFunctionCall","src":"1864:10:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"1857:3:6"}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"1889:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1897:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1882:6:6"},"nodeType":"YulFunctionCall","src":"1882:19:6"},"nodeType":"YulExpressionStatement","src":"1882:19:6"}]},"evmVersion":"london","externalReferences":[{"declaration":939,"isOffset":false,"isSlot":false,"src":"1857:3:6","valueSize":1},{"declaration":936,"isOffset":false,"isSlot":false,"src":"1815:6:6","valueSize":1},{"declaration":936,"isOffset":false,"isSlot":false,"src":"1889:6:6","valueSize":1}],"id":941,"nodeType":"InlineAssembly","src":"1780:128:6"}]},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"1709:11:6","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"stream","nameLocation":"1729:6:6","nodeType":"VariableDeclaration","scope":943,"src":"1721:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1720:16:6"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"res","nameLocation":"1768:3:6","nodeType":"VariableDeclaration","scope":943,"src":"1760:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1759:13:6"},"scope":953,"src":"1700:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":951,"nodeType":"Block","src":"1995:160:6","statements":[{"AST":{"nodeType":"YulBlock","src":"2011:139:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2020:24:6","value":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"2037:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2031:5:6"},"nodeType":"YulFunctionCall","src":"2031:13:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2024:3:6","type":""}]},{"nodeType":"YulAssignment","src":"2052:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2063:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2068:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2059:3:6"},"nodeType":"YulFunctionCall","src":"2059:12:6"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"2052:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"2079:24:6","value":{"arguments":[{"name":"res","nodeType":"YulIdentifier","src":"2099:3:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2093:5:6"},"nodeType":"YulFunctionCall","src":"2093:10:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2083:6:6","type":""}]},{"expression":{"arguments":[{"name":"stream","nodeType":"YulIdentifier","src":"2118:6:6"},{"arguments":[{"name":"res","nodeType":"YulIdentifier","src":"2130:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2135:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2126:3:6"},"nodeType":"YulFunctionCall","src":"2126:16:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2111:6:6"},"nodeType":"YulFunctionCall","src":"2111:32:6"},"nodeType":"YulExpressionStatement","src":"2111:32:6"}]},"evmVersion":"london","externalReferences":[{"declaration":948,"isOffset":false,"isSlot":false,"src":"2052:3:6","valueSize":1},{"declaration":948,"isOffset":false,"isSlot":false,"src":"2099:3:6","valueSize":1},{"declaration":948,"isOffset":false,"isSlot":false,"src":"2130:3:6","valueSize":1},{"declaration":945,"isOffset":false,"isSlot":false,"src":"2037:6:6","valueSize":1},{"declaration":945,"isOffset":false,"isSlot":false,"src":"2118:6:6","valueSize":1}],"id":950,"nodeType":"InlineAssembly","src":"2002:148:6"}]},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"1928:9:6","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"stream","nameLocation":"1946:6:6","nodeType":"VariableDeclaration","scope":952,"src":"1938:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1938:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1937:16:6"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"res","nameLocation":"1990:3:6","nodeType":"VariableDeclaration","scope":952,"src":"1977:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":947,"name":"bytes","nodeType":"ElementaryTypeName","src":"1977:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1976:18:6"},"scope":953,"src":"1919:236:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":954,"src":"69:2089:6","usedErrors":[]}],"src":"42:2118:6"},"id":6},"contracts/RouteProcessor.sol":{"ast":{"absolutePath":"contracts/RouteProcessor.sol","exportedSymbols":{"Address":[837],"IBentoBoxMinimal":[3842],"IERC20":[190],"IERC20Permit":[226],"IPool":[3936],"IUniswapV2Pair":[4210],"IWETH":[4260],"InputStream":[953],"NATIVE_ADDRESS":[964],"Rebase":[3635],"RebaseLibrary":[3712],"RouteProcessor":[2132],"SafeERC20":[507],"StrategyData":[3642]},"id":2133,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":955,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"42:23:7"},{"absolutePath":"interfaces/IUniswapV2Pair.sol","file":"../interfaces/IUniswapV2Pair.sol","id":956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":4211,"src":"69:42:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IBentoBoxMinimal.sol","file":"../interfaces/IBentoBoxMinimal.sol","id":957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":3843,"src":"113:44:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IPool.sol","file":"../interfaces/IPool.sol","id":958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":3937,"src":"159:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IWETH.sol","file":"../interfaces/IWETH.sol","id":959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":4261,"src":"194:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/InputStream.sol","file":"./InputStream.sol","id":960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":954,"src":"229:27:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2133,"sourceUnit":508,"src":"258:65:7","symbolAliases":[],"unitAlias":""},{"constant":true,"id":964,"mutability":"constant","name":"NATIVE_ADDRESS","nameLocation":"344:14:7","nodeType":"VariableDeclaration","scope":2133,"src":"327:76:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"internal"},{"abstract":false,"baseContracts":[],"canonicalName":"RouteProcessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"408:77:7","text":"@title A route processor for the Sushi Aggregator\n @author Okavango"},"fullyImplemented":true,"id":2132,"linearizedBaseContracts":[2132],"name":"RouteProcessor","nameLocation":"494:14:7","nodeType":"ContractDefinition","nodes":[{"id":969,"libraryName":{"id":966,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":507,"src":"520:9:7"},"nodeType":"UsingForDirective","src":"514:27:7","typeName":{"id":968,"nodeType":"UserDefinedTypeName","pathNode":{"id":967,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"534:6:7"},"referencedDeclaration":190,"src":"534:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}},{"id":972,"libraryName":{"id":970,"name":"InputStream","nodeType":"IdentifierPath","referencedDeclaration":953,"src":"551:11:7"},"nodeType":"UsingForDirective","src":"545:30:7","typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"6b2ace87","id":975,"mutability":"immutable","name":"bentoBox","nameLocation":"615:8:7","nodeType":"VariableDeclaration","scope":2132,"src":"581:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"},"typeName":{"id":974,"nodeType":"UserDefinedTypeName","pathNode":{"id":973,"name":"IBentoBoxMinimal","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"581:16:7"},"referencedDeclaration":3842,"src":"581:16:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"visibility":"public"},{"constant":false,"id":978,"mutability":"mutable","name":"unlocked","nameLocation":"643:8:7","nodeType":"VariableDeclaration","scope":2132,"src":"630:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint","nodeType":"ElementaryTypeName","src":"630:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"654:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":996,"nodeType":"Block","src":"676:117:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"693:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"693:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f72206973206c6f636b6564","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"708:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2","typeString":"literal_string \"RouteProcessor is locked\""},"value":"RouteProcessor is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2","typeString":"literal_string \"RouteProcessor is locked\""}],"id":980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"685:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"ExpressionStatement","src":"685:50:7"},{"expression":{"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":987,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"744:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"755:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"744:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":990,"nodeType":"ExpressionStatement","src":"744:12:7"},{"id":991,"nodeType":"PlaceholderStatement","src":"765:1:7"},{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":992,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"775:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"775:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"775:12:7"}]},"id":997,"name":"lock","nameLocation":"669:4:7","nodeType":"ModifierDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"673:2:7"},"src":"660:133:7","virtual":false,"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"830:51:7","statements":[{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1002,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"837:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1004,"name":"_bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"865:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1003,"name":"IBentoBoxMinimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"848:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBentoBoxMinimal_$3842_$","typeString":"type(contract IBentoBoxMinimal)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"848:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"src":"837:38:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1007,"nodeType":"ExpressionStatement","src":"837:38:7"}]},"id":1009,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"_bentoBox","nameLocation":"819:9:7","nodeType":"VariableDeclaration","scope":1009,"src":"811:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"810:19:7"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"830:0:7"},"scope":2132,"src":"799:82:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1013,"nodeType":"Block","src":"951:2:7","statements":[]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"887:33:7","text":"@notice For native unwrapping"},"id":1014,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"931:2:7"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"951:0:7"},"scope":2132,"src":"924:29:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1043,"nodeType":"Block","src":"1510:94:7","statements":[{"expression":{"arguments":[{"id":1035,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"1554:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1037,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1564:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1574:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1588:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1592:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1034,"name":"processRouteInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1524:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address,uint256,address,bytes memory) returns (uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1524:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1033,"id":1042,"nodeType":"Return","src":"1517:81:7"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"959:333:7","text":"@notice Processes the route generated off-chain. Has a lock\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"functionSelector":"2646478b","id":1044,"implemented":true,"kind":"function","modifiers":[{"id":1030,"kind":"modifierInvocation","modifierName":{"id":1029,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":997,"src":"1477:4:7"},"nodeType":"ModifierInvocation","src":"1477:4:7"}],"name":"processRoute","nameLocation":"1305:12:7","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"tokenIn","nameLocation":"1332:7:7","nodeType":"VariableDeclaration","scope":1044,"src":"1324:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"amountIn","nameLocation":"1354:8:7","nodeType":"VariableDeclaration","scope":1044,"src":"1346:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"1346:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"tokenOut","nameLocation":"1377:8:7","nodeType":"VariableDeclaration","scope":1044,"src":"1369:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"amountOutMin","nameLocation":"1400:12:7","nodeType":"VariableDeclaration","scope":1044,"src":"1392:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"to","nameLocation":"1427:2:7","nodeType":"VariableDeclaration","scope":1044,"src":"1419:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"route","nameLocation":"1449:5:7","nodeType":"VariableDeclaration","scope":1044,"src":"1436:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"1436:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1317:142:7"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"amountOut","nameLocation":"1499:9:7","nodeType":"VariableDeclaration","scope":1044,"src":"1491:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1490:19:7"},"scope":2132,"src":"1296:308:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1099,"nodeType":"Block","src":"2405:258:7","statements":[{"assignments":[1069,1071],"declarations":[{"constant":false,"id":1069,"mutability":"mutable","name":"success","nameLocation":"2418:7:7","nodeType":"VariableDeclaration","scope":1099,"src":"2413:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1068,"name":"bool","nodeType":"ElementaryTypeName","src":"2413:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"returnBytes","nameLocation":"2440:11:7","nodeType":"VariableDeclaration","scope":1099,"src":"2427:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"2427:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1078,"initialValue":{"arguments":[{"hexValue":"","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2504:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1072,"name":"transferValueTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"2455:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2455:20:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1074,"name":"amountValueTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2483:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2455:48:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2455:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2412:95:7"},{"expression":{"arguments":[{"id":1080,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2522:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1085,"name":"returnBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2555:11:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2538:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2538:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2538:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2531:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1081,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:7","typeDescriptions":{}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2531:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2514:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2514:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"2514:55:7"},{"expression":{"arguments":[{"id":1091,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2604:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2613:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1093,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2623:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2633:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1095,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"2647:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2651:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1090,"name":"processRouteInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"2583:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address,uint256,address,bytes memory) returns (uint256)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2583:74:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1067,"id":1098,"nodeType":"Return","src":"2576:81:7"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"1610:489:7","text":"@notice Transfers some value to <transferValueTo> and then processes the route\n @param transferValueTo Address where the value should be transferred\n @param amountValueTransfer How much value to transfer\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"functionSelector":"93b3774c","id":1100,"implemented":true,"kind":"function","modifiers":[{"id":1064,"kind":"modifierInvocation","modifierName":{"id":1063,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":997,"src":"2372:4:7"},"nodeType":"ModifierInvocation","src":"2372:4:7"}],"name":"transferValueAndprocessRoute","nameLocation":"2112:28:7","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"transferValueTo","nameLocation":"2163:15:7","nodeType":"VariableDeclaration","scope":1100,"src":"2147:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"2147:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"amountValueTransfer","nameLocation":"2193:19:7","nodeType":"VariableDeclaration","scope":1100,"src":"2185:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"tokenIn","nameLocation":"2227:7:7","nodeType":"VariableDeclaration","scope":1100,"src":"2219:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"2219:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"amountIn","nameLocation":"2249:8:7","nodeType":"VariableDeclaration","scope":1100,"src":"2241:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"tokenOut","nameLocation":"2272:8:7","nodeType":"VariableDeclaration","scope":1100,"src":"2264:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"amountOutMin","nameLocation":"2295:12:7","nodeType":"VariableDeclaration","scope":1100,"src":"2287:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"to","nameLocation":"2322:2:7","nodeType":"VariableDeclaration","scope":1100,"src":"2314:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"2314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"route","nameLocation":"2344:5:7","nodeType":"VariableDeclaration","scope":1100,"src":"2331:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"2331:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2140:214:7"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"amountOut","nameLocation":"2394:9:7","nodeType":"VariableDeclaration","scope":1100,"src":"2386:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2386:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2385:19:7"},"scope":2132,"src":"2103:560:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1339,"nodeType":"Block","src":"3202:2088:7","statements":[{"assignments":[1119],"declarations":[{"constant":false,"id":1119,"mutability":"mutable","name":"amountInAcc","nameLocation":"3217:11:7","nodeType":"VariableDeclaration","scope":1339,"src":"3209:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3209:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1121,"initialValue":{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3231:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3209:23:7"},{"assignments":[1123],"declarations":[{"constant":false,"id":1123,"mutability":"mutable","name":"balanceInitial","nameLocation":"3247:14:7","nodeType":"VariableDeclaration","scope":1339,"src":"3239:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1139,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1124,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"3264:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1125,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"3276:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3264:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1136,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3350:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1133,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"3330:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3323:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"3323:26:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3264:89:7","trueExpression":{"expression":{"arguments":[{"id":1129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3309:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3301:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"3301:7:7","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3301:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3301:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3239:114:7"},{"assignments":[1141],"declarations":[{"constant":false,"id":1141,"mutability":"mutable","name":"stream","nameLocation":"3370:6:7","nodeType":"VariableDeclaration","scope":1339,"src":"3362:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"id":1144,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"3404:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1142,"name":"InputStream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"3379:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputStream_$953_$","typeString":"type(library InputStream)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createStream","nodeType":"MemberAccess","referencedDeclaration":870,"src":"3379:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3379:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3362:48:7"},{"body":{"id":1297,"nodeType":"Block","src":"3445:1510:7","statements":[{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"commandCode","nameLocation":"3460:11:7","nodeType":"VariableDeclaration","scope":1297,"src":"3454:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1150,"name":"uint8","nodeType":"ElementaryTypeName","src":"3454:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1155,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1152,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3474:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"3474:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3474:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3454:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3505:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3519:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3505:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4299:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3234","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4313:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"4299:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1294,"nodeType":"Block","src":"4595:353:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4610:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3234","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4625:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"4610:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4702:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3235","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4717:2:7","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"4702:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4772:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3236","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4787:2:7","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"4772:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4843:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3237","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4858:2:7","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4843:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"556e6b6e6f776e20636f6d6d616e6420636f6465","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4915:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""},"value":"Unknown command code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""}],"id":1286,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"4908:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4908:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"4908:30:7"},"id":1290,"nodeType":"IfStatement","src":"4839:99:7","trueBody":{"expression":{"arguments":[{"id":1283,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4885:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"bentoWithdrawAllFromRP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4862:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4862:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"ExpressionStatement","src":"4862:30:7"}},"id":1291,"nodeType":"IfStatement","src":"4768:170:7","trueBody":{"expression":{"arguments":[{"id":1276,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4816:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"bentoDepositAllFromBento","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"4791:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4791:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"4791:32:7"}},"id":1292,"nodeType":"IfStatement","src":"4698:240:7","trueBody":{"expression":{"arguments":[{"id":1269,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4745:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1268,"name":"distributeBentoPortions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4721:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4721:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"ExpressionStatement","src":"4721:31:7"}},"id":1293,"nodeType":"IfStatement","src":"4606:332:7","trueBody":{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1258,"name":"amountInAcc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4629:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1260,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4666:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1261,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4674:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1259,"name":"distributeBentoShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"4644:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4644:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4629:53:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"4629:53:7"}}]},"id":1295,"nodeType":"IfStatement","src":"4295:653:7","trueBody":{"id":1254,"nodeType":"Block","src":"4317:272:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4332:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3230","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4347:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"4332:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4415:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:2:7","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"4415:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4473:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3233","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4488:2:7","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"4473:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"556e6b6e6f776e20636f6d6d616e6420636f6465","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4556:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""},"value":"Unknown command code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""}],"id":1247,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"4549:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4549:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"ExpressionStatement","src":"4549:30:7"},"id":1251,"nodeType":"IfStatement","src":"4469:110:7","trueBody":{"expression":{"arguments":[{"id":1243,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4517:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1244,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4525:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"bentoWithdrawShareFromRP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4492:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"ExpressionStatement","src":"4492:41:7"}},"id":1252,"nodeType":"IfStatement","src":"4411:168:7","trueBody":{"expression":{"arguments":[{"id":1236,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4446:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1235,"name":"swapTrident","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4434:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4434:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"4434:19:7"}},"id":1253,"nodeType":"IfStatement","src":"4328:251:7","trueBody":{"expression":{"arguments":[{"id":1228,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4379:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1229,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4387:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1227,"name":"bentoDepositAmountFromBento","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4351:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"ExpressionStatement","src":"4351:44:7"}}]}},"id":1296,"nodeType":"IfStatement","src":"3501:1447:7","trueBody":{"id":1220,"nodeType":"Block","src":"3523:766:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1159,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3538:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3553:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3538:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3638:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"34","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3653:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3638:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3769:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3784:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3769:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1183,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3896:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"35","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3911:1:7","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"3896:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4046:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"36","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:7","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4046:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1200,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4120:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"37","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4135:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4120:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"556e6b6e6f776e20636f6d6d616e6420636f6465","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4256:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""},"value":"Unknown command code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08","typeString":"literal_string \"Unknown command code\""}],"id":1210,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"4249:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4249:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"ExpressionStatement","src":"4249:30:7"},"id":1214,"nodeType":"IfStatement","src":"4116:163:7","trueBody":{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1203,"name":"amountInAcc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4149:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1205,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4193:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1206,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4201:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"name":"distributeERC20AmountsFromRP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4164:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4164:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4149:60:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"4149:60:7"}},"id":1215,"nodeType":"IfStatement","src":"4042:237:7","trueBody":{"expression":{"arguments":[{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"4089:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"4093:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1195,"name":"unwrapNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"4076:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4076:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"4076:24:7"}},"id":1216,"nodeType":"IfStatement","src":"3892:387:7","trueBody":{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"amountInAcc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"3925:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1188,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3970:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1187,"name":"wrapAndDistributeERC20Amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3940:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3940:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:52:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"nodeType":"ExpressionStatement","src":"3925:52:7"}},"id":1217,"nodeType":"IfStatement","src":"3765:514:7","trueBody":{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"amountInAcc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"3798:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1178,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3836:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"3844:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1177,"name":"distributeERC20Amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3813:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3813:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3798:54:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1182,"nodeType":"ExpressionStatement","src":"3798:54:7"}},"id":1218,"nodeType":"IfStatement","src":"3634:645:7","trueBody":{"expression":{"arguments":[{"id":1170,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3689:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1169,"name":"distributeERC20Shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3667:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3667:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"ExpressionStatement","src":"3667:29:7"}},"id":1219,"nodeType":"IfStatement","src":"3534:745:7","trueBody":{"expression":{"arguments":[{"id":1163,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3584:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"name":"swapUniswapPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3568:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3568:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1165,"nodeType":"ExpressionStatement","src":"3568:23:7"}}]}}]},"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1147,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"3424:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isNotEmpty","nodeType":"MemberAccess","referencedDeclaration":889,"src":"3424:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bool)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3424:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1298,"nodeType":"WhileStatement","src":"3417:1538:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1300,"name":"amountInAcc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4971:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1301,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4986:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4971:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720616d6f756e74496e2076616c7565","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4996:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f124b7c6fa9859758bb2a94bb01c973cc962775f72f908c146d550a33144899c","typeString":"literal_string \"Wrong amountIn value\""},"value":"Wrong amountIn value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f124b7c6fa9859758bb2a94bb01c973cc962775f72f908c146d550a33144899c","typeString":"literal_string \"Wrong amountIn value\""}],"id":1299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4963:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4963:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1305,"nodeType":"ExpressionStatement","src":"4963:56:7"},{"assignments":[1307],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"balanceFinal","nameLocation":"5034:12:7","nodeType":"VariableDeclaration","scope":1339,"src":"5026:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1323,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5049:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1309,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"5061:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5049:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1320,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5135:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1317,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5115:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1316,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"5108:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5108:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5108:26:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5108:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5049:89:7","trueExpression":{"expression":{"arguments":[{"id":1313,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"5094:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5086:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"5086:7:7","typeDescriptions":{}}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5086:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5086:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5026:112:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"balanceFinal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5153:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"balanceInitial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5169:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1327,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"5186:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5169:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e696d616c206f757075742062616c616e63652076696f6c6174696f6e","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_873cd9257ab4ffdca306d3e6c7c6446bd4c5e00efc70ea77ad74d4fe404d5b37","typeString":"literal_string \"Minimal ouput balance violation\""},"value":"Minimal ouput balance violation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_873cd9257ab4ffdca306d3e6c7c6446bd4c5e00efc70ea77ad74d4fe404d5b37","typeString":"literal_string \"Minimal ouput balance violation\""}],"id":1324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5145:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"5145:89:7"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1333,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"5243:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"balanceFinal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5255:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1335,"name":"balanceInitial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"5270:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5255:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5243:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"5243:41:7"}]},"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"2669:321:7","text":"@notice Processes the route generated off-chain\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"processRouteInternal","nameLocation":"3003:20:7","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"tokenIn","nameLocation":"3038:7:7","nodeType":"VariableDeclaration","scope":1340,"src":"3030:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"amountIn","nameLocation":"3060:8:7","nodeType":"VariableDeclaration","scope":1340,"src":"3052:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"tokenOut","nameLocation":"3083:8:7","nodeType":"VariableDeclaration","scope":1340,"src":"3075:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"3075:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"amountOutMin","nameLocation":"3106:12:7","nodeType":"VariableDeclaration","scope":1340,"src":"3098:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"3133:2:7","nodeType":"VariableDeclaration","scope":1340,"src":"3125:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"3125:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"route","nameLocation":"3155:5:7","nodeType":"VariableDeclaration","scope":1340,"src":"3142:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1112,"name":"bytes","nodeType":"ElementaryTypeName","src":"3142:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3023:142:7"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"amountOut","nameLocation":"3191:9:7","nodeType":"VariableDeclaration","scope":1340,"src":"3183:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:19:7"},"scope":2132,"src":"2994:2296:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1373,"nodeType":"Block","src":"5699:151:7","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"to","nameLocation":"5714:2:7","nodeType":"VariableDeclaration","scope":1373,"src":"5706:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"5706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1353,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1350,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"5719:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"5719:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5719:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5706:33:7"},{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"amount","nameLocation":"5754:6:7","nodeType":"VariableDeclaration","scope":1373,"src":"5746:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1359,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1356,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"5763:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"5763:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5763:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:34:7"},{"expression":{"arguments":[{"id":1363,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"5804:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1366,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"5819:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5811:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"5811:7:7","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5811:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"5830:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1369,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"5834:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5842:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1360,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"5787:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3769,"src":"5787:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) payable external returns (uint256,uint256)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5787:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1372,"nodeType":"ExpressionStatement","src":"5787:57:7"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"5296:323:7","text":"@notice Transfers input tokens sent to BentoBox to a pool\n @notice Expected to be called for initial liquidity transfer from user to BentoBox, so we know exact amounts\n @param stream [Pool, Amount]. Pool into which an amount of tokens will be transferred\n @param token Address of the token to transfer"},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"bentoDepositAmountFromBento","nameLocation":"5632:27:7","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"stream","nameLocation":"5668:6:7","nodeType":"VariableDeclaration","scope":1374,"src":"5660:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5660:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"token","nameLocation":"5684:5:7","nodeType":"VariableDeclaration","scope":1374,"src":"5676:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"5676:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5659:31:7"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"5699:0:7"},"scope":2132,"src":"5623:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1429,"nodeType":"Block","src":"6074:307:7","statements":[{"assignments":[1381],"declarations":[{"constant":false,"id":1381,"mutability":"mutable","name":"to","nameLocation":"6089:2:7","nodeType":"VariableDeclaration","scope":1429,"src":"6081:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"6081:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1385,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1382,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"6094:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"6094:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6094:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6081:33:7"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"token","nameLocation":"6129:5:7","nodeType":"VariableDeclaration","scope":1429,"src":"6121:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"6121:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1391,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1388,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"6137:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"6137:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6137:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6121:36:7"},{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"amount","nameLocation":"6174:6:7","nodeType":"VariableDeclaration","scope":1429,"src":"6166:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"6166:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1400,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6215:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:7","typeDescriptions":{}}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6207:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6190:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1394,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"6183:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6183:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"6183:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6183:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"arguments":[{"id":1405,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6257:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1403,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6235:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategyData","nodeType":"MemberAccess","referencedDeclaration":3816,"src":"6235:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_StrategyData_$3642_memory_ptr_$","typeString":"function (address) view external returns (struct StrategyData memory)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6235:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyData_$3642_memory_ptr","typeString":"struct StrategyData memory"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":3641,"src":"6235:36:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"6183:88:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"arguments":[{"id":1411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6297:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1409,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6281:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totals","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"6281:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Rebase_$3635_memory_ptr_$","typeString":"function (address) view external returns (struct Rebase memory)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6281:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":1413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"elastic","nodeType":"MemberAccess","referencedDeclaration":3632,"src":"6281:30:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"6183:128:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6166:145:7"},{"expression":{"arguments":[{"id":1419,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6335:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1422,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6350:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"6342:7:7","typeDescriptions":{}}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6342:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"6361:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1425,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"6365:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6373:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1416,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6318:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3769,"src":"6318:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) payable external returns (uint256,uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6318:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1428,"nodeType":"ExpressionStatement","src":"6318:57:7"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"5856:156:7","text":"@notice Transfers all available input tokens from BentoBox to a pool\n @param stream [Pool, Token]. Pool into which all tokens will be transferred "},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"bentoDepositAllFromBento","nameLocation":"6025:24:7","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"stream","nameLocation":"6058:6:7","nodeType":"VariableDeclaration","scope":1430,"src":"6050:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6049:16:7"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"6074:0:7"},"scope":2132,"src":"6016:365:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1463,"nodeType":"Block","src":"6659:148:7","statements":[{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"to","nameLocation":"6674:2:7","nodeType":"VariableDeclaration","scope":1463,"src":"6666:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"6666:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1440,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"6679:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"6679:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6679:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6666:33:7"},{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"amount","nameLocation":"6714:6:7","nodeType":"VariableDeclaration","scope":1463,"src":"6706:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6706:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1449,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1446,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"6723:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"6723:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6723:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6706:34:7"},{"expression":{"arguments":[{"id":1453,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"6765:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"6780:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6772:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:7","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6772:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"6787:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"6791:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6799:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1450,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6747:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"6747:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) external returns (uint256,uint256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6747:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1462,"nodeType":"ExpressionStatement","src":"6747:54:7"}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"6387:195:7","text":"@notice Withdraws BentoBox tokens from BentoBox to an address\n @param stream [To, Amount]. Destination where an amount of token will be transferred\n @param token Token to transfer"},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"bentoWithdrawShareFromRP","nameLocation":"6595:24:7","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"stream","nameLocation":"6628:6:7","nodeType":"VariableDeclaration","scope":1464,"src":"6620:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6620:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"token","nameLocation":"6644:5:7","nodeType":"VariableDeclaration","scope":1464,"src":"6636:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"6636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6619:31:7"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"6659:0:7"},"scope":2132,"src":"6586:221:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1506,"nodeType":"Block","src":"7035:214:7","statements":[{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"token","nameLocation":"7050:5:7","nodeType":"VariableDeclaration","scope":1506,"src":"7042:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1475,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1472,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"7058:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7058:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7058:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7042:36:7"},{"assignments":[1477],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"to","nameLocation":"7093:2:7","nodeType":"VariableDeclaration","scope":1506,"src":"7085:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"7085:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1478,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"7098:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7098:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7098:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7085:33:7"},{"assignments":[1483],"declarations":[{"constant":false,"id":1483,"mutability":"mutable","name":"amount","nameLocation":"7133:6:7","nodeType":"VariableDeclaration","scope":1506,"src":"7125:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7125:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"7161:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7176:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7168:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"7168:7:7","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7168:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1484,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"7142:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3723,"src":"7142:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7125:57:7"},{"expression":{"arguments":[{"id":1496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"7207:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1499,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7222:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7214:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"7214:7:7","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7214:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1501,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"7229:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7233:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"7236:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1493,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"7189:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"7189:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) external returns (uint256,uint256)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7189:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1505,"nodeType":"ExpressionStatement","src":"7189:54:7"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"6813:162:7","text":"@notice Withdraws all available BentoBox tokens from BentoBox to an address\n @param stream [Token, To]. Token which will be transferred to a destination"},"id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"bentoWithdrawAllFromRP","nameLocation":"6988:22:7","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"stream","nameLocation":"7019:6:7","nodeType":"VariableDeclaration","scope":1507,"src":"7011:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"7011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7010:16:7"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"7035:0:7"},"scope":2132,"src":"6979:270:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1532,"nodeType":"Block","src":"7440:130:7","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"pool","nameLocation":"7455:4:7","nodeType":"VariableDeclaration","scope":1532,"src":"7447:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"7447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1518,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1515,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"7462:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7462:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7462:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7447:35:7"},{"assignments":[1520],"declarations":[{"constant":false,"id":1520,"mutability":"mutable","name":"swapData","nameLocation":"7502:8:7","nodeType":"VariableDeclaration","scope":1532,"src":"7489:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1519,"name":"bytes","nodeType":"ElementaryTypeName","src":"7489:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1524,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1521,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"7513:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":952,"src":"7513:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7513:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7489:42:7"},{"expression":{"arguments":[{"id":1529,"name":"swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"7555:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1526,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"7544:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1525,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"7538:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$3936_$","typeString":"type(contract IPool)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7538:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$3936","typeString":"contract IPool"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"7538:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) external returns (uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7538:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1531,"nodeType":"ExpressionStatement","src":"7538:26:7"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"7255:136:7","text":"@notice Performs a Trident pool swap\n @param stream [Pool, SwapData]. Pool against a swap defined by SwapData will be executed"},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"swapTrident","nameLocation":"7404:11:7","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"stream","nameLocation":"7424:6:7","nodeType":"VariableDeclaration","scope":1533,"src":"7416:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"7416:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7415:16:7"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"7440:0:7"},"scope":2132,"src":"7395:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1666,"nodeType":"Block","src":"7809:784:7","statements":[{"assignments":[1542],"declarations":[{"constant":false,"id":1542,"mutability":"mutable","name":"pool","nameLocation":"7824:4:7","nodeType":"VariableDeclaration","scope":1666,"src":"7816:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"7816:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1543,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7831:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7831:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7831:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7816:35:7"},{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"tokenIn","nameLocation":"7866:7:7","nodeType":"VariableDeclaration","scope":1666,"src":"7858:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"7858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1552,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1549,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7876:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7876:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7876:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7858:38:7"},{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"direction","nameLocation":"7909:9:7","nodeType":"VariableDeclaration","scope":1666,"src":"7903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1553,"name":"uint8","nodeType":"ElementaryTypeName","src":"7903:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1558,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1555,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7921:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"7921:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7921:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7903:36:7"},{"assignments":[1560],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"to","nameLocation":"7954:2:7","nodeType":"VariableDeclaration","scope":1666,"src":"7946:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"7946:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1564,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1561,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7959:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7959:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7959:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7946:33:7"},{"assignments":[1566,1568,null],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"r0","nameLocation":"7997:2:7","nodeType":"VariableDeclaration","scope":1666,"src":"7989:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"7989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"r1","nameLocation":"8009:2:7","nodeType":"VariableDeclaration","scope":1666,"src":"8001:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"8001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":1574,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1570,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8032:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1569,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"8017:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$4210_$","typeString":"type(contract IUniswapV2Pair)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8017:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$4210","typeString":"contract IUniswapV2Pair"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"8017:32:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view external returns (uint112,uint112,uint32)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8017:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"7988:63:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"8066:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8071:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8066:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1579,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8076:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8081:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8076:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8066:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720706f6f6c207265736572766573","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8084:21:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4","typeString":"literal_string \"Wrong pool reserves\""},"value":"Wrong pool reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4","typeString":"literal_string \"Wrong pool reserves\""}],"id":1575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8058:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8058:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"8058:48:7"},{"assignments":[1587,1589],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"reserveIn","nameLocation":"8122:9:7","nodeType":"VariableDeclaration","scope":1666,"src":"8114:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8114:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"reserveOut","nameLocation":"8141:10:7","nodeType":"VariableDeclaration","scope":1666,"src":"8133:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8133:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8155:9:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8168:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8155:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":1596,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8184:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1597,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"8188:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8183:8:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8155:36:7","trueExpression":{"components":[{"id":1593,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"8173:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1594,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"8177:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8172:8:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8113:78:7"},{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"amountIn","nameLocation":"8208:8:7","nodeType":"VariableDeclaration","scope":1666,"src":"8200:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8200:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1607,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8245:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1604,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"8226:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1603,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"8219:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8219:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"8219:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8219:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1609,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8253:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8219:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8200:62:7"},{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"amountInWithFee","nameLocation":"8277:15:7","nodeType":"VariableDeclaration","scope":1666,"src":"8269:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"8269:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"8295:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"393937","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:3:7","typeDescriptions":{"typeIdentifier":"t_rational_997_by_1","typeString":"int_const 997"},"value":"997"},"src":"8295:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8269:40:7"},{"expression":{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1618,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8316:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8329:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1620,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8347:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8329:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8328:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8362:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8374:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"8362:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1626,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8381:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8362:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8361:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8328:69:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8316:81:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1631,"nodeType":"ExpressionStatement","src":"8316:81:7"},{"assignments":[1633,1635],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"amount0Out","nameLocation":"8413:10:7","nodeType":"VariableDeclaration","scope":1666,"src":"8405:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"8405:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"amount1Out","nameLocation":"8433:10:7","nodeType":"VariableDeclaration","scope":1666,"src":"8425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1652,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8447:9:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8460:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8447:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":1645,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8491:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8510:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8502:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"8502:7:7","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8502:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8490:23:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8447:66:7","trueExpression":{"components":[{"arguments":[{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8473:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8465:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8465:7:7","typeDescriptions":{}}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8465:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1643,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8477:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8464:23:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8404:109:7"},{"expression":{"arguments":[{"id":1657,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8546:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1658,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8558:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"8570:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8584:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8574:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1660,"name":"bytes","nodeType":"ElementaryTypeName","src":"8578:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1654,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"8535:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1653,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"8520:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$4210_$","typeString":"type(contract IUniswapV2Pair)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8520:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$4210","typeString":"contract IUniswapV2Pair"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":4194,"src":"8520:25:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address,bytes memory) external"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8520:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"8520:67:7"}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"7576:152:7","text":"@notice Performs a Sushi/UniswapV2 pool swap\n @param stream [Pool, TokenIn, Direction, To]\n @return amountOut Amount of the output token"},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"swapUniswapPool","nameLocation":"7741:15:7","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"stream","nameLocation":"7765:6:7","nodeType":"VariableDeclaration","scope":1667,"src":"7757:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"7757:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7756:16:7"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"amountOut","nameLocation":"7798:9:7","nodeType":"VariableDeclaration","scope":1667,"src":"7790:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"7790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7789:19:7"},"scope":2132,"src":"7732:861:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1725,"nodeType":"Block","src":"9109:291:7","statements":[{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"num","nameLocation":"9122:3:7","nodeType":"VariableDeclaration","scope":1725,"src":"9116:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1677,"name":"uint8","nodeType":"ElementaryTypeName","src":"9116:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1682,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1679,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9128:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"9128:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9128:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"9116:30:7"},{"expression":{"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1683,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9153:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9167:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9153:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1686,"nodeType":"ExpressionStatement","src":"9153:15:7"},{"body":{"id":1723,"nodeType":"Block","src":"9209:186:7","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"to","nameLocation":"9226:2:7","nodeType":"VariableDeclaration","scope":1723,"src":"9218:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"9218:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1699,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9231:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"9231:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9231:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9218:33:7"},{"assignments":[1704],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"amount","nameLocation":"9268:6:7","nodeType":"VariableDeclaration","scope":1723,"src":"9260:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"9260:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1708,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1705,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9277:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"9277:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9277:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9260:34:7"},{"expression":{"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1709,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9303:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9318:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9303:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1712,"nodeType":"ExpressionStatement","src":"9303:21:7"},{"expression":{"arguments":[{"expression":{"id":1717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9364:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9364:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9376:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9380:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1714,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"9340:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"9333:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9333:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":284,"src":"9333:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9333:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"ExpressionStatement","src":"9333:54:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"9195:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1692,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9199:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9195:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1724,"initializationExpression":{"assignments":[1688],"declarations":[{"constant":false,"id":1688,"mutability":"mutable","name":"i","nameLocation":"9188:1:7","nodeType":"VariableDeclaration","scope":1724,"src":"9180:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1690,"initialValue":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9192:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9180:13:7"},"loopExpression":{"expression":{"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9204:3:7","subExpression":{"id":1694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"9206:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ExpressionStatement","src":"9204:3:7"},"nodeType":"ForStatement","src":"9175:220:7"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"8599:405:7","text":"@notice Distributes input ERC20 tokens from msg.sender to addresses. Tokens should be approved\n @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\n @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\n @param token Token to distribute\n @return amountTotal Total amount distributed"},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"distributeERC20Amounts","nameLocation":"9017:22:7","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"stream","nameLocation":"9048:6:7","nodeType":"VariableDeclaration","scope":1726,"src":"9040:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"token","nameLocation":"9064:5:7","nodeType":"VariableDeclaration","scope":1726,"src":"9056:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9039:31:7"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"amountTotal","nameLocation":"9096:11:7","nodeType":"VariableDeclaration","scope":1726,"src":"9088:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"9088:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9087:21:7"},"scope":2132,"src":"9008:392:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1782,"nodeType":"Block","src":"9925:275:7","statements":[{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"num","nameLocation":"9938:3:7","nodeType":"VariableDeclaration","scope":1782,"src":"9932:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1736,"name":"uint8","nodeType":"ElementaryTypeName","src":"9932:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1738,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"9944:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"9944:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9944:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"9932:30:7"},{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1742,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"9969:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9969:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"9969:15:7"},{"body":{"id":1780,"nodeType":"Block","src":"10025:170:7","statements":[{"assignments":[1757],"declarations":[{"constant":false,"id":1757,"mutability":"mutable","name":"to","nameLocation":"10042:2:7","nodeType":"VariableDeclaration","scope":1780,"src":"10034:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"10034:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1761,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1758,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10047:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"10047:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10047:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10034:33:7"},{"assignments":[1763],"declarations":[{"constant":false,"id":1763,"mutability":"mutable","name":"amount","nameLocation":"10084:6:7","nodeType":"VariableDeclaration","scope":1780,"src":"10076:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1764,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10093:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10093:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10093:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10076:34:7"},{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"10119:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1769,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"10134:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10119:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ExpressionStatement","src":"10119:21:7"},{"expression":{"arguments":[{"id":1776,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"10176:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"10180:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1773,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"10156:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1772,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"10149:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10149:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"10149:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10149:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"10149:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"10011:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1751,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"10015:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10011:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1781,"initializationExpression":{"assignments":[1747],"declarations":[{"constant":false,"id":1747,"mutability":"mutable","name":"i","nameLocation":"10004:1:7","nodeType":"VariableDeclaration","scope":1781,"src":"9996:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"9996:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1749,"initialValue":{"hexValue":"30","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10008:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9996:13:7"},"loopExpression":{"expression":{"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10020:3:7","subExpression":{"id":1753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"10022:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1755,"nodeType":"ExpressionStatement","src":"10020:3:7"},"nodeType":"ForStatement","src":"9991:204:7"}]},"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"9406:408:7","text":"@notice Distributes input ERC20 tokens from this contract to addresses. Tokens should be approved\n @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\n @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\n @param token Token to distribute\n @return amountTotal Total amount distributed"},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"distributeERC20AmountsFromRP","nameLocation":"9827:28:7","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"stream","nameLocation":"9864:6:7","nodeType":"VariableDeclaration","scope":1783,"src":"9856:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9856:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"token","nameLocation":"9880:5:7","nodeType":"VariableDeclaration","scope":1783,"src":"9872:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"9872:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9855:31:7"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"amountTotal","nameLocation":"9912:11:7","nodeType":"VariableDeclaration","scope":1783,"src":"9904:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:21:7"},"scope":2132,"src":"9818:382:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1866,"nodeType":"Block","src":"10686:459:7","statements":[{"assignments":[1792],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"token","nameLocation":"10701:5:7","nodeType":"VariableDeclaration","scope":1866,"src":"10693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"10693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1793,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10709:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"10709:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10709:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10693:36:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1798,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"10742:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1797,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"10736:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4260_$","typeString":"type(contract IWETH)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10736:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4260","typeString":"contract IWETH"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"10736:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":1803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"10772:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10764:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"10764:7:7","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"10764:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10736:50:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10736:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"10736:52:7"},{"assignments":[1810],"declarations":[{"constant":false,"id":1810,"mutability":"mutable","name":"num","nameLocation":"10801:3:7","nodeType":"VariableDeclaration","scope":1866,"src":"10795:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1809,"name":"uint8","nodeType":"ElementaryTypeName","src":"10795:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1814,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1811,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10807:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"10807:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10807:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"10795:30:7"},{"expression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1815,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10832:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10846:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10832:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"nodeType":"ExpressionStatement","src":"10832:15:7"},{"body":{"id":1853,"nodeType":"Block","src":"10888:170:7","statements":[{"assignments":[1830],"declarations":[{"constant":false,"id":1830,"mutability":"mutable","name":"to","nameLocation":"10905:2:7","nodeType":"VariableDeclaration","scope":1853,"src":"10897:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"10897:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1834,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1831,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10910:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"10910:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10910:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10897:33:7"},{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"amount","nameLocation":"10947:6:7","nodeType":"VariableDeclaration","scope":1853,"src":"10939:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1840,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1837,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10956:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"10956:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10956:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10939:34:7"},{"expression":{"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1841,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"10982:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1842,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"10997:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10982:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1844,"nodeType":"ExpressionStatement","src":"10982:21:7"},{"expression":{"arguments":[{"id":1849,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"11039:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"11043:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1846,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"11019:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1845,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"11012:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11012:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"11012:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11012:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1852,"nodeType":"ExpressionStatement","src":"11012:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"10874:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1824,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"10878:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10874:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"initializationExpression":{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"i","nameLocation":"10867:1:7","nodeType":"VariableDeclaration","scope":1854,"src":"10859:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1822,"initialValue":{"hexValue":"30","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10871:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10859:13:7"},"loopExpression":{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"10883:3:7","subExpression":{"id":1826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"10885:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"10883:3:7"},"nodeType":"ForStatement","src":"10854:204:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1858,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11080:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11072:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"11072:7:7","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11072:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"11072:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11097:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11072:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f723a20696e76616c696420696e70757420616d6f756e74","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11100:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef2803841b52c86814d96883048464ae548e9347f651c80e3f08e587697a6736","typeString":"literal_string \"RouteProcessor: invalid input amount\""},"value":"RouteProcessor: invalid input amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef2803841b52c86814d96883048464ae548e9347f651c80e3f08e587697a6736","typeString":"literal_string \"RouteProcessor: invalid input amount\""}],"id":1855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11064:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11064:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"11064:75:7"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"10206:383:7","text":"@notice Wraps all native inputs and distributes wrapped ERC20 tokens from RouteProcessor to addresses\n @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\n @param stream [WrapToken, ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\n @return amountTotal Total amount distributed"},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"wrapAndDistributeERC20Amounts","nameLocation":"10602:29:7","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"stream","nameLocation":"10640:6:7","nodeType":"VariableDeclaration","scope":1867,"src":"10632:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10631:16:7"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"amountTotal","nameLocation":"10673:11:7","nodeType":"VariableDeclaration","scope":1867,"src":"10665:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"10665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10664:21:7"},"scope":2132,"src":"10593:552:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1925,"nodeType":"Block","src":"11674:282:7","statements":[{"assignments":[1878],"declarations":[{"constant":false,"id":1878,"mutability":"mutable","name":"num","nameLocation":"11687:3:7","nodeType":"VariableDeclaration","scope":1925,"src":"11681:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1877,"name":"uint8","nodeType":"ElementaryTypeName","src":"11681:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1882,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1879,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"11693:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"11693:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11693:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"11681:30:7"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1883,"name":"sharesTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"11718:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11732:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11718:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1886,"nodeType":"ExpressionStatement","src":"11718:15:7"},{"body":{"id":1923,"nodeType":"Block","src":"11774:177:7","statements":[{"assignments":[1898],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"to","nameLocation":"11791:2:7","nodeType":"VariableDeclaration","scope":1923,"src":"11783:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"11783:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1902,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1899,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"11796:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"11796:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11796:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11783:33:7"},{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"share","nameLocation":"11833:5:7","nodeType":"VariableDeclaration","scope":1923,"src":"11825:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"11825:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1908,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1905,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"11841:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"11841:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11841:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11825:33:7"},{"expression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1909,"name":"sharesTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"11867:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1910,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"11882:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11867:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"nodeType":"ExpressionStatement","src":"11867:20:7"},{"expression":{"arguments":[{"id":1916,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"11914:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1917,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"11921:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11921:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"11933:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1920,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"11937:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1913,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"11896:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3799,"src":"11896:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11896:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"11896:47:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"11760:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1892,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"11764:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11760:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"initializationExpression":{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"i","nameLocation":"11753:1:7","nodeType":"VariableDeclaration","scope":1924,"src":"11745:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1890,"initialValue":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11745:13:7"},"loopExpression":{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11769:3:7","subExpression":{"id":1894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"11771:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1896,"nodeType":"ExpressionStatement","src":"11769:3:7"},"nodeType":"ForStatement","src":"11740:211:7"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"11151:419:7","text":"@notice Distributes input BentoBox tokens from msg.sender to addresses. Tokens should be approved\n @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\n @param stream [ArrayLength, ...[To, ShareAmount][]]. An array of destinations and token share amounts\n @param token Token to distribute\n @return sharesTotal Total shares distributed"},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"distributeBentoShares","nameLocation":"11583:21:7","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"stream","nameLocation":"11613:6:7","nodeType":"VariableDeclaration","scope":1926,"src":"11605:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"11605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"token","nameLocation":"11629:5:7","nodeType":"VariableDeclaration","scope":1926,"src":"11621:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"11621:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11604:31:7"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"sharesTotal","nameLocation":"11661:11:7","nodeType":"VariableDeclaration","scope":1926,"src":"11653:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"11653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11652:21:7"},"scope":2132,"src":"11574:382:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2004,"nodeType":"Block","src":"12477:500:7","statements":[{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"token","nameLocation":"12492:5:7","nodeType":"VariableDeclaration","scope":2004,"src":"12484:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"12484:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1937,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1934,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"12500:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"12500:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12500:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12484:36:7"},{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"num","nameLocation":"12533:3:7","nodeType":"VariableDeclaration","scope":2004,"src":"12527:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1938,"name":"uint8","nodeType":"ElementaryTypeName","src":"12527:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1943,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1940,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"12539:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"12539:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12539:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12527:30:7"},{"assignments":[1945],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"amountTotal","nameLocation":"12572:11:7","nodeType":"VariableDeclaration","scope":2004,"src":"12564:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"12564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1952,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"12618:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12610:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"12610:7:7","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12610:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"12593:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1946,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"12586:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12586:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"12586:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12586:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12634:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12586:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12564:71:7"},{"id":2003,"nodeType":"UncheckedBlock","src":"12675:297:7","statements":[{"body":{"id":2001,"nodeType":"Block","src":"12728:237:7","statements":[{"assignments":[1969],"declarations":[{"constant":false,"id":1969,"mutability":"mutable","name":"to","nameLocation":"12747:2:7","nodeType":"VariableDeclaration","scope":2001,"src":"12739:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"12739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1973,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1970,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"12752:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"12752:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12752:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12739:33:7"},{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"share","nameLocation":"12790:5:7","nodeType":"VariableDeclaration","scope":2001,"src":"12783:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1974,"name":"uint16","nodeType":"ElementaryTypeName","src":"12783:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":1979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1976,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"12798:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint16","nodeType":"MemberAccess","referencedDeclaration":907,"src":"12798:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint16)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12798:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"12783:34:7"},{"assignments":[1981],"declarations":[{"constant":false,"id":1981,"mutability":"mutable","name":"amount","nameLocation":"12836:6:7","nodeType":"VariableDeclaration","scope":2001,"src":"12828:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12828:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1988,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"12846:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1983,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"12860:5:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"12846:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12845:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3635353335","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12869:5:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"src":"12845:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12828:46:7"},{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1989,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"12885:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1990,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"12900:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12885:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1992,"nodeType":"ExpressionStatement","src":"12885:21:7"},{"expression":{"arguments":[{"id":1997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"12944:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"12948:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1994,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"12924:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1993,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"12917:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12917:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"12917:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12917:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"12917:38:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"12714:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1963,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"12718:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12714:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"initializationExpression":{"assignments":[1959],"declarations":[{"constant":false,"id":1959,"mutability":"mutable","name":"i","nameLocation":"12707:1:7","nodeType":"VariableDeclaration","scope":2002,"src":"12699:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1961,"initialValue":{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12711:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12699:13:7"},"loopExpression":{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12723:3:7","subExpression":{"id":1965,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"12725:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1967,"nodeType":"ExpressionStatement","src":"12723:3:7"},"nodeType":"ForStatement","src":"12694:271:7"}]}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"11962:456:7","text":"@notice Distributes ERC20 tokens from RouteProcessor to addresses\n @notice Quantity for sending is determined by share in 1/65535\n @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\n @notice so we have to work with shares - not fixed amounts\n @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts"},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"distributeERC20Shares","nameLocation":"12431:21:7","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"stream","nameLocation":"12461:6:7","nodeType":"VariableDeclaration","scope":2005,"src":"12453:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"12453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12452:16:7"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"12477:0:7"},"scope":2132,"src":"12422:555:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2086,"nodeType":"Block","src":"13509:515:7","statements":[{"assignments":[2012],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"token","nameLocation":"13524:5:7","nodeType":"VariableDeclaration","scope":2086,"src":"13516:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"13516:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2016,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2013,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"13532:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"13532:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13532:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13516:36:7"},{"assignments":[2018],"declarations":[{"constant":false,"id":2018,"mutability":"mutable","name":"num","nameLocation":"13565:3:7","nodeType":"VariableDeclaration","scope":2086,"src":"13559:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2017,"name":"uint8","nodeType":"ElementaryTypeName","src":"13559:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2022,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2019,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"13571:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"13571:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13571:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13559:30:7"},{"assignments":[2024],"declarations":[{"constant":false,"id":2024,"mutability":"mutable","name":"amountTotal","nameLocation":"13604:11:7","nodeType":"VariableDeclaration","scope":2086,"src":"13596:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"13596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2035,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"13637:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2030,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"13652:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13644:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"13644:7:7","typeDescriptions":{}}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13644:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2025,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"13618:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3723,"src":"13618:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13618:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13668:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13618:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13596:73:7"},{"id":2085,"nodeType":"UncheckedBlock","src":"13709:310:7","statements":[{"body":{"id":2083,"nodeType":"Block","src":"13762:250:7","statements":[{"assignments":[2047],"declarations":[{"constant":false,"id":2047,"mutability":"mutable","name":"to","nameLocation":"13781:2:7","nodeType":"VariableDeclaration","scope":2083,"src":"13773:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"13773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2051,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2048,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"13786:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"13786:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13786:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13773:33:7"},{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"share","nameLocation":"13824:5:7","nodeType":"VariableDeclaration","scope":2083,"src":"13817:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2052,"name":"uint16","nodeType":"ElementaryTypeName","src":"13817:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":2057,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2054,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"13832:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint16","nodeType":"MemberAccess","referencedDeclaration":907,"src":"13832:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint16)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13832:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"13817:34:7"},{"assignments":[2059],"declarations":[{"constant":false,"id":2059,"mutability":"mutable","name":"amount","nameLocation":"13870:6:7","nodeType":"VariableDeclaration","scope":2083,"src":"13862:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"13862:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2066,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"13880:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2061,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"13894:5:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"13880:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13879:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3635353335","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13903:5:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"src":"13879:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13862:46:7"},{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2067,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"13919:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"13934:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13919:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"13919:21:7"},{"expression":{"arguments":[{"id":2074,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"13969:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2077,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"13984:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13976:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"13976:7:7","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13976:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"13991:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2080,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"13995:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2071,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"13951:8:7","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3799,"src":"13951:17:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13951:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"13951:51:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13748:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2041,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"13752:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13748:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2084,"initializationExpression":{"assignments":[2037],"declarations":[{"constant":false,"id":2037,"mutability":"mutable","name":"i","nameLocation":"13741:1:7","nodeType":"VariableDeclaration","scope":2084,"src":"13733:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13733:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2039,"initialValue":{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13745:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13733:13:7"},"loopExpression":{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13757:3:7","subExpression":{"id":2043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"13759:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"13757:3:7"},"nodeType":"ForStatement","src":"13728:284:7"}]}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"12983:465:7","text":"@notice Distributes BentoBox tokens from RouteProcessor to addresses\n @notice Quantity for sending is determined by portions in 1/65535.\n @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\n @notice so we have to work with portions - not fixed amounts\n @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts"},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"distributeBentoPortions","nameLocation":"13461:23:7","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"stream","nameLocation":"13493:6:7","nodeType":"VariableDeclaration","scope":2087,"src":"13485:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"13485:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13484:16:7"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"13509:0:7"},"scope":2132,"src":"13452:572:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2130,"nodeType":"Block","src":"14245:216:7","statements":[{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"token","nameLocation":"14260:5:7","nodeType":"VariableDeclaration","scope":2130,"src":"14252:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"14252:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2097,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"14268:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"14268:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14268:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14252:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2111,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"14350:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"14342:7:7","typeDescriptions":{}}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14342:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2106,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"14325:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2105,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"14318:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14318:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"14318:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14318:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14366:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14318:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2102,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"14301:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2101,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"14295:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4260_$","typeString":"type(contract IWETH)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14295:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4260","typeString":"contract IWETH"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"14295:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14295:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"14295:73:7"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":2125,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"14441:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor_$2132","typeString":"contract RouteProcessor"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14433:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"14433:7:7","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14433:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"14433:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2120,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"14414:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14406:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"14406:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14406:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"14406:26:7","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14406:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2129,"nodeType":"ExpressionStatement","src":"14406:49:7"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"14030:147:7","text":"@notice Unwraps the Native Token\n @param receiver Destination of the unwrapped token\n @param stream [Token]. Token to unwrap native"},"id":2131,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapNative","nameLocation":"14190:12:7","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"receiver","nameLocation":"14211:8:7","nodeType":"VariableDeclaration","scope":2131,"src":"14203:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"14203:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"stream","nameLocation":"14229:6:7","nodeType":"VariableDeclaration","scope":2131,"src":"14221:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"14221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14202:34:7"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"14245:0:7"},"scope":2132,"src":"14181:280:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2133,"src":"485:13979:7","usedErrors":[]}],"src":"42:14424:7"},"id":7},"contracts/RouteProcessor3.sol":{"ast":{"absolutePath":"contracts/RouteProcessor3.sol","exportedSymbols":{"Address":[837],"Context":[859],"IBentoBoxMinimal":[3842],"IERC20":[190],"IERC20Permit":[226],"IMPOSSIBLE_POOL_ADDRESS":[2149],"IPool":[3936],"ITridentCLPool":[3968],"IUniswapV2Pair":[4210],"IUniswapV3Pool":[4240],"IWETH":[4260],"InputStream":[953],"MAX_SQRT_RATIO":[2157],"MIN_SQRT_RATIO":[2153],"NATIVE_ADDRESS":[2146],"Ownable":[112],"Rebase":[3635],"RebaseLibrary":[3712],"RouteProcessor3":[3628],"SafeERC20":[507],"StrategyData":[3642]},"id":3629,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2134,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"42:23:8"},{"absolutePath":"interfaces/IUniswapV2Pair.sol","file":"../interfaces/IUniswapV2Pair.sol","id":2135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":4211,"src":"69:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IUniswapV3Pool.sol","file":"../interfaces/IUniswapV3Pool.sol","id":2136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":4241,"src":"113:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/ITridentCLPool.sol","file":"../interfaces/ITridentCLPool.sol","id":2137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":3969,"src":"157:42:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IBentoBoxMinimal.sol","file":"../interfaces/IBentoBoxMinimal.sol","id":2138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":3843,"src":"201:44:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IPool.sol","file":"../interfaces/IPool.sol","id":2139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":3937,"src":"247:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"interfaces/IWETH.sol","file":"../interfaces/IWETH.sol","id":2140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":4261,"src":"282:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/InputStream.sol","file":"./InputStream.sol","id":2141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":954,"src":"317:27:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":508,"src":"346:65:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3629,"sourceUnit":113,"src":"413:52:8","symbolAliases":[],"unitAlias":""},{"constant":true,"id":2146,"mutability":"constant","name":"NATIVE_ADDRESS","nameLocation":"486:14:8","nodeType":"VariableDeclaration","scope":3629,"src":"469:76:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"503:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"internal"},{"constant":true,"id":2149,"mutability":"constant","name":"IMPOSSIBLE_POOL_ADDRESS","nameLocation":"565:23:8","nodeType":"VariableDeclaration","scope":3629,"src":"548:85:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"548:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303031","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"591:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":2153,"mutability":"constant","name":"MIN_SQRT_RATIO","nameLocation":"773:14:8","nodeType":"VariableDeclaration","scope":3629,"src":"756:44:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2151,"name":"uint160","nodeType":"ElementaryTypeName","src":"756:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"34323935313238373339","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4295128739_by_1","typeString":"int_const 4295128739"},"value":"4295128739"},"visibility":"internal"},{"constant":true,"id":2157,"mutability":"constant","name":"MAX_SQRT_RATIO","nameLocation":"938:14:8","nodeType":"VariableDeclaration","scope":3629,"src":"921:83:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2155,"name":"uint160","nodeType":"ElementaryTypeName","src":"921:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"955:49:8","typeDescriptions":{"typeIdentifier":"t_rational_1461446703485210103287273052203988822378723970342_by_1","typeString":"int_const 1461...(41 digits omitted)...0342"},"value":"1461446703485210103287273052203988822378723970342"},"visibility":"internal"},{"abstract":false,"baseContracts":[{"baseName":{"id":2159,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1134:7:8"},"id":2160,"nodeType":"InheritanceSpecifier","src":"1134:7:8"}],"canonicalName":"RouteProcessor3","contractDependencies":[],"contractKind":"contract","documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1009:97:8","text":"@title A route processor for the Sushi Aggregator\n @author Ilya Lyalin\n version 2.1"},"fullyImplemented":true,"id":3628,"linearizedBaseContracts":[3628,112,859],"name":"RouteProcessor3","nameLocation":"1115:15:8","nodeType":"ContractDefinition","nodes":[{"id":2164,"libraryName":{"id":2161,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":507,"src":"1153:9:8"},"nodeType":"UsingForDirective","src":"1147:27:8","typeName":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1167:6:8"},"referencedDeclaration":190,"src":"1167:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}},{"id":2168,"libraryName":{"id":2165,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":507,"src":"1184:9:8"},"nodeType":"UsingForDirective","src":"1178:33:8","typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":226,"src":"1198:12:8"},"referencedDeclaration":226,"src":"1198:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}}},{"id":2171,"libraryName":{"id":2169,"name":"InputStream","nodeType":"IdentifierPath","referencedDeclaration":953,"src":"1221:11:8"},"nodeType":"UsingForDirective","src":"1215:30:8","typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"id":2187,"name":"Route","nameLocation":"1257:5:8","nodeType":"EventDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1285:4:8","nodeType":"VariableDeclaration","scope":2187,"src":"1269:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"1269:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2175,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1305:2:8","nodeType":"VariableDeclaration","scope":2187,"src":"1297:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2177,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"1331:7:8","nodeType":"VariableDeclaration","scope":2187,"src":"1315:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2179,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"1362:8:8","nodeType":"VariableDeclaration","scope":2187,"src":"1346:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"1383:8:8","nodeType":"VariableDeclaration","scope":2187,"src":"1378:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint","nodeType":"ElementaryTypeName","src":"1378:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2183,"indexed":false,"mutability":"mutable","name":"amountOutMin","nameLocation":"1404:12:8","nodeType":"VariableDeclaration","scope":2187,"src":"1399:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint","nodeType":"ElementaryTypeName","src":"1399:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2185,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"1428:9:8","nodeType":"VariableDeclaration","scope":2187,"src":"1423:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint","nodeType":"ElementaryTypeName","src":"1423:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1262:180:8"},"src":"1251:192:8"},{"constant":false,"functionSelector":"6b2ace87","id":2190,"mutability":"immutable","name":"bentoBox","nameLocation":"1483:8:8","nodeType":"VariableDeclaration","scope":3628,"src":"1449:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"IBentoBoxMinimal","nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"1449:16:8"},"referencedDeclaration":3842,"src":"1449:16:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"visibility":"public"},{"constant":false,"id":2194,"mutability":"mutable","name":"priviledgedUsers","nameLocation":"1522:16:8","nodeType":"VariableDeclaration","scope":3628,"src":"1496:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2193,"keyType":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1496:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"1516:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"lastCalledPool","nameLocation":"1559:14:8","nodeType":"VariableDeclaration","scope":3628,"src":"1543:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2199,"mutability":"mutable","name":"unlocked","nameLocation":"1594:8:8","nodeType":"VariableDeclaration","scope":3628,"src":"1580:26:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2197,"name":"uint8","nodeType":"ElementaryTypeName","src":"1580:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1605:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":2202,"mutability":"mutable","name":"paused","nameLocation":"1625:6:8","nodeType":"VariableDeclaration","scope":3628,"src":"1611:24:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2200,"name":"uint8","nodeType":"ElementaryTypeName","src":"1611:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1634:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"body":{"id":2227,"nodeType":"Block","src":"1656:174:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1673:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1685:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1673:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f72206973206c6f636b6564","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1688:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2","typeString":"literal_string \"RouteProcessor is locked\""},"value":"RouteProcessor is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2","typeString":"literal_string \"RouteProcessor is locked\""}],"id":2204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1665:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1665:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2210,"nodeType":"ExpressionStatement","src":"1665:50:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"1732:6:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1732:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f7220697320706175736564","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ae490f2240c03b2196588ec720ea6bf1857f74b857b3d5f1d6ebac9f7aaeb8b","typeString":"literal_string \"RouteProcessor is paused\""},"value":"RouteProcessor is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ae490f2240c03b2196588ec720ea6bf1857f74b857b3d5f1d6ebac9f7aaeb8b","typeString":"literal_string \"RouteProcessor is paused\""}],"id":2211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1724:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1724:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2217,"nodeType":"ExpressionStatement","src":"1724:48:8"},{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1781:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1781:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2221,"nodeType":"ExpressionStatement","src":"1781:12:8"},{"id":2222,"nodeType":"PlaceholderStatement","src":"1802:1:8"},{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2223,"name":"unlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1812:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1812:12:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2226,"nodeType":"ExpressionStatement","src":"1812:12:8"}]},"id":2228,"name":"lock","nameLocation":"1649:4:8","nodeType":"ModifierDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[],"src":"1653:2:8"},"src":"1640:190:8","virtual":false,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"1874:144:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2231,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1889:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1889:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2233,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1903:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1903:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1889:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2236,"name":"priviledgedUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1914:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2239,"indexExpression":{"expression":{"id":2237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1931:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1931:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1914:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1946:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1914:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1889:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52503a2063616c6c6572206973206e6f7420746865206f776e6572206f7220612070726976696c65646765642075736572","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1952:51:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4d063a9d0e76bbc10089bd8d53d485ba0d69dcf634aebb1459c19fb7eb67be9","typeString":"literal_string \"RP: caller is not the owner or a priviledged user\""},"value":"RP: caller is not the owner or a priviledged user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4d063a9d0e76bbc10089bd8d53d485ba0d69dcf634aebb1459c19fb7eb67be9","typeString":"literal_string \"RP: caller is not the owner or a priviledged user\""}],"id":2230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1881:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:123:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2245,"nodeType":"ExpressionStatement","src":"1881:123:8"},{"id":2246,"nodeType":"PlaceholderStatement","src":"2011:1:8"}]},"id":2248,"name":"onlyOwnerOrPriviledgedUser","nameLocation":"1845:26:8","nodeType":"ModifierDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[],"src":"1871:2:8"},"src":"1836:182:8","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"2093:224:8","statements":[{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2256,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2100:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2258,"name":"_bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"2128:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2257,"name":"IBentoBoxMinimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2111:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBentoBoxMinimal_$3842_$","typeString":"type(contract IBentoBoxMinimal)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"src":"2100:38:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":2261,"nodeType":"ExpressionStatement","src":"2100:38:8"},{"expression":{"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2262,"name":"lastCalledPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"2145:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2263,"name":"IMPOSSIBLE_POOL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2162:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2145:40:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2265,"nodeType":"ExpressionStatement","src":"2145:40:8"},{"body":{"id":2285,"nodeType":"Block","src":"2248:64:8","statements":[{"expression":{"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2277,"name":"priviledgedUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2257:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2281,"indexExpression":{"baseExpression":{"id":2278,"name":"priviledgedUserList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2274:19:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2280,"indexExpression":{"id":2279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2294:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2274:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2257:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2257:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"ExpressionStatement","src":"2257:47:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2211:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2271,"name":"priviledgedUserList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2215:19:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2215:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2211:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"initializationExpression":{"assignments":[2267],"declarations":[{"constant":false,"id":2267,"mutability":"mutable","name":"i","nameLocation":"2204:1:8","nodeType":"VariableDeclaration","scope":2286,"src":"2199:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint","nodeType":"ElementaryTypeName","src":"2199:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2269,"initialValue":{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2208:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2199:10:8"},"loopExpression":{"expression":{"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2243:3:8","subExpression":{"id":2274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"2243:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"nodeType":"ExpressionStatement","src":"2243:3:8"},"nodeType":"ForStatement","src":"2194:118:8"}]},"id":2288,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"_bentoBox","nameLocation":"2044:9:8","nodeType":"VariableDeclaration","scope":2288,"src":"2036:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"2036:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"priviledgedUserList","nameLocation":"2072:19:8","nodeType":"VariableDeclaration","scope":2288,"src":"2055:36:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2252,"nodeType":"ArrayTypeName","src":"2055:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2035:57:8"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[],"src":"2093:0:8"},"scope":3628,"src":"2024:293:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2303,"nodeType":"Block","src":"2396:48:8","statements":[{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2297,"name":"priviledgedUsers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"2403:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2299,"indexExpression":{"id":2298,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"2420:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2403:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2300,"name":"priviledge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"2428:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2403:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"nodeType":"ExpressionStatement","src":"2403:35:8"}]},"functionSelector":"9a1f3406","id":2304,"implemented":true,"kind":"function","modifiers":[{"id":2295,"kind":"modifierInvocation","modifierName":{"id":2294,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2386:9:8"},"nodeType":"ModifierInvocation","src":"2386:9:8"}],"name":"setPriviledge","nameLocation":"2332:13:8","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"user","nameLocation":"2354:4:8","nodeType":"VariableDeclaration","scope":2304,"src":"2346:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"priviledge","nameLocation":"2365:10:8","nodeType":"VariableDeclaration","scope":2304,"src":"2360:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2291,"name":"bool","nodeType":"ElementaryTypeName","src":"2360:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2345:31:8"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[],"src":"2396:0:8"},"scope":3628,"src":"2323:121:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2313,"nodeType":"Block","src":"2503:23:8","statements":[{"expression":{"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2309,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2510:6:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"32","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2519:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2510:10:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2312,"nodeType":"ExpressionStatement","src":"2510:10:8"}]},"functionSelector":"8456cb59","id":2314,"implemented":true,"kind":"function","modifiers":[{"id":2307,"kind":"modifierInvocation","modifierName":{"id":2306,"name":"onlyOwnerOrPriviledgedUser","nodeType":"IdentifierPath","referencedDeclaration":2248,"src":"2476:26:8"},"nodeType":"ModifierInvocation","src":"2476:26:8"}],"name":"pause","nameLocation":"2459:5:8","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"2464:2:8"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"2503:0:8"},"scope":3628,"src":"2450:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2323,"nodeType":"Block","src":"2586:23:8","statements":[{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"2593:6:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2602:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2593:10:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2322,"nodeType":"ExpressionStatement","src":"2593:10:8"}]},"functionSelector":"046f7da2","id":2324,"implemented":true,"kind":"function","modifiers":[{"id":2317,"kind":"modifierInvocation","modifierName":{"id":2316,"name":"onlyOwnerOrPriviledgedUser","nodeType":"IdentifierPath","referencedDeclaration":2248,"src":"2559:26:8"},"nodeType":"ModifierInvocation","src":"2559:26:8"}],"name":"resume","nameLocation":"2541:6:8","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[],"src":"2547:2:8"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"2586:0:8"},"scope":3628,"src":"2532:77:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2328,"nodeType":"Block","src":"2679:2:8","statements":[]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"2615:33:8","text":"@notice For native unwrapping"},"id":2329,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"2659:2:8"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"2679:0:8"},"scope":3628,"src":"2652:29:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2358,"nodeType":"Block","src":"3238:94:8","statements":[{"expression":{"arguments":[{"id":2350,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2351,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"3282:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2352,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"3292:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2353,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"3302:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2354,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"3316:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2355,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3320:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2349,"name":"processRouteInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3252:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address,uint256,address,bytes memory) returns (uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3252:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2348,"id":2357,"nodeType":"Return","src":"3245:81:8"}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"2687:333:8","text":"@notice Processes the route generated off-chain. Has a lock\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"functionSelector":"2646478b","id":2359,"implemented":true,"kind":"function","modifiers":[{"id":2345,"kind":"modifierInvocation","modifierName":{"id":2344,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2228,"src":"3205:4:8"},"nodeType":"ModifierInvocation","src":"3205:4:8"}],"name":"processRoute","nameLocation":"3033:12:8","nodeType":"FunctionDefinition","parameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"tokenIn","nameLocation":"3060:7:8","nodeType":"VariableDeclaration","scope":2359,"src":"3052:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"amountIn","nameLocation":"3082:8:8","nodeType":"VariableDeclaration","scope":2359,"src":"3074:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3074:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"tokenOut","nameLocation":"3105:8:8","nodeType":"VariableDeclaration","scope":2359,"src":"3097:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"3097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"amountOutMin","nameLocation":"3128:12:8","nodeType":"VariableDeclaration","scope":2359,"src":"3120:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3120:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"to","nameLocation":"3155:2:8","nodeType":"VariableDeclaration","scope":2359,"src":"3147:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"3147:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"route","nameLocation":"3177:5:8","nodeType":"VariableDeclaration","scope":2359,"src":"3164:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2341,"name":"bytes","nodeType":"ElementaryTypeName","src":"3164:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3045:142:8"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"amountOut","nameLocation":"3227:9:8","nodeType":"VariableDeclaration","scope":2359,"src":"3219:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3218:19:8"},"scope":3628,"src":"3024:308:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2414,"nodeType":"Block","src":"4133:258:8","statements":[{"assignments":[2384,2386],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"success","nameLocation":"4146:7:8","nodeType":"VariableDeclaration","scope":2414,"src":"4141:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2383,"name":"bool","nodeType":"ElementaryTypeName","src":"4141:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"returnBytes","nameLocation":"4168:11:8","nodeType":"VariableDeclaration","scope":2414,"src":"4155:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2385,"name":"bytes","nodeType":"ElementaryTypeName","src":"4155:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[{"hexValue":"","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4232:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2387,"name":"transferValueTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"4183:15:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4183:20:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2389,"name":"amountValueTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"4211:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4183:48:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4183:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4140:95:8"},{"expression":{"arguments":[{"id":2395,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"4250:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2400,"name":"returnBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"4283:11:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2398,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4266:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4266:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4259:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2396,"name":"string","nodeType":"ElementaryTypeName","src":"4259:6:8","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4259:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4242:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4242:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2404,"nodeType":"ExpressionStatement","src":"4242:55:8"},{"expression":{"arguments":[{"id":2406,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"4332:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2407,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"4341:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2408,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"4351:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2409,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"4361:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2410,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"4375:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2411,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"4379:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2405,"name":"processRouteInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"4311:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256,address,uint256,address,bytes memory) returns (uint256)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4311:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2382,"id":2413,"nodeType":"Return","src":"4304:81:8"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"3338:489:8","text":"@notice Transfers some value to <transferValueTo> and then processes the route\n @param transferValueTo Address where the value should be transferred\n @param amountValueTransfer How much value to transfer\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"functionSelector":"93b3774c","id":2415,"implemented":true,"kind":"function","modifiers":[{"id":2379,"kind":"modifierInvocation","modifierName":{"id":2378,"name":"lock","nodeType":"IdentifierPath","referencedDeclaration":2228,"src":"4100:4:8"},"nodeType":"ModifierInvocation","src":"4100:4:8"}],"name":"transferValueAndprocessRoute","nameLocation":"3840:28:8","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"transferValueTo","nameLocation":"3891:15:8","nodeType":"VariableDeclaration","scope":2415,"src":"3875:31:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2361,"name":"address","nodeType":"ElementaryTypeName","src":"3875:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"amountValueTransfer","nameLocation":"3921:19:8","nodeType":"VariableDeclaration","scope":2415,"src":"3913:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3913:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"tokenIn","nameLocation":"3955:7:8","nodeType":"VariableDeclaration","scope":2415,"src":"3947:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"3947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"amountIn","nameLocation":"3977:8:8","nodeType":"VariableDeclaration","scope":2415,"src":"3969:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"tokenOut","nameLocation":"4000:8:8","nodeType":"VariableDeclaration","scope":2415,"src":"3992:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"amountOutMin","nameLocation":"4023:12:8","nodeType":"VariableDeclaration","scope":2415,"src":"4015:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4015:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"to","nameLocation":"4050:2:8","nodeType":"VariableDeclaration","scope":2415,"src":"4042:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"4042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"route","nameLocation":"4072:5:8","nodeType":"VariableDeclaration","scope":2415,"src":"4059:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"4059:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:214:8"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"amountOut","nameLocation":"4122:9:8","nodeType":"VariableDeclaration","scope":2415,"src":"4114:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4114:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4113:19:8"},"scope":3628,"src":"3831:560:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2614,"nodeType":"Block","src":"4930:1429:8","statements":[{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"balanceInInitial","nameLocation":"4945:16:8","nodeType":"VariableDeclaration","scope":2614,"src":"4937:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"4937:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2451,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"4964:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2436,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"4975:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4964:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":2447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5042:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5042:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2444,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5023:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2443,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"5016:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5016:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5016:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5016:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4964:89:8","trueExpression":{"expression":{"arguments":[{"id":2440,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5000:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4992:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"4992:7:8","typeDescriptions":{}}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4992:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4992:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4937:116:8"},{"assignments":[2453],"declarations":[{"constant":false,"id":2453,"mutability":"mutable","name":"balanceOutInitial","nameLocation":"5068:17:8","nodeType":"VariableDeclaration","scope":2614,"src":"5060:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"5060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2469,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2454,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"5088:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2455,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5100:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5088:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5166:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2463,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"5146:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2462,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"5139:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5139:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5139:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5139:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5088:81:8","trueExpression":{"expression":{"arguments":[{"id":2459,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"5125:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5117:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"5117:7:8","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5117:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5117:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5060:109:8"},{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"stream","nameLocation":"5186:6:8","nodeType":"VariableDeclaration","scope":2614,"src":"5178:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5178:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2476,"initialValue":{"arguments":[{"id":2474,"name":"route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"5220:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2472,"name":"InputStream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5195:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputStream_$953_$","typeString":"type(library InputStream)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createStream","nodeType":"MemberAccess","referencedDeclaration":870,"src":"5195:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5195:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5178:48:8"},{"body":{"id":2540,"nodeType":"Block","src":"5261:479:8","statements":[{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"commandCode","nameLocation":"5276:11:8","nodeType":"VariableDeclaration","scope":2540,"src":"5270:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2480,"name":"uint8","nodeType":"ElementaryTypeName","src":"5270:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2485,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2482,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5290:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"5290:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5290:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5270:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5321:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5321:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5379:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5394:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5379:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5449:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"5449:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2508,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5506:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"34","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5521:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5506:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5564:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"35","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5579:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5564:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"commandCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5626:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"36","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5641:1:8","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5626:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"526f75746550726f636573736f723a20556e6b6e6f776e20636f6d6d616e6420636f6465","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5693:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b5b4205be21de03eec6126ff0426ce9ddd0d46725c0dc1f1fbc15f95e7c18d4","typeString":"literal_string \"RouteProcessor: Unknown command code\""},"value":"RouteProcessor: Unknown command code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0b5b4205be21de03eec6126ff0426ce9ddd0d46725c0dc1f1fbc15f95e7c18d4","typeString":"literal_string \"RouteProcessor: Unknown command code\""}],"id":2530,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"5686:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5686:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2533,"nodeType":"ExpressionStatement","src":"5686:46:8"},"id":2534,"nodeType":"IfStatement","src":"5622:110:8","trueBody":{"expression":{"arguments":[{"id":2526,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5656:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2527,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5665:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"applyPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5644:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5644:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"5644:28:8"}},"id":2535,"nodeType":"IfStatement","src":"5560:172:8","trueBody":{"expression":{"arguments":[{"id":2519,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5601:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2518,"name":"processInsideBento","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"5582:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5582:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2521,"nodeType":"ExpressionStatement","src":"5582:26:8"}},"id":2536,"nodeType":"IfStatement","src":"5502:230:8","trueBody":{"expression":{"arguments":[{"id":2512,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5539:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2511,"name":"processOnePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5524:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5524:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2514,"nodeType":"ExpressionStatement","src":"5524:22:8"}},"id":2537,"nodeType":"IfStatement","src":"5445:287:8","trueBody":{"expression":{"arguments":[{"id":2505,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5481:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2504,"name":"processNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5467:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5467:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2507,"nodeType":"ExpressionStatement","src":"5467:21:8"}},"id":2538,"nodeType":"IfStatement","src":"5375:357:8","trueBody":{"expression":{"arguments":[{"id":2497,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5414:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2498,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"5422:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"processUserERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"5397:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5397:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2500,"nodeType":"ExpressionStatement","src":"5397:34:8"}},"id":2539,"nodeType":"IfStatement","src":"5317:415:8","trueBody":{"expression":{"arguments":[{"id":2490,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5354:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"processMyERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5339:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5339:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"5339:22:8"}}]},"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2477,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5240:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isNotEmpty","nodeType":"MemberAccess","referencedDeclaration":889,"src":"5240:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bool)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5240:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"WhileStatement","src":"5233:507:8"},{"assignments":[2543],"declarations":[{"constant":false,"id":2543,"mutability":"mutable","name":"balanceInFinal","nameLocation":"5756:14:8","nodeType":"VariableDeclaration","scope":2614,"src":"5748:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5748:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2560,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5773:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2545,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"5784:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5773:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":2556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5851:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5851:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2553,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"5832:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2552,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"5825:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5825:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"5825:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5825:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5773:89:8","trueExpression":{"expression":{"arguments":[{"id":2549,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"5809:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5801:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"5801:7:8","typeDescriptions":{}}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5801:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5801:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5748:114:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"balanceInFinal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"5877:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2563,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"5894:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5877:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2565,"name":"balanceInInitial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5906:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5877:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f723a204d696e696d616c20696d7075742062616c616e63652076696f6c6174696f6e","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5924:49:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd7b2e744765339cba0d4b70781f674fdce5c117f6e5c0ea00c1673e8933f74","typeString":"literal_string \"RouteProcessor: Minimal imput balance violation\""},"value":"RouteProcessor: Minimal imput balance violation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd7b2e744765339cba0d4b70781f674fdce5c117f6e5c0ea00c1673e8933f74","typeString":"literal_string \"RouteProcessor: Minimal imput balance violation\""}],"id":2561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5869:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5869:105:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"5869:105:8"},{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"balanceOutFinal","nameLocation":"5991:15:8","nodeType":"VariableDeclaration","scope":2614,"src":"5983:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5983:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2587,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"6009:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2573,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6021:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6009:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6087:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2581,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"6067:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2580,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"6060:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6060:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"6060:26:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6060:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6009:81:8","trueExpression":{"expression":{"arguments":[{"id":2577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6046:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:8","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"6038:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5983:107:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"balanceOutFinal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6105:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"balanceOutInitial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"6124:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2591,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"6144:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6124:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6105:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f723a204d696e696d616c206f757075742062616c616e63652076696f6c6174696f6e","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_98fc47eac89460486ae0b70a66337c2e351938a89c3f85906555a17c179a0256","typeString":"literal_string \"RouteProcessor: Minimal ouput balance violation\""},"value":"RouteProcessor: Minimal ouput balance violation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98fc47eac89460486ae0b70a66337c2e351938a89c3f85906555a17c179a0256","typeString":"literal_string \"RouteProcessor: Minimal ouput balance violation\""}],"id":2588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6097:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6097:111:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"ExpressionStatement","src":"6097:111:8"},{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2597,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"6217:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"balanceOutFinal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6229:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2599,"name":"balanceOutInitial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"6247:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6229:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6217:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2602,"nodeType":"ExpressionStatement","src":"6217:47:8"},{"eventCall":{"arguments":[{"expression":{"id":2604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6284:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6284:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6296:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2607,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6300:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2608,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"6309:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2609,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6319:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"6329:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2611,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"6343:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"Route","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"6278:5:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,address,uint256,uint256,uint256)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6278:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"EmitStatement","src":"6273:80:8"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"4397:321:8","text":"@notice Processes the route generated off-chain\n @param tokenIn Address of the input token\n @param amountIn Amount of the input token\n @param tokenOut Address of the output token\n @param amountOutMin Minimum amount of the output token\n @return amountOut Actual amount of the output token"},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"processRouteInternal","nameLocation":"4731:20:8","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"tokenIn","nameLocation":"4766:7:8","nodeType":"VariableDeclaration","scope":2615,"src":"4758:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"4758:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"amountIn","nameLocation":"4788:8:8","nodeType":"VariableDeclaration","scope":2615,"src":"4780:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"4780:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"tokenOut","nameLocation":"4811:8:8","nodeType":"VariableDeclaration","scope":2615,"src":"4803:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"4803:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"amountOutMin","nameLocation":"4834:12:8","nodeType":"VariableDeclaration","scope":2615,"src":"4826:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"4826:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"to","nameLocation":"4861:2:8","nodeType":"VariableDeclaration","scope":2615,"src":"4853:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"4853:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"route","nameLocation":"4883:5:8","nodeType":"VariableDeclaration","scope":2615,"src":"4870:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"4870:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4751:142:8"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"amountOut","nameLocation":"4919:9:8","nodeType":"VariableDeclaration","scope":2615,"src":"4911:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4911:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4910:19:8"},"scope":3628,"src":"4722:1637:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2669,"nodeType":"Block","src":"6427:391:8","statements":[{"assignments":[2623],"declarations":[{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"6539:5:8","nodeType":"VariableDeclaration","scope":2669,"src":"6531:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"6531:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2624,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6547:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"6547:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6547:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6531:33:8"},{"assignments":[2629],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"deadline","nameLocation":"6579:8:8","nodeType":"VariableDeclaration","scope":2669,"src":"6571:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"6571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2633,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2630,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6590:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint","nodeType":"MemberAccess","referencedDeclaration":925,"src":"6590:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6590:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6571:36:8"},{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"v","nameLocation":"6620:1:8","nodeType":"VariableDeclaration","scope":2669,"src":"6614:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2634,"name":"uint8","nodeType":"ElementaryTypeName","src":"6614:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2636,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6624:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"6624:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6624:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6614:28:8"},{"assignments":[2641],"declarations":[{"constant":false,"id":2641,"mutability":"mutable","name":"r","nameLocation":"6657:1:8","nodeType":"VariableDeclaration","scope":2669,"src":"6649:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2645,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2642,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6661:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":934,"src":"6661:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6661:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6649:32:8"},{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"s","nameLocation":"6696:1:8","nodeType":"VariableDeclaration","scope":2669,"src":"6688:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6688:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2651,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2648,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"6700:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":934,"src":"6700:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes32_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bytes32)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6700:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6688:32:8"},{"expression":{"arguments":[{"expression":{"id":2656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6760:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6760:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2660,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"6780:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6772:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:8","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6772:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"6787:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2663,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"6794:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2664,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"6804:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2665,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6807:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2666,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"6810:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":2653,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"6740:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2652,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6727:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$226_$","typeString":"type(contract IERC20Permit)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safePermit","nodeType":"MemberAccess","referencedDeclaration":468,"src":"6727:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Permit_$226_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$bound_to$_t_contract$_IERC20Permit_$226_$","typeString":"function (contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6727:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2668,"nodeType":"ExpressionStatement","src":"6727:85:8"}]},"id":2670,"implemented":true,"kind":"function","modifiers":[],"name":"applyPermit","nameLocation":"6374:11:8","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"tokenIn","nameLocation":"6394:7:8","nodeType":"VariableDeclaration","scope":2670,"src":"6386:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"6386:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"stream","nameLocation":"6411:6:8","nodeType":"VariableDeclaration","scope":2670,"src":"6403:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"6403:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6385:33:8"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"6427:0:8"},"scope":3628,"src":"6365:453:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2694,"nodeType":"Block","src":"7006:132:8","statements":[{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"amountTotal","nameLocation":"7021:11:8","nodeType":"VariableDeclaration","scope":2694,"src":"7013:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7013:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"initialValue":{"expression":{"arguments":[{"id":2680,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7043:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7035:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"7035:7:8","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7035:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"7035:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7013:43:8"},{"expression":{"arguments":[{"id":2685,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"7081:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2688,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7097:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7089:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"7089:7:8","typeDescriptions":{}}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7089:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"NATIVE_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"7104:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2691,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"7120:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"name":"distributeAndSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"7063:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7063:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"ExpressionStatement","src":"7063:69:8"}]},"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"6824:131:8","text":"@notice Processes native coin: call swap for all pools that swap from native coin\n @param stream Streamed process program"},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"processNative","nameLocation":"6968:13:8","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"stream","nameLocation":"6990:6:8","nodeType":"VariableDeclaration","scope":2695,"src":"6982:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6981:16:8"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"7006:0:8"},"scope":3628,"src":"6959:179:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2738,"nodeType":"Block","src":"7368:284:8","statements":[{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"token","nameLocation":"7383:5:8","nodeType":"VariableDeclaration","scope":2738,"src":"7375:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"7375:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2706,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2703,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7391:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7391:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7391:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7375:36:8"},{"assignments":[2708],"declarations":[{"constant":false,"id":2708,"mutability":"mutable","name":"amountTotal","nameLocation":"7426:11:8","nodeType":"VariableDeclaration","scope":2738,"src":"7418:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"7418:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"arguments":[{"id":2715,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7472:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7464:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2713,"name":"address","nodeType":"ElementaryTypeName","src":"7464:7:8","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7464:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7447:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2709,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"7440:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7440:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"7440:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7440:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7418:60:8"},{"id":2727,"nodeType":"UncheckedBlock","src":"7485:95:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"7508:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7522:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7508:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"nodeType":"IfStatement","src":"7504:37:8","trueBody":{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"7525:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7540:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7525:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"nodeType":"ExpressionStatement","src":"7525:16:8"}}]},{"expression":{"arguments":[{"id":2729,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7604:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2732,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"7620:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"7612:7:8","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7612:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2734,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7627:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2735,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"7634:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2728,"name":"distributeAndSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"7586:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7586:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"7586:60:8"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"7144:172:8","text":"@notice Processes ERC20 token from this contract balance:\n @notice Call swap for all pools that swap from this token\n @param stream Streamed process program"},"id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"processMyERC20","nameLocation":"7329:14:8","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"stream","nameLocation":"7352:6:8","nodeType":"VariableDeclaration","scope":2739,"src":"7344:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"7344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7343:16:8"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[],"src":"7368:0:8"},"scope":3628,"src":"7320:332:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2761,"nodeType":"Block","src":"7971:113:8","statements":[{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"token","nameLocation":"7986:5:8","nodeType":"VariableDeclaration","scope":2761,"src":"7978:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"7978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2752,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2749,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"7994:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"7994:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7994:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7978:36:8"},{"expression":{"arguments":[{"id":2754,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"8039:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"8047:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8047:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"8059:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2758,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"8066:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"name":"distributeAndSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"8021:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8021:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2760,"nodeType":"ExpressionStatement","src":"8021:57:8"}]},"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"7660:236:8","text":"@notice Processes ERC20 token from msg.sender balance:\n @notice Call swap for all pools that swap from this token\n @param stream Streamed process program\n @param amountTotal Amount of tokens to take from msg.sender"},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"processUserERC20","nameLocation":"7909:16:8","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"stream","nameLocation":"7934:6:8","nodeType":"VariableDeclaration","scope":2762,"src":"7926:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"7926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"amountTotal","nameLocation":"7950:11:8","nodeType":"VariableDeclaration","scope":2762,"src":"7942:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7925:37:8"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[],"src":"7971:0:8"},"scope":3628,"src":"7900:184:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2819,"nodeType":"Block","src":"8497:299:8","statements":[{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"num","nameLocation":"8510:3:8","nodeType":"VariableDeclaration","scope":2819,"src":"8504:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2774,"name":"uint8","nodeType":"ElementaryTypeName","src":"8504:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2779,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2776,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"8516:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"8516:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8516:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8504:30:8"},{"id":2818,"nodeType":"UncheckedBlock","src":"8541:250:8","statements":[{"body":{"id":2816,"nodeType":"Block","src":"8594:190:8","statements":[{"assignments":[2791],"declarations":[{"constant":false,"id":2791,"mutability":"mutable","name":"share","nameLocation":"8612:5:8","nodeType":"VariableDeclaration","scope":2816,"src":"8605:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2790,"name":"uint16","nodeType":"ElementaryTypeName","src":"8605:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":2795,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2792,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"8620:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint16","nodeType":"MemberAccess","referencedDeclaration":907,"src":"8620:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint16)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8620:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"8605:34:8"},{"assignments":[2797],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"amount","nameLocation":"8658:6:8","nodeType":"VariableDeclaration","scope":2816,"src":"8650:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"8650:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2804,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"8668:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2799,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"8682:5:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"8668:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8667:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3635353335","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:5:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"src":"8667:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8650:46:8"},{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2805,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"8707:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2806,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8722:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8707:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2808,"nodeType":"ExpressionStatement","src":"8707:21:8"},{"expression":{"arguments":[{"id":2810,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"8744:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2811,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8752:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2812,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"8758:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2813,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8767:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"8739:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"8739:35:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"8580:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2785,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"8584:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8580:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2817,"initializationExpression":{"assignments":[2781],"declarations":[{"constant":false,"id":2781,"mutability":"mutable","name":"i","nameLocation":"8573:1:8","nodeType":"VariableDeclaration","scope":2817,"src":"8565:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"8565:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2783,"initialValue":{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8577:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8565:13:8"},"loopExpression":{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8589:3:8","subExpression":{"id":2787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"8591:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2789,"nodeType":"ExpressionStatement","src":"8589:3:8"},"nodeType":"ForStatement","src":"8560:224:8"}]}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"8090:300:8","text":"@notice Distributes amountTotal to several pools according to their shares and calls swap for each pool\n @param stream Streamed process program\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountTotal Total amount of tokenIn for swaps "},"id":2820,"implemented":true,"kind":"function","modifiers":[],"name":"distributeAndSwap","nameLocation":"8403:17:8","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"stream","nameLocation":"8429:6:8","nodeType":"VariableDeclaration","scope":2820,"src":"8421:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"8421:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"from","nameLocation":"8445:4:8","nodeType":"VariableDeclaration","scope":2820,"src":"8437:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"8437:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"tokenIn","nameLocation":"8459:7:8","nodeType":"VariableDeclaration","scope":2820,"src":"8451:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"8451:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"amountTotal","nameLocation":"8476:11:8","nodeType":"VariableDeclaration","scope":2820,"src":"8468:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"8468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8420:68:8"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[],"src":"8497:0:8"},"scope":3628,"src":"8394:402:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2842,"nodeType":"Block","src":"9138:93:8","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"token","nameLocation":"9153:5:8","nodeType":"VariableDeclaration","scope":2842,"src":"9145:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"9145:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2831,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2828,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"9161:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"9161:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9161:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9145:36:8"},{"expression":{"arguments":[{"id":2833,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"9193:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2836,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"9209:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9201:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"9201:7:8","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9201:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2838,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"9216:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2832,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"9188:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9188:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2841,"nodeType":"ExpressionStatement","src":"9188:37:8"}]},"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"8802:284:8","text":"@notice Processes ERC20 token for cases when the token has only one output pool\n @notice In this case liquidity is already at pool balance. This is an optimization\n @notice Call swap for all pools that swap from this token\n @param stream Streamed process program"},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"processOnePool","nameLocation":"9099:14:8","nodeType":"FunctionDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"stream","nameLocation":"9122:6:8","nodeType":"VariableDeclaration","scope":2843,"src":"9114:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"9114:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9113:16:8"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[],"src":"9138:0:8"},"scope":3628,"src":"9090:141:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2922,"nodeType":"Block","src":"9439:497:8","statements":[{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"token","nameLocation":"9454:5:8","nodeType":"VariableDeclaration","scope":2922,"src":"9446:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"9446:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2854,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2851,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9462:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"9462:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9462:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9446:36:8"},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"num","nameLocation":"9495:3:8","nodeType":"VariableDeclaration","scope":2922,"src":"9489:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2855,"name":"uint8","nodeType":"ElementaryTypeName","src":"9489:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2860,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2857,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9501:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"9501:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9501:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"9489:30:8"},{"assignments":[2862],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"amountTotal","nameLocation":"9536:11:8","nodeType":"VariableDeclaration","scope":2922,"src":"9528:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"9528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2871,"initialValue":{"arguments":[{"id":2865,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9569:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2868,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"9584:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9576:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"9576:7:8","typeDescriptions":{}}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9576:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2863,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"9550:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3723,"src":"9550:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9550:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9528:62:8"},{"id":2921,"nodeType":"UncheckedBlock","src":"9597:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9620:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9634:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9620:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"nodeType":"IfStatement","src":"9616:37:8","trueBody":{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9637:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9652:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9637:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"9637:16:8"}},{"body":{"id":2919,"nodeType":"Block","src":"9727:197:8","statements":[{"assignments":[2891],"declarations":[{"constant":false,"id":2891,"mutability":"mutable","name":"share","nameLocation":"9745:5:8","nodeType":"VariableDeclaration","scope":2919,"src":"9738:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2890,"name":"uint16","nodeType":"ElementaryTypeName","src":"9738:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":2895,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2892,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9753:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint16","nodeType":"MemberAccess","referencedDeclaration":907,"src":"9753:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint16)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9753:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"9738:34:8"},{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"amount","nameLocation":"9791:6:8","nodeType":"VariableDeclaration","scope":2919,"src":"9783:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9801:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2899,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"9815:5:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"9801:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9800:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3635353335","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9824:5:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"src":"9800:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9783:46:8"},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"amountTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2906,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"9855:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"9840:21:8"},{"expression":{"arguments":[{"id":2910,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"9877:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2913,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"9893:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9885:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"9885:7:8","typeDescriptions":{}}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9885:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2915,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9900:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2916,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"9907:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2909,"name":"swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"9872:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9872:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2918,"nodeType":"ExpressionStatement","src":"9872:42:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9713:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2885,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9717:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"initializationExpression":{"assignments":[2881],"declarations":[{"constant":false,"id":2881,"mutability":"mutable","name":"i","nameLocation":"9706:1:8","nodeType":"VariableDeclaration","scope":2920,"src":"9698:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"9698:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2883,"initialValue":{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9710:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9698:13:8"},"loopExpression":{"expression":{"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9722:3:8","subExpression":{"id":2887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9724:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"nodeType":"ExpressionStatement","src":"9722:3:8"},"nodeType":"ForStatement","src":"9693:231:8"}]}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"9237:146:8","text":"@notice Processes Bento tokens \n @notice Call swap for all pools that swap from this token\n @param stream Streamed process program"},"id":2923,"implemented":true,"kind":"function","modifiers":[],"name":"processInsideBento","nameLocation":"9396:18:8","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"stream","nameLocation":"9423:6:8","nodeType":"VariableDeclaration","scope":2923,"src":"9415:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9414:16:8"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[],"src":"9439:0:8"},"scope":3628,"src":"9387:549:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3000,"nodeType":"Block","src":"10245:468:8","statements":[{"assignments":[2936],"declarations":[{"constant":false,"id":2936,"mutability":"mutable","name":"poolType","nameLocation":"10258:8:8","nodeType":"VariableDeclaration","scope":3000,"src":"10252:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2935,"name":"uint8","nodeType":"ElementaryTypeName","src":"10252:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2940,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2937,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10269:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"10269:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10269:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"10252:35:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"poolType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10298:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10298:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"poolType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10371:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10383:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10371:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"poolType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10444:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10456:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10444:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"poolType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10518:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10530:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"10518:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"poolType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10593:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"34","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10605:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10593:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"hexValue":"526f75746550726f636573736f723a20556e6b6e6f776e20706f6f6c2074797065","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10671:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_109b5fa48dfe29b659aee04f834cca4dcdb7c1a898e22af0dbdba611710e847d","typeString":"literal_string \"RouteProcessor: Unknown pool type\""},"value":"RouteProcessor: Unknown pool type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_109b5fa48dfe29b659aee04f834cca4dcdb7c1a898e22af0dbdba611710e847d","typeString":"literal_string \"RouteProcessor: Unknown pool type\""}],"id":2991,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[4294967277,4294967277],"referencedDeclaration":4294967277,"src":"10664:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10664:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"ExpressionStatement","src":"10664:43:8"},"id":2995,"nodeType":"IfStatement","src":"10589:118:8","trueBody":{"expression":{"arguments":[{"id":2985,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10620:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2986,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10628:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10634:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2988,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10643:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"swapTrident","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"10608:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10608:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2990,"nodeType":"ExpressionStatement","src":"10608:44:8"}},"id":2996,"nodeType":"IfStatement","src":"10514:193:8","trueBody":{"expression":{"arguments":[{"id":2975,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10545:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2976,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10553:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2977,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10559:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2978,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10568:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2974,"name":"bentoBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"10533:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10533:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"ExpressionStatement","src":"10533:44:8"}},"id":2997,"nodeType":"IfStatement","src":"10440:267:8","trueBody":{"expression":{"arguments":[{"id":2965,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10470:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2966,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10478:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2967,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10484:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2968,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10493:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2964,"name":"wrapNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10459:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10459:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"10459:43:8"}},"id":2998,"nodeType":"IfStatement","src":"10367:340:8","trueBody":{"expression":{"arguments":[{"id":2955,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10396:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10404:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2957,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10410:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2958,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10419:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"swapUniV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"10386:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10386:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"ExpressionStatement","src":"10386:42:8"}},"id":2999,"nodeType":"IfStatement","src":"10294:413:8","trueBody":{"expression":{"arguments":[{"id":2945,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"10323:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2946,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10331:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2947,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10337:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2948,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10346:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"name":"swapUniV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"10313:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10313:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2950,"nodeType":"ExpressionStatement","src":"10313:42:8"}}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"9942:212:8","text":"@notice Makes swap\n @param stream Streamed process program\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"10167:4:8","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"stream","nameLocation":"10180:6:8","nodeType":"VariableDeclaration","scope":3001,"src":"10172:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"10172:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"from","nameLocation":"10196:4:8","nodeType":"VariableDeclaration","scope":3001,"src":"10188:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"10188:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"tokenIn","nameLocation":"10210:7:8","nodeType":"VariableDeclaration","scope":3001,"src":"10202:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"10202:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"amountIn","nameLocation":"10227:8:8","nodeType":"VariableDeclaration","scope":3001,"src":"10219:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10171:65:8"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[],"src":"10245:0:8"},"scope":3628,"src":"10158:555:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3113,"nodeType":"Block","src":"11061:646:8","statements":[{"assignments":[3014],"declarations":[{"constant":false,"id":3014,"mutability":"mutable","name":"directionAndFake","nameLocation":"11074:16:8","nodeType":"VariableDeclaration","scope":3113,"src":"11068:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3013,"name":"uint8","nodeType":"ElementaryTypeName","src":"11068:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3018,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3015,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"11093:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"11093:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11093:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"11068:43:8"},{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"to","nameLocation":"11126:2:8","nodeType":"VariableDeclaration","scope":3113,"src":"11118:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3024,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3021,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"11131:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"11131:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11131:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11118:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"directionAndFake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11164:16:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11164:20:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11188:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11164:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3111,"nodeType":"Block","src":"11431:271:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"directionAndFake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11461:16:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"32","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11480:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11461:20:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11485:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11461:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3098,"nodeType":"IfStatement","src":"11457:186:8","trueBody":{"id":3097,"nodeType":"Block","src":"11488:155:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"11503:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3074,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11519:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11511:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"11511:7:8","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11511:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11503:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3089,"nodeType":"IfStatement","src":"11499:90:8","trueBody":{"expression":{"arguments":[{"id":3081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"11559:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3084,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11573:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11565:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"11565:7:8","typeDescriptions":{}}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11565:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3086,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11580:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3078,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"11533:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3077,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"11526:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11526:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":284,"src":"11526:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11526:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"11526:63:8"}},{"expression":{"arguments":[{"id":3094,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11624:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3091,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"11606:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3090,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"11600:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4260_$","typeString":"type(contract IWETH)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11600:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4260","typeString":"contract IWETH"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4259,"src":"11600:23:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11600:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3096,"nodeType":"ExpressionStatement","src":"11600:33:8"}]}},{"expression":{"arguments":[{"expression":{"arguments":[{"id":3106,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11680:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11672:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"11672:7:8","typeDescriptions":{}}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11672:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"11672:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11659:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11651:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"11651:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11651:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"11651:20:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11651:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3110,"nodeType":"ExpressionStatement","src":"11651:43:8"}]},"id":3112,"nodeType":"IfStatement","src":"11160:542:8","trueBody":{"id":3065,"nodeType":"Block","src":"11191:234:8","statements":[{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"wrapToken","nameLocation":"11224:9:8","nodeType":"VariableDeclaration","scope":3065,"src":"11216:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"11216:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3032,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"11236:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"11236:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11236:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11216:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"directionAndFake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11269:16:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"32","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11288:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11269:20:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11293:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11269:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"11265:74:8","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3042,"name":"wrapToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"11302:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3041,"name":"IWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"11296:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH_$4260_$","typeString":"type(contract IWETH)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11296:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$4260","typeString":"contract IWETH"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":4245,"src":"11296:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3045,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11328:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11296:41:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11296:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3048,"nodeType":"ExpressionStatement","src":"11296:43:8"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11352:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3053,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"11366:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11358:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3051,"name":"address","nodeType":"ElementaryTypeName","src":"11358:7:8","typeDescriptions":{}}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11358:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11352:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3064,"nodeType":"IfStatement","src":"11348:69:8","trueBody":{"expression":{"arguments":[{"id":3060,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"11404:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3061,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11408:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3057,"name":"wrapToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"11380:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3056,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"11373:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11373:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"11373:30:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11373:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"11373:44:8"}}]}}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"10719:245:8","text":"@notice Wraps/unwraps native token\n @param stream [direction & fake, recipient, wrapToken?]\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"wrapNative","nameLocation":"10977:10:8","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"stream","nameLocation":"10996:6:8","nodeType":"VariableDeclaration","scope":3114,"src":"10988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"10988:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"from","nameLocation":"11012:4:8","nodeType":"VariableDeclaration","scope":3114,"src":"11004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3005,"name":"address","nodeType":"ElementaryTypeName","src":"11004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"tokenIn","nameLocation":"11026:7:8","nodeType":"VariableDeclaration","scope":3114,"src":"11018:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3007,"name":"address","nodeType":"ElementaryTypeName","src":"11018:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"amountIn","nameLocation":"11043:8:8","nodeType":"VariableDeclaration","scope":3114,"src":"11035:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11035:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10987:65:8"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[],"src":"11061:0:8"},"scope":3628,"src":"10968:739:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3258,"nodeType":"Block","src":"12047:1004:8","statements":[{"assignments":[3127],"declarations":[{"constant":false,"id":3127,"mutability":"mutable","name":"direction","nameLocation":"12060:9:8","nodeType":"VariableDeclaration","scope":3258,"src":"12054:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3126,"name":"uint8","nodeType":"ElementaryTypeName","src":"12054:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3131,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3128,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"12072:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"12072:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12072:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12054:36:8"},{"assignments":[3133],"declarations":[{"constant":false,"id":3133,"mutability":"mutable","name":"to","nameLocation":"12105:2:8","nodeType":"VariableDeclaration","scope":3258,"src":"12097:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"12097:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3137,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3134,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"12110:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"12110:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12110:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12097:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"12143:9:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12143:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3256,"nodeType":"Block","src":"12787:259:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12820:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12831:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12820:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12918:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3234,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12948:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3237,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"12965:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3235,"name":"address","nodeType":"ElementaryTypeName","src":"12957:7:8","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12957:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3232,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12929:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3723,"src":"12929:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12929:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12918:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"12918:53:8"},"id":3242,"nodeType":"IfStatement","src":"12816:155:8","trueBody":{"id":3230,"nodeType":"Block","src":"12834:78:8","statements":[{"expression":{"arguments":[{"id":3221,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12863:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3222,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"12872:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3225,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"12886:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12878:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3223,"name":"address","nodeType":"ElementaryTypeName","src":"12878:7:8","typeDescriptions":{}}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12878:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3227,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12893:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3218,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12845:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3799,"src":"12845:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12845:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"12845:57:8"}]}},{"expression":{"arguments":[{"id":3246,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12998:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3249,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"13015:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13007:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3247,"name":"address","nodeType":"ElementaryTypeName","src":"13007:7:8","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13007:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"13022:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13026:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3253,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"13029:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3243,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12980:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":3787,"src":"12980:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) external returns (uint256,uint256)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12980:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3255,"nodeType":"ExpressionStatement","src":"12980:58:8"}]},"id":3257,"nodeType":"IfStatement","src":"12139:907:8","trueBody":{"id":3214,"nodeType":"Block","src":"12158:623:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12273:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12273:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3199,"nodeType":"Block","src":"12482:222:8","statements":[{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3175,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12545:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3182,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12590:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12582:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"12582:7:8","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12582:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3177,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12563:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3176,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"12556:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12556:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"12556:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12556:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"arguments":[{"id":3187,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12634:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3185,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12612:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategyData","nodeType":"MemberAccess","referencedDeclaration":3816,"src":"12612:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_StrategyData_$3642_memory_ptr_$","typeString":"function (address) view external returns (struct StrategyData memory)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12612:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyData_$3642_memory_ptr","typeString":"struct StrategyData memory"}},"id":3189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":3641,"src":"12612:38:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"12556:94:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"arguments":[{"id":3193,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12678:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3191,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12662:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totals","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"12662:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Rebase_$3635_memory_ptr_$","typeString":"function (address) view external returns (struct Rebase memory)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12662:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"elastic","nodeType":"MemberAccess","referencedDeclaration":3632,"src":"12662:32:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"12556:138:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12545:149:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ExpressionStatement","src":"12545:149:8"}]},"id":3200,"nodeType":"IfStatement","src":"12269:435:8","trueBody":{"id":3174,"nodeType":"Block","src":"12288:188:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"12303:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3147,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"12319:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12311:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3145,"name":"address","nodeType":"ElementaryTypeName","src":"12311:7:8","typeDescriptions":{}}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12311:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12303:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":3165,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"12432:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3168,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12446:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12438:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"12438:7:8","typeDescriptions":{}}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12438:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3170,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12457:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3162,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12406:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3161,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"12399:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12399:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":284,"src":"12399:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12399:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3172,"nodeType":"ExpressionStatement","src":"12399:67:8"},"id":3173,"nodeType":"IfStatement","src":"12299:167:8","trueBody":{"expression":{"arguments":[{"arguments":[{"id":3156,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12363:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12355:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3154,"name":"address","nodeType":"ElementaryTypeName","src":"12355:7:8","typeDescriptions":{}}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12355:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3158,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12374:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3151,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12333:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"12326:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12326:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"12326:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12326:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3160,"nodeType":"ExpressionStatement","src":"12326:57:8"}}]}},{"expression":{"arguments":[{"id":3204,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"12729:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3207,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12746:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12738:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"12738:7:8","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12738:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3209,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"12757:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3210,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"12761:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12771:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3201,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"12712:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3769,"src":"12712:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (address,address,address,uint256,uint256) payable external returns (uint256,uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12712:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3213,"nodeType":"ExpressionStatement","src":"12712:61:8"}]}}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"11713:236:8","text":"@notice Bridge/unbridge tokens to/from Bento\n @param stream [direction, recipient]\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"bentoBridge","nameLocation":"11962:11:8","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"stream","nameLocation":"11982:6:8","nodeType":"VariableDeclaration","scope":3259,"src":"11974:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"11974:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"from","nameLocation":"11998:4:8","nodeType":"VariableDeclaration","scope":3259,"src":"11990:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"11990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"tokenIn","nameLocation":"12012:7:8","nodeType":"VariableDeclaration","scope":3259,"src":"12004:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3120,"name":"address","nodeType":"ElementaryTypeName","src":"12004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"amountIn","nameLocation":"12029:8:8","nodeType":"VariableDeclaration","scope":3259,"src":"12021:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11973:65:8"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"12047:0:8"},"scope":3628,"src":"11953:1098:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3419,"nodeType":"Block","src":"13378:958:8","statements":[{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"pool","nameLocation":"13393:4:8","nodeType":"VariableDeclaration","scope":3419,"src":"13385:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"13385:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3276,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3273,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13400:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"13400:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13400:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13385:35:8"},{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"direction","nameLocation":"13433:9:8","nodeType":"VariableDeclaration","scope":3419,"src":"13427:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3277,"name":"uint8","nodeType":"ElementaryTypeName","src":"13427:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3282,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3279,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13445:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"13445:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13445:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13427:36:8"},{"assignments":[3284],"declarations":[{"constant":false,"id":3284,"mutability":"mutable","name":"to","nameLocation":"13478:2:8","nodeType":"VariableDeclaration","scope":3419,"src":"13470:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"13470:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3288,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3285,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13483:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"13483:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13483:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13470:33:8"},{"assignments":[3290,3292,null],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"r0","nameLocation":"13521:2:8","nodeType":"VariableDeclaration","scope":3419,"src":"13513:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"13513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"r1","nameLocation":"13533:2:8","nodeType":"VariableDeclaration","scope":3419,"src":"13525:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"13525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3298,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3294,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13556:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3293,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"13541:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$4210_$","typeString":"type(contract IUniswapV2Pair)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13541:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$4210","typeString":"contract IUniswapV2Pair"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"13541:32:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view external returns (uint112,uint112,uint32)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13541:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13512:63:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"13590:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13595:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13590:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"13600:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13605:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13600:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13590:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e6720706f6f6c207265736572766573","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13608:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4","typeString":"literal_string \"Wrong pool reserves\""},"value":"Wrong pool reserves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4","typeString":"literal_string \"Wrong pool reserves\""}],"id":3299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13582:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13582:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3309,"nodeType":"ExpressionStatement","src":"13582:48:8"},{"assignments":[3311,3313],"declarations":[{"constant":false,"id":3311,"mutability":"mutable","name":"reserveIn","nameLocation":"13646:9:8","nodeType":"VariableDeclaration","scope":3419,"src":"13638:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"13638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"reserveOut","nameLocation":"13665:10:8","nodeType":"VariableDeclaration","scope":3419,"src":"13657:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"13657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3324,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"13679:9:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13692:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13679:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":3320,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"13708:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3321,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"13712:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13707:8:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13679:36:8","trueExpression":{"components":[{"id":3317,"name":"r0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"13697:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3318,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"13701:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13696:8:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13637:78:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13728:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13740:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13728:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3353,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13905:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3358,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13942:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3355,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13923:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3354,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"13916:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13916:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"13916:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13916:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3360,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"13950:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13916:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13905:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"13905:54:8"},"id":3364,"nodeType":"IfStatement","src":"13724:235:8","trueBody":{"id":3352,"nodeType":"Block","src":"13743:156:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"13756:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3331,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"13772:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13764:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3329,"name":"address","nodeType":"ElementaryTypeName","src":"13764:7:8","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13764:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13756:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":3346,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"13870:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3347,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13876:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3348,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13882:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3343,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13844:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3342,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"13837:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13837:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":284,"src":"13837:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13837:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"ExpressionStatement","src":"13837:54:8"},"id":3351,"nodeType":"IfStatement","src":"13752:139:8","trueBody":{"expression":{"arguments":[{"id":3338,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"13808:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3339,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"13814:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3335,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13786:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3334,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"13779:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13779:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"13779:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13779:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3341,"nodeType":"ExpressionStatement","src":"13779:44:8"}}]}},{"assignments":[3366],"declarations":[{"constant":false,"id":3366,"mutability":"mutable","name":"amountInWithFee","nameLocation":"14012:15:8","nodeType":"VariableDeclaration","scope":3419,"src":"14004:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"14004:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"14030:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"393937","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:3:8","typeDescriptions":{"typeIdentifier":"t_rational_997_by_1","typeString":"int_const 997"},"value":"997"},"src":"14030:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14004:40:8"},{"assignments":[3372],"declarations":[{"constant":false,"id":3372,"mutability":"mutable","name":"amountOut","nameLocation":"14059:9:8","nodeType":"VariableDeclaration","scope":3419,"src":"14051:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"14051:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"14072:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3374,"name":"reserveOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"14090:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14072:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14071:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"reserveIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"14105:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14117:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"14105:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3380,"name":"amountInWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"14124:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14105:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14104:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14071:69:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14051:89:8"},{"assignments":[3386,3388],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"amount0Out","nameLocation":"14156:10:8","nodeType":"VariableDeclaration","scope":3419,"src":"14148:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"14148:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"amount1Out","nameLocation":"14176:10:8","nodeType":"VariableDeclaration","scope":3419,"src":"14168:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3405,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"direction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"14190:9:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14203:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14190:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":3398,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"14234:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14253:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14245:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"14245:7:8","typeDescriptions":{}}},"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14245:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14233:23:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14190:66:8","trueExpression":{"components":[{"arguments":[{"hexValue":"30","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14216:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14208:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"14208:7:8","typeDescriptions":{}}},"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14208:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3396,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"14220:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14207:23:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14147:109:8"},{"expression":{"arguments":[{"id":3410,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"14289:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3411,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"14301:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3412,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"14313:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14327:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14317:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3413,"name":"bytes","nodeType":"ElementaryTypeName","src":"14321:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14317:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3407,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"14278:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3406,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"14263:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$4210_$","typeString":"type(contract IUniswapV2Pair)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14263:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$4210","typeString":"contract IUniswapV2Pair"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":4194,"src":"14263:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address,bytes memory) external"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14263:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3418,"nodeType":"ExpressionStatement","src":"14263:67:8"}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"13057:225:8","text":"@notice UniswapV2 pool swap\n @param stream [pool, direction, recipient]\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3420,"implemented":true,"kind":"function","modifiers":[],"name":"swapUniV2","nameLocation":"13295:9:8","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"stream","nameLocation":"13313:6:8","nodeType":"VariableDeclaration","scope":3420,"src":"13305:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"13305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"from","nameLocation":"13329:4:8","nodeType":"VariableDeclaration","scope":3420,"src":"13321:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"13321:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"tokenIn","nameLocation":"13343:7:8","nodeType":"VariableDeclaration","scope":3420,"src":"13335:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"13335:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"amountIn","nameLocation":"13360:8:8","nodeType":"VariableDeclaration","scope":3420,"src":"13352:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"13352:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13304:65:8"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"13378:0:8"},"scope":3628,"src":"13286:1050:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3465,"nodeType":"Block","src":"14651:228:8","statements":[{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"pool","nameLocation":"14666:4:8","nodeType":"VariableDeclaration","scope":3465,"src":"14658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"14658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3434,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"14673:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"14673:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14673:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14658:35:8"},{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"swapData","nameLocation":"14713:8:8","nodeType":"VariableDeclaration","scope":3465,"src":"14700:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3438,"name":"bytes","nodeType":"ElementaryTypeName","src":"14700:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3443,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3440,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"14724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":952,"src":"14724:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14724:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"14700:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"14755:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14767:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14755:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"IfStatement","src":"14751:84:8","trueBody":{"id":3456,"nodeType":"Block","src":"14770:65:8","statements":[{"expression":{"arguments":[{"id":3450,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"14797:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"14806:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3452,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14812:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3453,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"14818:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3447,"name":"bentoBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"14779:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IBentoBoxMinimal_$3842","typeString":"contract IBentoBoxMinimal"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":3799,"src":"14779:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14779:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3455,"nodeType":"ExpressionStatement","src":"14779:48:8"}]}},{"expression":{"arguments":[{"id":3462,"name":"swapData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"14864:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3459,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14853:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3458,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"14847:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$3936_$","typeString":"type(contract IPool)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14847:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$3936","typeString":"contract IPool"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"14847:16:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) external returns (uint256)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14847:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ExpressionStatement","src":"14847:26:8"}]},"documentation":{"id":3421,"nodeType":"StructuredDocumentation","src":"14342:211:8","text":"@notice Trident pool swap\n @param stream [pool, swapData]\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3466,"implemented":true,"kind":"function","modifiers":[],"name":"swapTrident","nameLocation":"14566:11:8","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"stream","nameLocation":"14586:6:8","nodeType":"VariableDeclaration","scope":3466,"src":"14578:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"14578:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"from","nameLocation":"14602:4:8","nodeType":"VariableDeclaration","scope":3466,"src":"14594:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3424,"name":"address","nodeType":"ElementaryTypeName","src":"14594:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"tokenIn","nameLocation":"14616:7:8","nodeType":"VariableDeclaration","scope":3466,"src":"14608:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"14608:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"amountIn","nameLocation":"14633:8:8","nodeType":"VariableDeclaration","scope":3466,"src":"14625:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"14625:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14577:65:8"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[],"src":"14651:0:8"},"scope":3628,"src":"14557:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3565,"nodeType":"Block","src":"15206:682:8","statements":[{"assignments":[3479],"declarations":[{"constant":false,"id":3479,"mutability":"mutable","name":"pool","nameLocation":"15221:4:8","nodeType":"VariableDeclaration","scope":3565,"src":"15213:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"15213:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3483,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3480,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"15228:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"15228:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15228:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15213:35:8"},{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"zeroForOne","nameLocation":"15260:10:8","nodeType":"VariableDeclaration","scope":3565,"src":"15255:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3484,"name":"bool","nodeType":"ElementaryTypeName","src":"15255:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3491,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3486,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"15273:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readUint8","nodeType":"MemberAccess","referencedDeclaration":898,"src":"15273:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint8)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15273:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15294:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15273:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15255:40:8"},{"assignments":[3493],"declarations":[{"constant":false,"id":3493,"mutability":"mutable","name":"recipient","nameLocation":"15310:9:8","nodeType":"VariableDeclaration","scope":3565,"src":"15302:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3492,"name":"address","nodeType":"ElementaryTypeName","src":"15302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3497,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3494,"name":"stream","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"15322:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"readAddress","nodeType":"MemberAccess","referencedDeclaration":943,"src":"15322:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_address_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (address)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15322:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15302:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"15355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3501,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"15371:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15363:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3499,"name":"address","nodeType":"ElementaryTypeName","src":"15363:7:8","typeDescriptions":{}}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15363:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15355:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"nodeType":"IfStatement","src":"15351:196:8","trueBody":{"id":3528,"nodeType":"Block","src":"15378:169:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"15395:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15403:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15403:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15395:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73776170556e6956333a20756e65787065637465642066726f6d2061646472657373","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15415:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_52366735308a5c07bd0e6762eb3c371a1df692a70693d51f6c7b4f1dff080a40","typeString":"literal_string \"swapUniV3: unexpected from address\""},"value":"swapUniV3: unexpected from address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52366735308a5c07bd0e6762eb3c371a1df692a70693d51f6c7b4f1dff080a40","typeString":"literal_string \"swapUniV3: unexpected from address\""}],"id":3504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15387:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15387:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"15387:65:8"},{"expression":{"arguments":[{"expression":{"id":3516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15494:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15494:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3520,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"15514:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RouteProcessor3_$3628","typeString":"contract RouteProcessor3"}],"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15506:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"15506:7:8","typeDescriptions":{}}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15506:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3524,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"15529:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15521:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"15521:7:8","typeDescriptions":{}}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15521:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3513,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"15468:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3512,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"15461:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15461:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":284,"src":"15461:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15461:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3527,"nodeType":"ExpressionStatement","src":"15461:78:8"}]}},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"lastCalledPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"15555:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3531,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"15572:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15555:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3533,"nodeType":"ExpressionStatement","src":"15555:21:8"},{"expression":{"arguments":[{"id":3538,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"15617:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3539,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"15635:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3542,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"15661:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15654:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3540,"name":"int256","nodeType":"ElementaryTypeName","src":"15654:6:8","typeDescriptions":{}}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15654:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"condition":{"id":3544,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"15679:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3548,"name":"MAX_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"15713:14:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15730:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15713:18:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15679:52:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3545,"name":"MIN_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"15692:14:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15692:18:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":3554,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"15751:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"15740:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"15740:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15740:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3535,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"15598:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3534,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"15583:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$4240_$","typeString":"type(contract IUniswapV3Pool)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15583:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$4240","typeString":"contract IUniswapV3Pool"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":4239,"src":"15583:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$","typeString":"function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15583:183:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"id":3557,"nodeType":"ExpressionStatement","src":"15583:183:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"lastCalledPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"15781:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3560,"name":"IMPOSSIBLE_POOL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"15799:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15781:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f722e73776170556e6956333a20756e6578706563746564","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15824:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_42a80a7be8a33858f4be3424bda19c8de91fa9a2d1474de6a845eae9c001c5f2","typeString":"literal_string \"RouteProcessor.swapUniV3: unexpected\""},"value":"RouteProcessor.swapUniV3: unexpected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42a80a7be8a33858f4be3424bda19c8de91fa9a2d1474de6a845eae9c001c5f2","typeString":"literal_string \"RouteProcessor.swapUniV3: unexpected\""}],"id":3558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15773:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15773:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"ExpressionStatement","src":"15773:90:8"}]},"documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"14885:225:8","text":"@notice UniswapV3 pool swap\n @param stream [pool, direction, recipient]\n @param from Where to take liquidity for swap\n @param tokenIn Input token\n @param amountIn Amount of tokenIn to take for swap"},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"swapUniV3","nameLocation":"15123:9:8","nodeType":"FunctionDefinition","parameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"stream","nameLocation":"15141:6:8","nodeType":"VariableDeclaration","scope":3566,"src":"15133:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"15133:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"from","nameLocation":"15157:4:8","nodeType":"VariableDeclaration","scope":3566,"src":"15149:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3470,"name":"address","nodeType":"ElementaryTypeName","src":"15149:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"tokenIn","nameLocation":"15171:7:8","nodeType":"VariableDeclaration","scope":3566,"src":"15163:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"15163:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"amountIn","nameLocation":"15188:8:8","nodeType":"VariableDeclaration","scope":3566,"src":"15180:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"15180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15132:65:8"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[],"src":"15206:0:8"},"scope":3628,"src":"15114:774:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3626,"nodeType":"Block","src":"16911:611:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"16926:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16926:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3579,"name":"lastCalledPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"16940:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16926:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f722e756e697377617056335377617043616c6c6261636b3a2063616c6c2066726f6d20756e6b6e6f776e20736f75726365","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16956:64:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ebc182e7c46fc6349e1408fd903da9c1df4edd533f302c0976acd00016bf545","typeString":"literal_string \"RouteProcessor.uniswapV3SwapCallback: call from unknown source\""},"value":"RouteProcessor.uniswapV3SwapCallback: call from unknown source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ebc182e7c46fc6349e1408fd903da9c1df4edd533f302c0976acd00016bf545","typeString":"literal_string \"RouteProcessor.uniswapV3SwapCallback: call from unknown source\""}],"id":3576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16918:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16918:103:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3583,"nodeType":"ExpressionStatement","src":"16918:103:8"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"lastCalledPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"17028:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3585,"name":"IMPOSSIBLE_POOL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"17045:23:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17028:40:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3587,"nodeType":"ExpressionStatement","src":"17028:40:8"},{"assignments":[3589],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"tokenIn","nameLocation":"17084:7:8","nodeType":"VariableDeclaration","scope":3626,"src":"17076:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"17076:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3597,"initialValue":{"arguments":[{"id":3592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17106:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17113:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:8","typeDescriptions":{}}}],"id":3595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17112:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":3590,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"17095:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"17095:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17095:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"17075:47:8"},{"assignments":[3599],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"amount","nameLocation":"17136:6:8","nodeType":"VariableDeclaration","scope":3626,"src":"17129:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3598,"name":"int256","nodeType":"ElementaryTypeName","src":"17129:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3606,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"amount0Delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"17145:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17160:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17145:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3604,"name":"amount1Delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"17179:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17145:46:8","trueExpression":{"id":3603,"name":"amount0Delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"17164:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"17129:62:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"17206:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17215:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17206:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f75746550726f636573736f722e756e697377617056335377617043616c6c6261636b3a206e6f7420706f73697469766520616d6f756e74","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17218:59:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e54319434d3864e8dd7c4cd9cdb6a79d069e029c55c261818cbfc4d729db80b","typeString":"literal_string \"RouteProcessor.uniswapV3SwapCallback: not positive amount\""},"value":"RouteProcessor.uniswapV3SwapCallback: not positive amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e54319434d3864e8dd7c4cd9cdb6a79d069e029c55c261818cbfc4d729db80b","typeString":"literal_string \"RouteProcessor.uniswapV3SwapCallback: not positive amount\""}],"id":3607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"17198:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17198:80:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3613,"nodeType":"ExpressionStatement","src":"17198:80:8"},{"expression":{"arguments":[{"expression":{"id":3618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"17488:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"17488:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"17508:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17500:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"17500:7:8","typeDescriptions":{}}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17500:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3615,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17466:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3614,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"17459:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17459:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":258,"src":"17459:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17459:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3625,"nodeType":"ExpressionStatement","src":"17459:57:8"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"15894:890:8","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nameLocation":"16797:21:8","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"amount0Delta","nameLocation":"16832:12:8","nodeType":"VariableDeclaration","scope":3627,"src":"16825:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3568,"name":"int256","nodeType":"ElementaryTypeName","src":"16825:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"amount1Delta","nameLocation":"16858:12:8","nodeType":"VariableDeclaration","scope":3627,"src":"16851:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3570,"name":"int256","nodeType":"ElementaryTypeName","src":"16851:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"data","nameLocation":"16892:4:8","nodeType":"VariableDeclaration","scope":3627,"src":"16877:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3572,"name":"bytes","nodeType":"ElementaryTypeName","src":"16877:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16818:83:8"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[],"src":"16911:0:8"},"scope":3628,"src":"16788:734:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3629,"src":"1106:16421:8","usedErrors":[]}],"src":"42:17487:8"},"id":8},"interfaces/IBentoBoxMinimal.sol":{"ast":{"absolutePath":"interfaces/IBentoBoxMinimal.sol","exportedSymbols":{"IBentoBoxMinimal":[3842],"Rebase":[3635],"RebaseLibrary":[3712],"StrategyData":[3642]},"id":3843,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3630,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"42:24:9"},{"canonicalName":"Rebase","id":3635,"members":[{"constant":false,"id":3632,"mutability":"mutable","name":"elastic","nameLocation":"99:7:9","nodeType":"VariableDeclaration","scope":3635,"src":"91:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3631,"name":"uint128","nodeType":"ElementaryTypeName","src":"91:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"base","nameLocation":"121:4:9","nodeType":"VariableDeclaration","scope":3635,"src":"113:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3633,"name":"uint128","nodeType":"ElementaryTypeName","src":"113:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"Rebase","nameLocation":"77:6:9","nodeType":"StructDefinition","scope":3843,"src":"70:59:9","visibility":"public"},{"canonicalName":"StrategyData","id":3642,"members":[{"constant":false,"id":3637,"mutability":"mutable","name":"strategyStartDate","nameLocation":"167:17:9","nodeType":"VariableDeclaration","scope":3642,"src":"160:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3636,"name":"uint64","nodeType":"ElementaryTypeName","src":"160:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"targetPercentage","nameLocation":"198:16:9","nodeType":"VariableDeclaration","scope":3642,"src":"191:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3638,"name":"uint64","nodeType":"ElementaryTypeName","src":"191:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3641,"mutability":"mutable","name":"balance","nameLocation":"229:7:9","nodeType":"VariableDeclaration","scope":3642,"src":"221:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3640,"name":"uint128","nodeType":"ElementaryTypeName","src":"221:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"StrategyData","nameLocation":"140:12:9","nodeType":"StructDefinition","scope":3843,"src":"133:171:9","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"RebaseLibrary","contractDependencies":[],"contractKind":"library","documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"308:32:9","text":"@notice A rebasing library"},"fullyImplemented":true,"id":3712,"linearizedBaseContracts":[3712],"name":"RebaseLibrary","nameLocation":"348:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":3676,"nodeType":"Block","src":"545:161:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3654,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"560:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"elastic","nodeType":"MemberAccess","referencedDeclaration":3632,"src":"560:13:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"577:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"560:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3674,"nodeType":"Block","src":"627:72:9","statements":[{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"642:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"elastic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"650:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3665,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"660:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"base","nodeType":"MemberAccess","referencedDeclaration":3634,"src":"660:10:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"650:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"649:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":3669,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"elastic","nodeType":"MemberAccess","referencedDeclaration":3632,"src":"674:13:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"649:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"642:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"642:45:9"}]},"id":3675,"nodeType":"IfStatement","src":"556:143:9","trueBody":{"id":3662,"nodeType":"Block","src":"580:41:9","statements":[{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3658,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"595:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3659,"name":"elastic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"602:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"595:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"595:14:9"}]}}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"369:79:9","text":"@notice Calculates the base value in relationship to `elastic` and `total`."},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"toBase","nameLocation":"463:6:9","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"total","nameLocation":"484:5:9","nodeType":"VariableDeclaration","scope":3677,"src":"470:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase"},"typeName":{"id":3646,"nodeType":"UserDefinedTypeName","pathNode":{"id":3645,"name":"Rebase","nodeType":"IdentifierPath","referencedDeclaration":3635,"src":"470:6:9"},"referencedDeclaration":3635,"src":"470:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_storage_ptr","typeString":"struct Rebase"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"elastic","nameLocation":"499:7:9","nodeType":"VariableDeclaration","scope":3677,"src":"491:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"491:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"469:38:9"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"base","nameLocation":"539:4:9","nodeType":"VariableDeclaration","scope":3677,"src":"531:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"531:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"530:14:9"},"scope":3712,"src":"454:252:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3710,"nodeType":"Block","src":"893:158:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3688,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"908:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"base","nodeType":"MemberAccess","referencedDeclaration":3634,"src":"908:10:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"922:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"908:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3708,"nodeType":"Block","src":"972:72:9","statements":[{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"elastic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"987:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"998:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3699,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"1005:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"elastic","nodeType":"MemberAccess","referencedDeclaration":3632,"src":"1005:13:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"998:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"997:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":3703,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"1022:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase memory"}},"id":3704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"base","nodeType":"MemberAccess","referencedDeclaration":3634,"src":"1022:10:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"997:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"987:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"987:45:9"}]},"id":3709,"nodeType":"IfStatement","src":"904:140:9","trueBody":{"id":3696,"nodeType":"Block","src":"925:41:9","statements":[{"expression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3692,"name":"elastic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3693,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"950:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"940:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3695,"nodeType":"ExpressionStatement","src":"940:14:9"}]}}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"714:79:9","text":"@notice Calculates the elastic value in relationship to `base` and `total`."},"id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"toElastic","nameLocation":"808:9:9","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"total","nameLocation":"832:5:9","nodeType":"VariableDeclaration","scope":3711,"src":"818:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase"},"typeName":{"id":3680,"nodeType":"UserDefinedTypeName","pathNode":{"id":3679,"name":"Rebase","nodeType":"IdentifierPath","referencedDeclaration":3635,"src":"818:6:9"},"referencedDeclaration":3635,"src":"818:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_storage_ptr","typeString":"struct Rebase"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"mutable","name":"base","nameLocation":"847:4:9","nodeType":"VariableDeclaration","scope":3711,"src":"839:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:35:9"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"elastic","nameLocation":"884:7:9","nodeType":"VariableDeclaration","scope":3711,"src":"876:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"875:17:9"},"scope":3712,"src":"799:252:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3843,"src":"340:714:9","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IBentoBoxMinimal","contractDependencies":[],"contractKind":"interface","documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"1058:119:9","text":"@notice Minimal BentoBox vault interface.\n @dev `token` is aliased as `address` from `IERC20` for simplicity."},"fullyImplemented":false,"id":3842,"linearizedBaseContracts":[3842],"name":"IBentoBoxMinimal","nameLocation":"1187:16:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"1211:59:9","text":"@notice Balance per ERC-20 token per account in shares."},"functionSelector":"f7888aec","id":3723,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1285:9:9","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3723,"src":"1295:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3715,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3723,"src":"1304:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1294:18:9"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3723,"src":"1336:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1335:9:9"},"scope":3842,"src":"1276:69:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3724,"nodeType":"StructuredDocumentation","src":"1353:285:9","text":"@dev Helper function to represent an `amount` of `token` in shares.\n @param token The ERC-20 token.\n @param amount The `token` amount.\n @param roundUp If the result `share` should be rounded up.\n @return share The token amount represented in shares."},"functionSelector":"da5139ca","id":3735,"implemented":false,"kind":"function","modifiers":[],"name":"toShare","nameLocation":"1653:7:9","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"token","nameLocation":"1679:5:9","nodeType":"VariableDeclaration","scope":3735,"src":"1671:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3725,"name":"address","nodeType":"ElementaryTypeName","src":"1671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"amount","nameLocation":"1703:6:9","nodeType":"VariableDeclaration","scope":3735,"src":"1695:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"roundUp","nameLocation":"1725:7:9","nodeType":"VariableDeclaration","scope":3735,"src":"1720:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3729,"name":"bool","nodeType":"ElementaryTypeName","src":"1720:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1660:79:9"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"share","nameLocation":"1771:5:9","nodeType":"VariableDeclaration","scope":3735,"src":"1763:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1762:15:9"},"scope":3842,"src":"1644:134:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1786:292:9","text":"@dev Helper function to represent shares back into the `token` amount.\n @param token The ERC-20 token.\n @param share The amount of shares.\n @param roundUp If the result should be rounded up.\n @return amount The share amount back into native representation."},"functionSelector":"56623118","id":3747,"implemented":false,"kind":"function","modifiers":[],"name":"toAmount","nameLocation":"2093:8:9","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"token","nameLocation":"2120:5:9","nodeType":"VariableDeclaration","scope":3747,"src":"2112:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"2112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"share","nameLocation":"2144:5:9","nodeType":"VariableDeclaration","scope":3747,"src":"2136:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2136:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"roundUp","nameLocation":"2165:7:9","nodeType":"VariableDeclaration","scope":3747,"src":"2160:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3741,"name":"bool","nodeType":"ElementaryTypeName","src":"2160:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2101:78:9"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"amount","nameLocation":"2211:6:9","nodeType":"VariableDeclaration","scope":3747,"src":"2203:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2203:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2202:16:9"},"scope":3842,"src":"2084:135:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"2227:78:9","text":"@notice Registers this contract so that users can approve it for BentoBox."},"functionSelector":"aee4d1b2","id":3751,"implemented":false,"kind":"function","modifiers":[],"name":"registerProtocol","nameLocation":"2320:16:9","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[],"src":"2336:2:9"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"2347:0:9"},"scope":3842,"src":"2311:37:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"2356:535:9","text":"@notice Deposit an amount of `token` represented in either `amount` or `share`.\n @param token The ERC-20 token to deposit.\n @param from which account to pull the tokens.\n @param to which account to push the tokens.\n @param amount Token amount in native representation to deposit.\n @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\n @return amountOut The amount deposited.\n @return shareOut The deposited amount represented in shares."},"functionSelector":"02b9446c","id":3769,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"2906:7:9","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"token","nameLocation":"2932:5:9","nodeType":"VariableDeclaration","scope":3769,"src":"2924:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"2924:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"from","nameLocation":"2956:4:9","nodeType":"VariableDeclaration","scope":3769,"src":"2948:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3755,"name":"address","nodeType":"ElementaryTypeName","src":"2948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"to","nameLocation":"2979:2:9","nodeType":"VariableDeclaration","scope":3769,"src":"2971:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"2971:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"amount","nameLocation":"3000:6:9","nodeType":"VariableDeclaration","scope":3769,"src":"2992:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"share","nameLocation":"3025:5:9","nodeType":"VariableDeclaration","scope":3769,"src":"3017:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"3017:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2913:124:9"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"amountOut","nameLocation":"3072:9:9","nodeType":"VariableDeclaration","scope":3769,"src":"3064:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"shareOut","nameLocation":"3091:8:9","nodeType":"VariableDeclaration","scope":3769,"src":"3083:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3063:37:9"},"scope":3842,"src":"2897:204:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"3109:386:9","text":"@notice Withdraws an amount of `token` from a user account.\n @param token_ The ERC-20 token to withdraw.\n @param from which user to pull the tokens.\n @param to which user to push the tokens.\n @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\n @param share Like above, but `share` takes precedence over `amount`."},"functionSelector":"97da6d30","id":3787,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"3510:8:9","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"token_","nameLocation":"3537:6:9","nodeType":"VariableDeclaration","scope":3787,"src":"3529:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"3529:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"from","nameLocation":"3562:4:9","nodeType":"VariableDeclaration","scope":3787,"src":"3554:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3773,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"to","nameLocation":"3585:2:9","nodeType":"VariableDeclaration","scope":3787,"src":"3577:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3775,"name":"address","nodeType":"ElementaryTypeName","src":"3577:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"amount","nameLocation":"3606:6:9","nodeType":"VariableDeclaration","scope":3787,"src":"3598:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"share","nameLocation":"3631:5:9","nodeType":"VariableDeclaration","scope":3787,"src":"3623:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3518:125:9"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"amountOut","nameLocation":"3670:9:9","nodeType":"VariableDeclaration","scope":3787,"src":"3662:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3662:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3785,"mutability":"mutable","name":"shareOut","nameLocation":"3689:8:9","nodeType":"VariableDeclaration","scope":3787,"src":"3681:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3681:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3661:37:9"},"scope":3842,"src":"3501:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"3707:272:9","text":"@notice Transfer shares from a user account to another one.\n @param token The ERC-20 token to transfer.\n @param from which user to pull the tokens.\n @param to which user to push the tokens.\n @param share The amount of `token` in shares."},"functionSelector":"f18d03cc","id":3799,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3994:8:9","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"token","nameLocation":"4021:5:9","nodeType":"VariableDeclaration","scope":3799,"src":"4013:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"from","nameLocation":"4045:4:9","nodeType":"VariableDeclaration","scope":3799,"src":"4037:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"4037:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"to","nameLocation":"4068:2:9","nodeType":"VariableDeclaration","scope":3799,"src":"4060:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3793,"name":"address","nodeType":"ElementaryTypeName","src":"4060:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"share","nameLocation":"4089:5:9","nodeType":"VariableDeclaration","scope":3799,"src":"4081:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4081:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4002:99:9"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[],"src":"4110:0:9"},"scope":3842,"src":"3985:126:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"4119:64:9","text":"@dev Reads the Rebase `totals`from storage for a given token"},"functionSelector":"4ffe34db","id":3808,"implemented":false,"kind":"function","modifiers":[],"name":"totals","nameLocation":"4198:6:9","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"token","nameLocation":"4213:5:9","nodeType":"VariableDeclaration","scope":3808,"src":"4205:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"4205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4204:15:9"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"total","nameLocation":"4257:5:9","nodeType":"VariableDeclaration","scope":3808,"src":"4243:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_memory_ptr","typeString":"struct Rebase"},"typeName":{"id":3805,"nodeType":"UserDefinedTypeName","pathNode":{"id":3804,"name":"Rebase","nodeType":"IdentifierPath","referencedDeclaration":3635,"src":"4243:6:9"},"referencedDeclaration":3635,"src":"4243:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Rebase_$3635_storage_ptr","typeString":"struct Rebase"}},"visibility":"internal"}],"src":"4242:21:9"},"scope":3842,"src":"4189:75:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"df23b45b","id":3816,"implemented":false,"kind":"function","modifiers":[],"name":"strategyData","nameLocation":"4281:12:9","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"token","nameLocation":"4302:5:9","nodeType":"VariableDeclaration","scope":3816,"src":"4294:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3809,"name":"address","nodeType":"ElementaryTypeName","src":"4294:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4293:15:9"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"total","nameLocation":"4352:5:9","nodeType":"VariableDeclaration","scope":3816,"src":"4332:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyData_$3642_memory_ptr","typeString":"struct StrategyData"},"typeName":{"id":3813,"nodeType":"UserDefinedTypeName","pathNode":{"id":3812,"name":"StrategyData","nodeType":"IdentifierPath","referencedDeclaration":3642,"src":"4332:12:9"},"referencedDeclaration":3642,"src":"4332:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyData_$3642_storage_ptr","typeString":"struct StrategyData"}},"visibility":"internal"}],"src":"4331:27:9"},"scope":3842,"src":"4272:87:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"4367:64:9","text":"@dev Approves users' BentoBox assets to a \"master\" contract."},"functionSelector":"c0a47c93","id":3832,"implemented":false,"kind":"function","modifiers":[],"name":"setMasterContractApproval","nameLocation":"4446:25:9","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"user","nameLocation":"4490:4:9","nodeType":"VariableDeclaration","scope":3832,"src":"4482:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3818,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"masterContract","nameLocation":"4513:14:9","nodeType":"VariableDeclaration","scope":3832,"src":"4505:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3820,"name":"address","nodeType":"ElementaryTypeName","src":"4505:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"approved","nameLocation":"4543:8:9","nodeType":"VariableDeclaration","scope":3832,"src":"4538:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3822,"name":"bool","nodeType":"ElementaryTypeName","src":"4538:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"v","nameLocation":"4568:1:9","nodeType":"VariableDeclaration","scope":3832,"src":"4562:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3824,"name":"uint8","nodeType":"ElementaryTypeName","src":"4562:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"r","nameLocation":"4588:1:9","nodeType":"VariableDeclaration","scope":3832,"src":"4580:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4580:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"s","nameLocation":"4608:1:9","nodeType":"VariableDeclaration","scope":3832,"src":"4600:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4600:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4471:145:9"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[],"src":"4625:0:9"},"scope":3842,"src":"4437:189:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"66c6bb0b","id":3841,"implemented":false,"kind":"function","modifiers":[],"name":"harvest","nameLocation":"4643:7:9","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"token","nameLocation":"4669:5:9","nodeType":"VariableDeclaration","scope":3841,"src":"4661:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"4661:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"balance","nameLocation":"4690:7:9","nodeType":"VariableDeclaration","scope":3841,"src":"4685:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3835,"name":"bool","nodeType":"ElementaryTypeName","src":"4685:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"maxChangeAmount","nameLocation":"4716:15:9","nodeType":"VariableDeclaration","scope":3841,"src":"4708:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4650:88:9"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[],"src":"4747:0:9"},"scope":3842,"src":"4634:114:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3843,"src":"1177:3574:9","usedErrors":[]}],"src":"42:4711:9"},"id":9},"interfaces/IPool.sol":{"ast":{"absolutePath":"interfaces/IPool.sol","exportedSymbols":{"IPool":[3936]},"id":3937,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3844,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"48:24:10"},{"id":3845,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"74:33:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":3846,"nodeType":"StructuredDocumentation","src":"111:37:10","text":"@notice Trident pool interface."},"fullyImplemented":false,"id":3936,"linearizedBaseContracts":[3936],"name":"IPool","nameLocation":"158:5:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"171:276:10","text":"@notice Executes a swap from one token to another.\n @dev The input tokens must've already been sent to the pool.\n @param data ABI-encoded params that the pool requires.\n @return finalAmountOut The amount of output tokens that were sent to the user."},"functionSelector":"627dd56a","id":3854,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"462:4:10","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"data","nameLocation":"482:4:10","nodeType":"VariableDeclaration","scope":3854,"src":"467:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"467:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"466:21:10"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"finalAmountOut","nameLocation":"514:14:10","nodeType":"VariableDeclaration","scope":3854,"src":"506:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"505:24:10"},"scope":3936,"src":"453:77:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"538:331:10","text":"@notice Executes a swap from one token to another with a callback.\n @dev This function allows borrowing the output tokens and sending the input tokens in the callback.\n @param data ABI-encoded params that the pool requires.\n @return finalAmountOut The amount of output tokens that were sent to the user."},"functionSelector":"053da1c8","id":3862,"implemented":false,"kind":"function","modifiers":[],"name":"flashSwap","nameLocation":"884:9:10","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"data","nameLocation":"909:4:10","nodeType":"VariableDeclaration","scope":3862,"src":"894:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3856,"name":"bytes","nodeType":"ElementaryTypeName","src":"894:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"893:21:10"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"finalAmountOut","nameLocation":"941:14:10","nodeType":"VariableDeclaration","scope":3862,"src":"933:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"932:24:10"},"scope":3936,"src":"875:82:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"965:188:10","text":"@notice Mints liquidity tokens.\n @param data ABI-encoded params that the pool requires.\n @return liquidity The amount of liquidity tokens that were minted for the user."},"functionSelector":"7ba0e2e7","id":3870,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1168:4:10","nodeType":"FunctionDefinition","parameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"data","nameLocation":"1188:4:10","nodeType":"VariableDeclaration","scope":3870,"src":"1173:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3864,"name":"bytes","nodeType":"ElementaryTypeName","src":"1173:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1172:21:10"},"returnParameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"liquidity","nameLocation":"1220:9:10","nodeType":"VariableDeclaration","scope":3870,"src":"1212:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1211:19:10"},"scope":3936,"src":"1159:72:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"1239:270:10","text":"@notice Burns liquidity tokens.\n @dev The input LP tokens must've already been sent to the pool.\n @param data ABI-encoded params that the pool requires.\n @return withdrawnAmounts The amount of various output tokens that were sent to the user."},"functionSelector":"2a07b6c7","id":3880,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1524:4:10","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"data","nameLocation":"1544:4:10","nodeType":"VariableDeclaration","scope":3880,"src":"1529:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"1529:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1528:21:10"},"returnParameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"withdrawnAmounts","nameLocation":"1589:16:10","nodeType":"VariableDeclaration","scope":3880,"src":"1568:37:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenAmount_$3935_memory_ptr_$dyn_memory_ptr","typeString":"struct IPool.TokenAmount[]"},"typeName":{"baseType":{"id":3876,"nodeType":"UserDefinedTypeName","pathNode":{"id":3875,"name":"TokenAmount","nodeType":"IdentifierPath","referencedDeclaration":3935,"src":"1568:11:10"},"referencedDeclaration":3935,"src":"1568:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_TokenAmount_$3935_storage_ptr","typeString":"struct IPool.TokenAmount"}},"id":3877,"nodeType":"ArrayTypeName","src":"1568:13:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenAmount_$3935_storage_$dyn_storage_ptr","typeString":"struct IPool.TokenAmount[]"}},"visibility":"internal"}],"src":"1567:39:10"},"scope":3936,"src":"1515:92:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"1615:281:10","text":"@notice Burns liquidity tokens for a single output token.\n @dev The input LP tokens must've already been sent to the pool.\n @param data ABI-encoded params that the pool requires.\n @return amountOut The amount of output tokens that were sent to the user."},"functionSelector":"af8c09bf","id":3888,"implemented":false,"kind":"function","modifiers":[],"name":"burnSingle","nameLocation":"1911:10:10","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"data","nameLocation":"1937:4:10","nodeType":"VariableDeclaration","scope":3888,"src":"1922:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3882,"name":"bytes","nodeType":"ElementaryTypeName","src":"1922:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1921:21:10"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"amountOut","nameLocation":"1969:9:10","nodeType":"VariableDeclaration","scope":3888,"src":"1961:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1960:19:10"},"scope":3936,"src":"1902:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"1988:50:10","text":"@return A unique identifier for the pool type."},"functionSelector":"a69840a8","id":3894,"implemented":false,"kind":"function","modifiers":[],"name":"poolIdentifier","nameLocation":"2053:14:10","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[],"src":"2067:2:10"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"2093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2093:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2092:9:10"},"scope":3936,"src":"2044:58:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"2110:53:10","text":"@return An array of tokens supported by the pool."},"functionSelector":"67e4ac2c","id":3901,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"2178:9:10","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[],"src":"2187:2:10"},"returnParameters":{"id":3900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3901,"src":"2213:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3897,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3898,"nodeType":"ArrayTypeName","src":"2213:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2212:18:10"},"scope":3936,"src":"2169:62:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"2239:351:10","text":"@notice Simulates a trade and returns the expected output.\n @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\n @param data ABI-encoded params that the pool requires.\n @return finalAmountOut The amount of output tokens that will be sent to the user if the trade is executed."},"functionSelector":"a8f1f52e","id":3909,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2605:12:10","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"data","nameLocation":"2633:4:10","nodeType":"VariableDeclaration","scope":3909,"src":"2618:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3903,"name":"bytes","nodeType":"ElementaryTypeName","src":"2618:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2617:21:10"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"finalAmountOut","nameLocation":"2670:14:10","nodeType":"VariableDeclaration","scope":3909,"src":"2662:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2662:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2661:24:10"},"scope":3936,"src":"2596:90:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"2694:351:10","text":"@notice Simulates a trade and returns the expected output.\n @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\n @param data ABI-encoded params that the pool requires.\n @return finalAmountIn The amount of input tokens that are required from the user if the trade is executed."},"functionSelector":"499a3c50","id":3917,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"3060:11:10","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"data","nameLocation":"3087:4:10","nodeType":"VariableDeclaration","scope":3917,"src":"3072:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3911,"name":"bytes","nodeType":"ElementaryTypeName","src":"3072:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3071:21:10"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"finalAmountIn","nameLocation":"3124:13:10","nodeType":"VariableDeclaration","scope":3917,"src":"3116:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:23:10"},"scope":3936,"src":"3051:88:10","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":3918,"nodeType":"StructuredDocumentation","src":"3147:49:10","text":"@dev This event must be emitted on all swaps."},"id":3930,"name":"Swap","nameLocation":"3208:4:10","nodeType":"EventDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3229:9:10","nodeType":"VariableDeclaration","scope":3930,"src":"3213:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3919,"name":"address","nodeType":"ElementaryTypeName","src":"3213:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3922,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"3256:7:10","nodeType":"VariableDeclaration","scope":3930,"src":"3240:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"3240:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3924,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"3281:8:10","nodeType":"VariableDeclaration","scope":3930,"src":"3265:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3923,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3926,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"3299:8:10","nodeType":"VariableDeclaration","scope":3930,"src":"3291:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"3317:9:10","nodeType":"VariableDeclaration","scope":3930,"src":"3309:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3212:115:10"},"src":"3202:126:10"},{"canonicalName":"IPool.TokenAmount","id":3935,"members":[{"constant":false,"id":3932,"mutability":"mutable","name":"token","nameLocation":"3432:5:10","nodeType":"VariableDeclaration","scope":3935,"src":"3424:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3931,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"amount","nameLocation":"3456:6:10","nodeType":"VariableDeclaration","scope":3935,"src":"3448:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenAmount","nameLocation":"3401:11:10","nodeType":"StructDefinition","scope":3936,"src":"3394:76:10","visibility":"public"}],"scope":3937,"src":"148:3325:10","usedErrors":[]}],"src":"48:3427:10"},"id":10},"interfaces/ITridentCLPool.sol":{"ast":{"absolutePath":"interfaces/ITridentCLPool.sol","exportedSymbols":{"ITridentCLPool":[3968]},"id":3969,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3938,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"48:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ITridentCLPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3968,"linearizedBaseContracts":[3968],"name":"ITridentCLPool","nameLocation":"85:14:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0dfe1681","id":3943,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"114:6:11","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[],"src":"120:2:11"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"141:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"140:9:11"},"scope":3968,"src":"105:45:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":3948,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"163:6:11","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[],"src":"169:2:11"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"190:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:9:11"},"scope":3968,"src":"154:45:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"21a76118","id":3967,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"214:4:11","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"recipient","nameLocation":"233:9:11","nodeType":"VariableDeclaration","scope":3967,"src":"225:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"225:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"zeroForOne","nameLocation":"254:10:11","nodeType":"VariableDeclaration","scope":3967,"src":"249:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3951,"name":"bool","nodeType":"ElementaryTypeName","src":"249:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"amountSpecified","nameLocation":"278:15:11","nodeType":"VariableDeclaration","scope":3967,"src":"271:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3953,"name":"int256","nodeType":"ElementaryTypeName","src":"271:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"308:17:11","nodeType":"VariableDeclaration","scope":3967,"src":"300:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3955,"name":"uint160","nodeType":"ElementaryTypeName","src":"300:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"unwrapBento","nameLocation":"337:11:11","nodeType":"VariableDeclaration","scope":3967,"src":"332:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3957,"name":"bool","nodeType":"ElementaryTypeName","src":"332:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"data","nameLocation":"370:4:11","nodeType":"VariableDeclaration","scope":3967,"src":"355:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3959,"name":"bytes","nodeType":"ElementaryTypeName","src":"355:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"218:161:11"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"amount0","nameLocation":"405:7:11","nodeType":"VariableDeclaration","scope":3967,"src":"398:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3962,"name":"int256","nodeType":"ElementaryTypeName","src":"398:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"amount1","nameLocation":"421:7:11","nodeType":"VariableDeclaration","scope":3967,"src":"414:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3964,"name":"int256","nodeType":"ElementaryTypeName","src":"414:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"397:32:11"},"scope":3968,"src":"205:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3969,"src":"75:358:11","usedErrors":[]}],"src":"48:387:11"},"id":11},"interfaces/IUniswapV2Pair.sol":{"ast":{"absolutePath":"interfaces/IUniswapV2Pair.sol","exportedSymbols":{"IUniswapV2Pair":[4210]},"id":4211,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3970,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"39:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Pair","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4210,"linearizedBaseContracts":[4210],"name":"IUniswapV2Pair","nameLocation":"77:14:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":3978,"name":"Approval","nameLocation":"105:8:12","nodeType":"EventDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"130:5:12","nodeType":"VariableDeclaration","scope":3978,"src":"114:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"114:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3974,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"153:7:12","nodeType":"VariableDeclaration","scope":3978,"src":"137:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3973,"name":"address","nodeType":"ElementaryTypeName","src":"137:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3976,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"167:5:12","nodeType":"VariableDeclaration","scope":3978,"src":"162:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint","nodeType":"ElementaryTypeName","src":"162:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"113:60:12"},"src":"99:75:12"},{"anonymous":false,"id":3986,"name":"Transfer","nameLocation":"186:8:12","nodeType":"EventDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"211:4:12","nodeType":"VariableDeclaration","scope":3986,"src":"195:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3982,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"233:2:12","nodeType":"VariableDeclaration","scope":3986,"src":"217:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"217:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3984,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"242:5:12","nodeType":"VariableDeclaration","scope":3986,"src":"237:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint","nodeType":"ElementaryTypeName","src":"237:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"194:54:12"},"src":"180:69:12"},{"functionSelector":"06fdde03","id":3991,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"266:4:12","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[],"src":"270:2:12"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"296:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3988,"name":"string","nodeType":"ElementaryTypeName","src":"296:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"295:15:12"},"scope":4210,"src":"257:54:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":3996,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"326:6:12","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[],"src":"332:2:12"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3996,"src":"358:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3993,"name":"string","nodeType":"ElementaryTypeName","src":"358:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"357:15:12"},"scope":4210,"src":"317:56:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":4001,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"388:8:12","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[],"src":"396:2:12"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4001,"src":"422:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3998,"name":"uint8","nodeType":"ElementaryTypeName","src":"422:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"421:7:12"},"scope":4210,"src":"379:50:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":4006,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"444:11:12","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[],"src":"455:2:12"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4006,"src":"481:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint","nodeType":"ElementaryTypeName","src":"481:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"480:6:12"},"scope":4210,"src":"435:52:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":4013,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"502:9:12","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"owner","nameLocation":"520:5:12","nodeType":"VariableDeclaration","scope":4013,"src":"512:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4007,"name":"address","nodeType":"ElementaryTypeName","src":"512:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"511:15:12"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"550:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint","nodeType":"ElementaryTypeName","src":"550:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"549:6:12"},"scope":4210,"src":"493:63:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":4022,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"571:9:12","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"owner","nameLocation":"589:5:12","nodeType":"VariableDeclaration","scope":4022,"src":"581:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4014,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"spender","nameLocation":"604:7:12","nodeType":"VariableDeclaration","scope":4022,"src":"596:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"580:32:12"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4022,"src":"636:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint","nodeType":"ElementaryTypeName","src":"636:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:6:12"},"scope":4210,"src":"562:80:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4031,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"659:7:12","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"spender","nameLocation":"675:7:12","nodeType":"VariableDeclaration","scope":4031,"src":"667:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"value","nameLocation":"689:5:12","nodeType":"VariableDeclaration","scope":4031,"src":"684:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint","nodeType":"ElementaryTypeName","src":"684:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:29:12"},"returnParameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"714:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4028,"name":"bool","nodeType":"ElementaryTypeName","src":"714:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"713:6:12"},"scope":4210,"src":"650:70:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4040,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"735:8:12","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"to","nameLocation":"752:2:12","nodeType":"VariableDeclaration","scope":4040,"src":"744:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4032,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"value","nameLocation":"761:5:12","nodeType":"VariableDeclaration","scope":4040,"src":"756:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint","nodeType":"ElementaryTypeName","src":"756:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"743:24:12"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"786:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4037,"name":"bool","nodeType":"ElementaryTypeName","src":"786:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"785:6:12"},"scope":4210,"src":"726:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":4051,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"807:12:12","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"from","nameLocation":"828:4:12","nodeType":"VariableDeclaration","scope":4051,"src":"820:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"to","nameLocation":"842:2:12","nodeType":"VariableDeclaration","scope":4051,"src":"834:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4043,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"value","nameLocation":"851:5:12","nodeType":"VariableDeclaration","scope":4051,"src":"846:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint","nodeType":"ElementaryTypeName","src":"846:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:38:12"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"876:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"876:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"875:6:12"},"scope":4210,"src":"798:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3644e515","id":4056,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"899:16:12","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[],"src":"915:2:12"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4056,"src":"941:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"941:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"940:9:12"},"scope":4210,"src":"890:60:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"30adf81f","id":4061,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nameLocation":"965:15:12","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"980:2:12"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4061,"src":"1006:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1006:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1005:9:12"},"scope":4210,"src":"956:59:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"7ecebe00","id":4068,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1030:6:12","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"owner","nameLocation":"1045:5:12","nodeType":"VariableDeclaration","scope":4068,"src":"1037:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"1037:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1036:15:12"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4068,"src":"1075:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint","nodeType":"ElementaryTypeName","src":"1075:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:6:12"},"scope":4210,"src":"1021:60:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":4085,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1098:6:12","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"owner","nameLocation":"1113:5:12","nodeType":"VariableDeclaration","scope":4085,"src":"1105:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"spender","nameLocation":"1128:7:12","nodeType":"VariableDeclaration","scope":4085,"src":"1120:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"value","nameLocation":"1142:5:12","nodeType":"VariableDeclaration","scope":4085,"src":"1137:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint","nodeType":"ElementaryTypeName","src":"1137:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"deadline","nameLocation":"1154:8:12","nodeType":"VariableDeclaration","scope":4085,"src":"1149:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint","nodeType":"ElementaryTypeName","src":"1149:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"v","nameLocation":"1170:1:12","nodeType":"VariableDeclaration","scope":4085,"src":"1164:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4077,"name":"uint8","nodeType":"ElementaryTypeName","src":"1164:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"r","nameLocation":"1181:1:12","nodeType":"VariableDeclaration","scope":4085,"src":"1173:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1173:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"s","nameLocation":"1192:1:12","nodeType":"VariableDeclaration","scope":4085,"src":"1184:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1184:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1104:90:12"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[],"src":"1203:0:12"},"scope":4210,"src":"1089:115:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"id":4093,"name":"Mint","nameLocation":"1218:4:12","nodeType":"EventDefinition","parameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1239:6:12","nodeType":"VariableDeclaration","scope":4093,"src":"1223:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4089,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1252:7:12","nodeType":"VariableDeclaration","scope":4093,"src":"1247:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint","nodeType":"ElementaryTypeName","src":"1247:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4091,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1266:7:12","nodeType":"VariableDeclaration","scope":4093,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint","nodeType":"ElementaryTypeName","src":"1261:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:52:12"},"src":"1212:63:12"},{"anonymous":false,"id":4103,"name":"Burn","nameLocation":"1287:4:12","nodeType":"EventDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1308:6:12","nodeType":"VariableDeclaration","scope":4103,"src":"1292:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4097,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1321:7:12","nodeType":"VariableDeclaration","scope":4103,"src":"1316:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint","nodeType":"ElementaryTypeName","src":"1316:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4099,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1335:7:12","nodeType":"VariableDeclaration","scope":4103,"src":"1330:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint","nodeType":"ElementaryTypeName","src":"1330:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4101,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1360:2:12","nodeType":"VariableDeclaration","scope":4103,"src":"1344:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4100,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1291:72:12"},"src":"1281:83:12"},{"anonymous":false,"id":4117,"name":"Swap","nameLocation":"1376:4:12","nodeType":"EventDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1407:6:12","nodeType":"VariableDeclaration","scope":4117,"src":"1391:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4107,"indexed":false,"mutability":"mutable","name":"amount0In","nameLocation":"1429:9:12","nodeType":"VariableDeclaration","scope":4117,"src":"1424:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint","nodeType":"ElementaryTypeName","src":"1424:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4109,"indexed":false,"mutability":"mutable","name":"amount1In","nameLocation":"1454:9:12","nodeType":"VariableDeclaration","scope":4117,"src":"1449:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint","nodeType":"ElementaryTypeName","src":"1449:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4111,"indexed":false,"mutability":"mutable","name":"amount0Out","nameLocation":"1479:10:12","nodeType":"VariableDeclaration","scope":4117,"src":"1474:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint","nodeType":"ElementaryTypeName","src":"1474:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4113,"indexed":false,"mutability":"mutable","name":"amount1Out","nameLocation":"1505:10:12","nodeType":"VariableDeclaration","scope":4117,"src":"1500:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint","nodeType":"ElementaryTypeName","src":"1500:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4115,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1542:2:12","nodeType":"VariableDeclaration","scope":4117,"src":"1526:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4114,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1380:171:12"},"src":"1370:182:12"},{"anonymous":false,"id":4123,"name":"Sync","nameLocation":"1564:4:12","nodeType":"EventDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"indexed":false,"mutability":"mutable","name":"reserve0","nameLocation":"1577:8:12","nodeType":"VariableDeclaration","scope":4123,"src":"1569:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4118,"name":"uint112","nodeType":"ElementaryTypeName","src":"1569:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4121,"indexed":false,"mutability":"mutable","name":"reserve1","nameLocation":"1595:8:12","nodeType":"VariableDeclaration","scope":4123,"src":"1587:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4120,"name":"uint112","nodeType":"ElementaryTypeName","src":"1587:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"1568:36:12"},"src":"1558:47:12"},{"functionSelector":"ba9a7a56","id":4128,"implemented":false,"kind":"function","modifiers":[],"name":"MINIMUM_LIQUIDITY","nameLocation":"1622:17:12","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[],"src":"1639:2:12"},"returnParameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4128,"src":"1665:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint","nodeType":"ElementaryTypeName","src":"1665:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1664:6:12"},"scope":4210,"src":"1613:58:12","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"c45a0155","id":4133,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"1686:7:12","nodeType":"FunctionDefinition","parameters":{"id":4129,"nodeType":"ParameterList","parameters":[],"src":"1693:2:12"},"returnParameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"1719:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"1719:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1718:9:12"},"scope":4210,"src":"1677:51:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0dfe1681","id":4138,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"1743:6:12","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[],"src":"1749:2:12"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4138,"src":"1775:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4135,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:9:12"},"scope":4210,"src":"1734:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":4143,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"1799:6:12","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[],"src":"1805:2:12"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4143,"src":"1831:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4140,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1830:9:12"},"scope":4210,"src":"1790:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":4152,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"1855:11:12","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[],"src":"1866:2:12"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"reserve0","nameLocation":"1900:8:12","nodeType":"VariableDeclaration","scope":4152,"src":"1892:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4145,"name":"uint112","nodeType":"ElementaryTypeName","src":"1892:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"reserve1","nameLocation":"1918:8:12","nodeType":"VariableDeclaration","scope":4152,"src":"1910:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4147,"name":"uint112","nodeType":"ElementaryTypeName","src":"1910:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"1935:18:12","nodeType":"VariableDeclaration","scope":4152,"src":"1928:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4149,"name":"uint32","nodeType":"ElementaryTypeName","src":"1928:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1891:63:12"},"scope":4210,"src":"1846:109:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5909c0d5","id":4157,"implemented":false,"kind":"function","modifiers":[],"name":"price0CumulativeLast","nameLocation":"1970:20:12","nodeType":"FunctionDefinition","parameters":{"id":4153,"nodeType":"ParameterList","parameters":[],"src":"1990:2:12"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4157,"src":"2016:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2015:6:12"},"scope":4210,"src":"1961:61:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5a3d5493","id":4162,"implemented":false,"kind":"function","modifiers":[],"name":"price1CumulativeLast","nameLocation":"2037:20:12","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[],"src":"2057:2:12"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"2083:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint","nodeType":"ElementaryTypeName","src":"2083:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2082:6:12"},"scope":4210,"src":"2028:61:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7464fc3d","id":4167,"implemented":false,"kind":"function","modifiers":[],"name":"kLast","nameLocation":"2104:5:12","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[],"src":"2109:2:12"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"2135:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint","nodeType":"ElementaryTypeName","src":"2135:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2134:6:12"},"scope":4210,"src":"2095:46:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a627842","id":4174,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2158:4:12","nodeType":"FunctionDefinition","parameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"to","nameLocation":"2171:2:12","nodeType":"VariableDeclaration","scope":4174,"src":"2163:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"2163:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2162:12:12"},"returnParameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"liquidity","nameLocation":"2198:9:12","nodeType":"VariableDeclaration","scope":4174,"src":"2193:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint","nodeType":"ElementaryTypeName","src":"2193:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2192:16:12"},"scope":4210,"src":"2149:60:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":4183,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2224:4:12","nodeType":"FunctionDefinition","parameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"to","nameLocation":"2237:2:12","nodeType":"VariableDeclaration","scope":4183,"src":"2229:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2228:12:12"},"returnParameters":{"id":4182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"amount0","nameLocation":"2264:7:12","nodeType":"VariableDeclaration","scope":4183,"src":"2259:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint","nodeType":"ElementaryTypeName","src":"2259:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4181,"mutability":"mutable","name":"amount1","nameLocation":"2278:7:12","nodeType":"VariableDeclaration","scope":4183,"src":"2273:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4180,"name":"uint","nodeType":"ElementaryTypeName","src":"2273:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2258:28:12"},"scope":4210,"src":"2215:72:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"022c0d9f","id":4194,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2302:4:12","nodeType":"FunctionDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"amount0Out","nameLocation":"2312:10:12","nodeType":"VariableDeclaration","scope":4194,"src":"2307:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint","nodeType":"ElementaryTypeName","src":"2307:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"amount1Out","nameLocation":"2329:10:12","nodeType":"VariableDeclaration","scope":4194,"src":"2324:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint","nodeType":"ElementaryTypeName","src":"2324:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"to","nameLocation":"2349:2:12","nodeType":"VariableDeclaration","scope":4194,"src":"2341:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4188,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4191,"mutability":"mutable","name":"data","nameLocation":"2368:4:12","nodeType":"VariableDeclaration","scope":4194,"src":"2353:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4190,"name":"bytes","nodeType":"ElementaryTypeName","src":"2353:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2306:67:12"},"returnParameters":{"id":4193,"nodeType":"ParameterList","parameters":[],"src":"2382:0:12"},"scope":4210,"src":"2293:90:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bc25cf77","id":4199,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"2398:4:12","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4196,"mutability":"mutable","name":"to","nameLocation":"2411:2:12","nodeType":"VariableDeclaration","scope":4199,"src":"2403:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"2403:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2402:12:12"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[],"src":"2423:0:12"},"scope":4210,"src":"2389:35:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fff6cae9","id":4202,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"2439:4:12","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[],"src":"2443:2:12"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[],"src":"2454:0:12"},"scope":4210,"src":"2430:25:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"485cc955","id":4209,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"2472:10:12","nodeType":"FunctionDefinition","parameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"2483:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4203,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"2492:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4205,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2482:18:12"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[],"src":"2509:0:12"},"scope":4210,"src":"2463:47:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4211,"src":"67:2446:12","usedErrors":[]}],"src":"39:2474:12"},"id":12},"interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[4240]},"id":4241,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4212,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"48:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4240,"linearizedBaseContracts":[4240],"name":"IUniswapV3Pool","nameLocation":"85:14:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0dfe1681","id":4217,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"114:6:13","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[],"src":"120:2:13"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"141:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4214,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"140:9:13"},"scope":4240,"src":"105:45:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":4222,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"163:6:13","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[],"src":"169:2:13"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"190:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4219,"name":"address","nodeType":"ElementaryTypeName","src":"190:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"189:9:13"},"scope":4240,"src":"154:45:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"128acb08","id":4239,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"214:4:13","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"recipient","nameLocation":"233:9:13","nodeType":"VariableDeclaration","scope":4239,"src":"225:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4223,"name":"address","nodeType":"ElementaryTypeName","src":"225:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"zeroForOne","nameLocation":"254:10:13","nodeType":"VariableDeclaration","scope":4239,"src":"249:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4225,"name":"bool","nodeType":"ElementaryTypeName","src":"249:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"amountSpecified","nameLocation":"278:15:13","nodeType":"VariableDeclaration","scope":4239,"src":"271:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4227,"name":"int256","nodeType":"ElementaryTypeName","src":"271:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"308:17:13","nodeType":"VariableDeclaration","scope":4239,"src":"300:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4229,"name":"uint160","nodeType":"ElementaryTypeName","src":"300:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"data","nameLocation":"347:4:13","nodeType":"VariableDeclaration","scope":4239,"src":"332:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"332:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"218:138:13"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"amount0","nameLocation":"382:7:13","nodeType":"VariableDeclaration","scope":4239,"src":"375:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4234,"name":"int256","nodeType":"ElementaryTypeName","src":"375:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"amount1","nameLocation":"398:7:13","nodeType":"VariableDeclaration","scope":4239,"src":"391:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4236,"name":"int256","nodeType":"ElementaryTypeName","src":"391:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"374:32:13"},"scope":4240,"src":"205:202:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4241,"src":"75:335:13","usedErrors":[]}],"src":"48:364:13"},"id":13},"interfaces/IWETH.sol":{"ast":{"absolutePath":"interfaces/IWETH.sol","exportedSymbols":{"IWETH":[4260]},"id":4261,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4242,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"48:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4260,"linearizedBaseContracts":[4260],"name":"IWETH","nameLocation":"85:5:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":4245,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"105:7:14","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[],"src":"112:2:14"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[],"src":"131:0:14"},"scope":4260,"src":"96:36:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4254,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"147:8:14","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"to","nameLocation":"164:2:14","nodeType":"VariableDeclaration","scope":4254,"src":"156:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4246,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"value","nameLocation":"176:5:14","nodeType":"VariableDeclaration","scope":4254,"src":"168:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"155:27:14"},"returnParameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4254,"src":"201:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4251,"name":"bool","nodeType":"ElementaryTypeName","src":"201:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"200:6:14"},"scope":4260,"src":"138:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":4259,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"222:8:14","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4259,"src":"231:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"230:9:14"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[],"src":"248:0:14"},"scope":4260,"src":"213:36:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4261,"src":"75:177:14","usedErrors":[]}],"src":"48:206:14"},"id":14}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220402041b306c7605d338f21c042968a9300cc2e4070d9c3573ca45383813d28d764736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH KECCAK256 COINBASE 0xB3 MOD 0xC7 PUSH1 0x5D CALLER DUP16 0x21 0xC0 TIMESTAMP SWAP7 DUP11 SWAP4 STOP 0xCC 0x2E BLOCKHASH PUSH17 0xD9C3573CA45383813D28D764736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220402041b306c7605d338f21c042968a9300cc2e4070d9c3573ca45383813d28d764736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH KECCAK256 COINBASE 0xB3 MOD 0xC7 PUSH1 0x5D CALLER DUP16 0x21 0xC0 TIMESTAMP SWAP7 DUP11 SWAP4 STOP 0xCC 0x2E BLOCKHASH PUSH17 0xD9C3573CA45383813D28D764736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"707:3748:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f86839b533e8273d89704810c7249fb789ced6b9b45727d7862ad8d43e348864736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xF8 PUSH9 0x39B533E8273D897048 LT 0xC7 0x24 SWAP16 0xB7 DUP10 0xCE 0xD6 0xB9 0xB4 JUMPI 0x27 0xD7 DUP7 0x2A 0xD8 0xD4 RETURNDATACOPY CALLVALUE DUP9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"194:8964:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f86839b533e8273d89704810c7249fb789ced6b9b45727d7862ad8d43e348864736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xF8 PUSH9 0x39B533E8273D897048 LT 0xC7 0x24 SWAP16 0xB7 DUP10 0xCE 0xD6 0xB9 0xB4 JUMPI 0x27 0xD7 DUP7 0x2A 0xD8 0xD4 RETURNDATACOPY CALLVALUE DUP9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"194:8964:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/InputStream.sol":{"InputStream":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8b19e565a31695da25197b1a67b551d70efc7bb566f1ee154d2ada6fc6d1b2264736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB1 SWAP15 JUMP GAS BALANCE PUSH10 0x5DA25197B1A67B551D70 0xEF 0xC7 0xBB JUMP PUSH16 0x1EE154D2ADA6FC6D1B2264736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"69:2089:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;69:2089:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8b19e565a31695da25197b1a67b551d70efc7bb566f1ee154d2ada6fc6d1b2264736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB1 SWAP15 JUMP GAS BALANCE PUSH10 0x5DA25197B1A67B551D70 0xEF 0xC7 0xBB JUMP PUSH16 0x1EE154D2ADA6FC6D1B2264736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"69:2089:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"createStream(bytes memory)":"infinite","isNotEmpty(uint256)":"infinite","readAddress(uint256)":"infinite","readBytes(uint256)":"infinite","readBytes32(uint256)":"infinite","readUint(uint256)":"infinite","readUint16(uint256)":"infinite","readUint32(uint256)":"infinite","readUint8(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InputStream.sol\":\"InputStream\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/InputStream.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nlibrary InputStream {\\r\\n  function createStream(bytes memory data) internal pure returns (uint256 stream) {\\r\\n    assembly {\\r\\n      stream := mload(0x40)\\r\\n      mstore(0x40, add(stream, 64))\\r\\n      mstore(stream, data)\\r\\n      let length := mload(data)\\r\\n      mstore(add(stream, 32), add(data, length))\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function isNotEmpty(uint256 stream) internal pure returns (bool) {\\r\\n    uint256 pos;\\r\\n    uint256 finish;\\r\\n    assembly {\\r\\n      pos := mload(stream)\\r\\n      finish := mload(add(stream, 32))\\r\\n    }\\r\\n    return pos < finish;\\r\\n  }\\r\\n\\r\\n  function readUint8(uint256 stream) internal pure returns (uint8 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 1)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint16(uint256 stream) internal pure returns (uint16 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 2)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint32(uint256 stream) internal pure returns (uint32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 4)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint(uint256 stream) internal pure returns (uint256 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes32(uint256 stream) internal pure returns (bytes32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readAddress(uint256 stream) internal pure returns (address res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 20)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes(uint256 stream) internal pure returns (bytes memory res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      res := add(pos, 32)\\r\\n      let length := mload(res)\\r\\n      mstore(stream, add(res, length))\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x84844b6c074e12ef158213777119a6456f4ed97b30d36207a5f2bf0d45b3bc4a\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RouteProcessor.sol":{"RouteProcessor":{"abi":[{"inputs":[{"internalType":"address","name":"_bentoBox","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"bentoBox","outputs":[{"internalType":"contract IBentoBoxMinimal","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"route","type":"bytes"}],"name":"processRoute","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable","name":"transferValueTo","type":"address"},{"internalType":"uint256","name":"amountValueTransfer","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"route","type":"bytes"}],"name":"transferValueAndprocessRoute","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Okavango","kind":"dev","methods":{"processRoute(address,uint256,address,uint256,address,bytes)":{"params":{"amountIn":"Amount of the input token","amountOutMin":"Minimum amount of the output token","tokenIn":"Address of the input token","tokenOut":"Address of the output token"},"returns":{"amountOut":"Actual amount of the output token"}},"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":{"params":{"amountIn":"Amount of the input token","amountOutMin":"Minimum amount of the output token","amountValueTransfer":"How much value to transfer","tokenIn":"Address of the input token","tokenOut":"Address of the output token","transferValueTo":"Address where the value should be transferred"},"returns":{"amountOut":"Actual amount of the output token"}}},"title":"A route processor for the Sushi Aggregator","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1009":{"entryPoint":null,"id":1009,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":71,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:15","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:15"},"nodeType":"YulFunctionCall","src":"143:12:15"},"nodeType":"YulExpressionStatement","src":"143:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:15"},"nodeType":"YulFunctionCall","src":"112:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:15"},"nodeType":"YulFunctionCall","src":"108:32:15"},"nodeType":"YulIf","src":"105:52:15"},{"nodeType":"YulVariableDeclaration","src":"166:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:15"},"nodeType":"YulFunctionCall","src":"179:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:15"},"nodeType":"YulFunctionCall","src":"260:12:15"},"nodeType":"YulExpressionStatement","src":"260:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:15"},"nodeType":"YulFunctionCall","src":"239:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:15"},"nodeType":"YulFunctionCall","src":"235:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:15"},"nodeType":"YulFunctionCall","src":"224:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:15"},"nodeType":"YulFunctionCall","src":"214:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:15"},"nodeType":"YulFunctionCall","src":"207:50:15"},"nodeType":"YulIf","src":"204:70:15"},{"nodeType":"YulAssignment","src":"283:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:15"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:15","type":""}],"src":"14:290:15"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a0604052600160005534801561001557600080fd5b506040516200255e3803806200255e83398101604081905261003691610047565b6001600160a01b0316608052610077565b60006020828403121561005957600080fd5b81516001600160a01b038116811461007057600080fd5b9392505050565b60805161247f620000df60003960008181607c015281816110470152818161122001528181611307015281816113f20152818161150a015281816115e5015281816116aa0152818161175701528181611838015281816118fe01526119cd015261247f6000f3fe6080604052600436106100385760003560e01c80632646478b146100445780636b2ace871461006a57806393b3774c146100c357600080fd5b3661003f57005b600080fd5b610057610052366004611f4c565b6100d6565b6040519081526020015b60405180910390f35b34801561007657600080fd5b5061009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610061565b6100576100d1366004611fd3565b61016b565b60008054600114610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b6564000000000000000060448201526064015b60405180910390fd5b600260005561015b8787878787876102bc565b6001600055979650505050505050565b600080546001146101d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b65640000000000000000604482015260640161013f565b60026000908155604051819073ffffffffffffffffffffffffffffffffffffffff8c16908b908381818185875af1925050503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b5091509150818160405160200161025291906120a4565b60405160208183030381529060405290610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f919061210a565b506102a88989898989896102bc565b60016000559b9a5050505050505050505050565b6000808073ffffffffffffffffffffffffffffffffffffffff871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610386576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301528816906370a0823190602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190612124565b61039f565b8473ffffffffffffffffffffffffffffffffffffffff16315b604080518082019091528581528551860160208201529091505b80516020820151111561058d5760006103d88280516001018051915290565b905060148160ff1610156104e5578060ff16600a1415610401576103fb82610765565b50610587565b8060ff166004141561041b5761041682610a87565b610587565b8060ff166003141561044257610431828c610bcb565b61043b908561216c565b9350610587565b8060ff16600514156104575761043182610c63565b8060ff166006141561046d576104168783610dfc565b8060ff166007141561048357610431828c610f4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e6b6e6f776e20636f6d6d616e6420636f6465000000000000000000000000604482015260640161013f565b60188160ff161015610532578060ff166014141561050757610416828c610fdc565b8060ff166015141561051c57610416826110dc565b8060ff166017141561048357610416828c611196565b8060ff166018141561054857610431828c611251565b8060ff166019141561055d5761041682611378565b8060ff16601a14156105725761041682611574565b8060ff16601b14156104835761041682611887565b506103b9565b8883146105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f57726f6e6720616d6f756e74496e2076616c7565000000000000000000000000604482015260640161013f565b600073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146106be576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301528a16906370a0823190602401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b99190612124565b6106d7565b8673ffffffffffffffffffffffffffffffffffffffff16315b90506106e3888461216c565b81101561074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d696e696d616c206f757075742062616c616e63652076696f6c6174696f6e00604482015260640161013f565b6107568382612184565b9b9a5050505050505050505050565b6000806107788380516014018051915290565b9050600061078c8480516014018051915290565b905060006107a08580516001018051915290565b905060006107b48680516014018051915290565b90506000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082891906121be565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008211801561085d5750600081115b6108c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f57726f6e6720706f6f6c20726573657276657300000000000000000000000000604482015260640161013f565b6000808560ff166001146108d85782846108db565b83835b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301529294509092506000918491908a16906370a0823190602401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190612124565b6109819190612184565b90506000610991826103e561220e565b9050806109a0856103e861220e565b6109aa919061216c565b6109b4848361220e565b6109be919061224b565b9a506000808960ff166001146109d6578c60006109da565b60008d5b604080516000815260208101918290527f022c0d9f00000000000000000000000000000000000000000000000000000000909152919350915073ffffffffffffffffffffffffffffffffffffffff8d169063022c0d9f90610a4490859085908e9060248101612286565b600060405180830381600087803b158015610a5e57600080fd5b505af1158015610a72573d6000803e3d6000fd5b50505050505050505050505050505050919050565b6000610a998280516014018051915290565b90506000610aad8380516001018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009060019073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b449190612124565b610b4e9190612184565b905060005b8260ff16811015610bc4576000610b708680516014018051915290565b90506000610b848780516002018051915290565b61ffff8082168602049485900394909150610bb673ffffffffffffffffffffffffffffffffffffffff881684836119fe565b505050806001019050610b53565b5050505050565b600080610bde8480516001018051915290565b90506000915060005b8160ff16811015610c5b576000610c048680516014018051915290565b90506000610c188780516020018051915290565b9050610c24818661216c565b9450610c4873ffffffffffffffffffffffffffffffffffffffff8716338484611ad7565b505080610c54906122cb565b9050610be7565b505092915050565b600080610c768380516014018051915290565b90508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b50505050506000610ceb8480516001018051915290565b90506000925060005b8160ff16811015610d67576000610d118680516014018051915290565b90506000610d258780516020018051915290565b9050610d31818761216c565b9550610d5473ffffffffffffffffffffffffffffffffffffffff861683836119fe565b505080610d60906122cb565b9050610cf4565b504715610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f75746550726f636573736f723a20696e76616c696420696e70757420616d60448201527f6f756e7400000000000000000000000000000000000000000000000000000000606482015260840161013f565b5050919050565b6000610e0e8280516014018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff821690632e1a7d4d9060019083906370a0823190602401602060405180830381865afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa9190612124565b610eb49190612184565b6040518263ffffffff1660e01b8152600401610ed291815260200190565b600060405180830381600087803b158015610eec57600080fd5b505af1158015610f00573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff861692504780156108fc029250906000818181858888f19350505050158015610f47573d6000803e3d6000fd5b50505050565b600080610f608480516001018051915290565b90506000915060005b8160ff16811015610c5b576000610f868680516014018051915290565b90506000610f9a8780516020018051915290565b9050610fa6818661216c565b9450610fc973ffffffffffffffffffffffffffffffffffffffff871683836119fe565b505080610fd5906122cb565b9050610f69565b6000610fee8380516014018051915290565b905060006110028480516020018051915290565b6040517f02b9446c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301819052908516604483015260648201839052600060848301529192506302b9446c9060a4015b60408051808303816000875af11580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d49190612304565b505050505050565b60006110ee8280516014018051915290565b8251602080820180519092010184526040517f627dd56a0000000000000000000000000000000000000000000000000000000081529192509073ffffffffffffffffffffffffffffffffffffffff83169063627dd56a9061115390849060040161210a565b6020604051808303816000875af1158015611172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f479190612124565b60006111a88380516014018051915290565b905060006111bc8480516020018051915290565b6040517f97da6d3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152306024830152848116604483015260648201839052600060848301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a401611092565b6000806112648480516001018051915290565b90506000915060005b8160ff16811015610c5b57600061128a8680516014018051915290565b9050600061129e8780516020018051915290565b90506112aa818661216c565b6040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301523360248301528481166044830152606482018490529196507f00000000000000000000000000000000000000000000000000000000000000009091169063f18d03cc90608401600060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b50505050505080611371906122cb565b905061126d565b600061138a8280516014018051915290565b9050600061139e8380516001018051915290565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301523060248301529192506000916001917f00000000000000000000000000000000000000000000000000000000000000009091169063f7888aec90604401602060405180830381865afa15801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f9190612124565b6114699190612184565b905060005b8260ff16811015610bc457600061148b8680516014018051915290565b9050600061149f8780516002018051915290565b6040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152306024830152848116604483015261ffff8084168802046064830181905296879003969293507f0000000000000000000000000000000000000000000000000000000000000000169063f18d03cc90608401600060405180830381600087803b15801561154e57600080fd5b505af1158015611562573d6000803e3d6000fd5b5050505050505080600101905061146e565b60006115868280516014018051915290565b9050600061159a8380516014018051915290565b6040517f4ffe34db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690634ffe34db906024016040805180830381865afa15801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164f9190612348565b516040517fdf23b45b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526fffffffffffffffffffffffffffffffff909216917f0000000000000000000000000000000000000000000000000000000000000000169063df23b45b90602401606060405180830381865afa1580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171591906123bb565b60409081015190517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301526fffffffffffffffffffffffffffffffff909216918516906370a0823190602401602060405180830381865afa1580156117bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117df9190612124565b6117e9919061216c565b6117f39190612184565b6040517f02b9446c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301819052908616604483015260648201839052600060848301529192506302b9446c9060a401611092565b60006118998280516014018051915290565b905060006118ad8380516014018051915290565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301523060248301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f7888aec90604401602060405180830381865afa158015611945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119699190612124565b6040517f97da6d3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152306024830152848116604483015260006064830152608482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a401611092565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052611ad29084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b35565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f479085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611a50565b6000611b97826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c419092919063ffffffff16565b805190915015611ad25780806020019051810190611bb59190612427565b611ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161013f565b6060611c508484600085611c58565b949350505050565b606082471015611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161013f565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d1391906120a4565b60006040518083038185875af1925050503d8060008114611d50576040519150601f19603f3d011682016040523d82523d6000602084013e611d55565b606091505b5091509150611d6687838387611d71565b979650505050505050565b60608315611e04578251611dfd5773ffffffffffffffffffffffffffffffffffffffff85163b611dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161013f565b5081611c50565b611c508383815115611e195781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f919061210a565b73ffffffffffffffffffffffffffffffffffffffff81168114611e6f57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112611eb257600080fd5b813567ffffffffffffffff80821115611ecd57611ecd611e72565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611f1357611f13611e72565b81604052838152866020858801011115611f2c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215611f6557600080fd5b8635611f7081611e4d565b9550602087013594506040870135611f8781611e4d565b9350606087013592506080870135611f9e81611e4d565b915060a087013567ffffffffffffffff811115611fba57600080fd5b611fc689828a01611ea1565b9150509295509295509295565b600080600080600080600080610100898b031215611ff057600080fd5b8835611ffb81611e4d565b975060208901359650604089013561201281611e4d565b955060608901359450608089013561202981611e4d565b935060a0890135925060c089013561204081611e4d565b915060e089013567ffffffffffffffff81111561205c57600080fd5b6120688b828c01611ea1565b9150509295985092959890939650565b60005b8381101561209357818101518382015260200161207b565b83811115610f475750506000910152565b600082516120b6818460208701612078565b9190910192915050565b600081518084526120d8816020860160208601612078565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061211d60208301846120c0565b9392505050565b60006020828403121561213657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561217f5761217f61213d565b500190565b6000828210156121965761219661213d565b500390565b80516dffffffffffffffffffffffffffff811681146121b957600080fd5b919050565b6000806000606084860312156121d357600080fd5b6121dc8461219b565b92506121ea6020850161219b565b9150604084015163ffffffff8116811461220357600080fd5b809150509250925092565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122465761224661213d565b500290565b600082612281577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff831660408201526080606082015260006122c160808301846120c0565b9695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122fd576122fd61213d565b5060010190565b6000806040838503121561231757600080fd5b505080516020909101519092909150565b80516fffffffffffffffffffffffffffffffff811681146121b957600080fd5b60006040828403121561235a57600080fd5b6040516040810181811067ffffffffffffffff8211171561237d5761237d611e72565b60405261238983612328565b815261239760208401612328565b60208201529392505050565b805167ffffffffffffffff811681146121b957600080fd5b6000606082840312156123cd57600080fd5b6040516060810181811067ffffffffffffffff821117156123f0576123f0611e72565b6040526123fc836123a3565b815261240a602084016123a3565b602082015261241b60408401612328565b60408201529392505050565b60006020828403121561243957600080fd5b8151801515811461211d57600080fdfea264697066735822122094b1f4dca42af174e67447a8c123dbb05c58e628ef14bf7157e50e77841c08ac64736f6c634300080a0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x255E CODESIZE SUB DUP1 PUSH3 0x255E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x36 SWAP2 PUSH2 0x47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x247F PUSH3 0xDF PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x7C ADD MSTORE DUP2 DUP2 PUSH2 0x1047 ADD MSTORE DUP2 DUP2 PUSH2 0x1220 ADD MSTORE DUP2 DUP2 PUSH2 0x1307 ADD MSTORE DUP2 DUP2 PUSH2 0x13F2 ADD MSTORE DUP2 DUP2 PUSH2 0x150A ADD MSTORE DUP2 DUP2 PUSH2 0x15E5 ADD MSTORE DUP2 DUP2 PUSH2 0x16AA ADD MSTORE DUP2 DUP2 PUSH2 0x1757 ADD MSTORE DUP2 DUP2 PUSH2 0x1838 ADD MSTORE DUP2 DUP2 PUSH2 0x18FE ADD MSTORE PUSH2 0x19CD ADD MSTORE PUSH2 0x247F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2646478B EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x6B2ACE87 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x93B3774C EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x61 JUMP JUMPDEST PUSH2 0x57 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x15B DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 DUP12 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST POP PUSH2 0x2A8 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP6 DUP2 MSTORE DUP6 MLOAD DUP7 ADD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD GT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 PUSH2 0x3D8 DUP3 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0xA EQ ISZERO PUSH2 0x401 JUMPI PUSH2 0x3FB DUP3 PUSH2 0x765 JUMP JUMPDEST POP PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0x41B JUMPI PUSH2 0x416 DUP3 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x442 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x43B SWAP1 DUP6 PUSH2 0x216C JUMP JUMPDEST SWAP4 POP PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0x457 JUMPI PUSH2 0x431 DUP3 PUSH2 0xC63 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0x46D JUMPI PUSH2 0x416 DUP8 DUP4 PUSH2 0xDFC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x7 EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6B6E6F776E20636F6D6D616E6420636F6465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x18 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x532 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x14 EQ ISZERO PUSH2 0x507 JUMPI PUSH2 0x416 DUP3 DUP13 PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 EQ ISZERO PUSH2 0x51C JUMPI PUSH2 0x416 DUP3 PUSH2 0x10DC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x17 EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x416 DUP3 DUP13 PUSH2 0x1196 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x18 EQ ISZERO PUSH2 0x548 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0x1251 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x19 EQ ISZERO PUSH2 0x55D JUMPI PUSH2 0x416 DUP3 PUSH2 0x1378 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1A EQ ISZERO PUSH2 0x572 JUMPI PUSH2 0x416 DUP3 PUSH2 0x1574 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x416 DUP3 PUSH2 0x1887 JUMP JUMPDEST POP PUSH2 0x3B9 JUMP JUMPDEST DUP9 DUP4 EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720616D6F756E74496E2076616C7565000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST SWAP1 POP PUSH2 0x6E3 DUP9 DUP5 PUSH2 0x216C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D616C206F757075742062616C616E63652076696F6C6174696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x756 DUP4 DUP3 PUSH2 0x2184 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x778 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x78C DUP5 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B4 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x85D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720706F6F6C20726573657276657300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x8D8 JUMPI DUP3 DUP5 PUSH2 0x8DB JUMP JUMPDEST DUP4 DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 SWAP2 SWAP1 DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x953 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x991 DUP3 PUSH2 0x3E5 PUSH2 0x220E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9A0 DUP6 PUSH2 0x3E8 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x9B4 DUP5 DUP4 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP11 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x9D6 JUMPI DUP13 PUSH1 0x0 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x0 DUP14 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0x22C0D9F00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0xA44 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP15 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAAD DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 PUSH2 0xB70 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB84 DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP7 MUL DIV SWAP5 DUP6 SWAP1 SUB SWAP5 SWAP1 SWAP2 POP PUSH2 0xBB6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDE DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0xC04 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC18 DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC24 DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST SWAP5 POP PUSH2 0xC48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND CALLER DUP5 DUP5 PUSH2 0x1AD7 JUMP JUMPDEST POP POP DUP1 PUSH2 0xC54 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xBE7 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC76 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xCEB DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 PUSH2 0xD11 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD25 DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD31 DUP2 DUP8 PUSH2 0x216C JUMP JUMPDEST SWAP6 POP PUSH2 0xD54 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP4 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP DUP1 PUSH2 0xD60 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 JUMP JUMPDEST POP SELFBALANCE ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20696E76616C696420696E70757420616D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP3 POP SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF60 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0xF86 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF9A DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA6 DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST SWAP5 POP PUSH2 0xFC9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP4 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP DUP1 PUSH2 0xFD5 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1002 DUP5 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD SWAP1 SWAP3 ADD ADD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH32 0x627DD56A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x627DD56A SWAP1 PUSH2 0x1153 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x210A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BC DUP5 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1264 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0x128A DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129E DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x12AA DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP DUP1 PUSH2 0x1371 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138A DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x139E DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145F SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 PUSH2 0x148B DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149F DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xFFFF DUP1 DUP5 AND DUP9 MUL DIV PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP7 DUP8 SWAP1 SUB SWAP7 SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x146E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x159A DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4FFE34DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x4FFE34DB SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x162B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x2348 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xDF23B45B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDF23B45B SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17DF SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x17E9 SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x17F3 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18AD DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1945 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1969 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1AD2 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1B35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF47 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B97 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1AD2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x2427 JUMP JUMPDEST PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D13 SWAP2 SWAP1 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D66 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1D71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E04 JUMPI DUP3 MLOAD PUSH2 0x1DFD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1DFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST POP DUP2 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1C50 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1E19 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F13 PUSH2 0x1E72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F70 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1F87 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1F9E DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC6 DUP10 DUP3 DUP11 ADD PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1FFB DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2012 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2029 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2040 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2068 DUP12 DUP3 DUP13 ADD PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2093 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x207B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF47 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2078 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20D8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x211D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x213D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2196 JUMPI PUSH2 0x2196 PUSH2 0x213D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21DC DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP3 POP PUSH2 0x21EA PUSH1 0x20 DUP6 ADD PUSH2 0x219B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2246 JUMPI PUSH2 0x2246 PUSH2 0x213D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2281 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22C1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x22FD JUMPI PUSH2 0x22FD PUSH2 0x213D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x237D JUMPI PUSH2 0x237D PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x2389 DUP4 PUSH2 0x2328 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2397 PUSH1 0x20 DUP5 ADD PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23F0 JUMPI PUSH2 0x23F0 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x23FC DUP4 PUSH2 0x23A3 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x240A PUSH1 0x20 DUP5 ADD PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x241B PUSH1 0x40 DUP5 ADD PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x211D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB1 DELEGATECALL 0xDC LOG4 0x2A CALL PUSH21 0xE67447A8C123DBB05C58E628EF14BF7157E50E7784 SHR ADDMOD 0xAC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"485:13979:7:-:0;;;654:1;630:25;;799:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;837:38:7;;;485:13979;;14:290:15;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:15;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:15:o;:::-;485:13979:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1014":{"entryPoint":null,"id":1014,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_506":{"entryPoint":6965,"id":506,"parameterSlots":2,"returnSlots":0},"@_revert_836":{"entryPoint":null,"id":836,"parameterSlots":2,"returnSlots":0},"@bentoBox_975":{"entryPoint":null,"id":975,"parameterSlots":0,"returnSlots":0},"@bentoDepositAllFromBento_1430":{"entryPoint":5492,"id":1430,"parameterSlots":1,"returnSlots":0},"@bentoDepositAmountFromBento_1374":{"entryPoint":4060,"id":1374,"parameterSlots":2,"returnSlots":0},"@bentoWithdrawAllFromRP_1507":{"entryPoint":6279,"id":1507,"parameterSlots":1,"returnSlots":0},"@bentoWithdrawShareFromRP_1464":{"entryPoint":4502,"id":1464,"parameterSlots":2,"returnSlots":0},"@createStream_870":{"entryPoint":null,"id":870,"parameterSlots":1,"returnSlots":1},"@distributeBentoPortions_2087":{"entryPoint":4984,"id":2087,"parameterSlots":1,"returnSlots":0},"@distributeBentoShares_1926":{"entryPoint":4689,"id":1926,"parameterSlots":2,"returnSlots":1},"@distributeERC20AmountsFromRP_1783":{"entryPoint":3917,"id":1783,"parameterSlots":2,"returnSlots":1},"@distributeERC20Amounts_1726":{"entryPoint":3019,"id":1726,"parameterSlots":2,"returnSlots":1},"@distributeERC20Shares_2005":{"entryPoint":2695,"id":2005,"parameterSlots":1,"returnSlots":0},"@functionCallWithValue_661":{"entryPoint":7256,"id":661,"parameterSlots":4,"returnSlots":1},"@functionCall_597":{"entryPoint":7233,"id":597,"parameterSlots":3,"returnSlots":1},"@isContract_525":{"entryPoint":null,"id":525,"parameterSlots":1,"returnSlots":1},"@isNotEmpty_889":{"entryPoint":null,"id":889,"parameterSlots":1,"returnSlots":1},"@processRouteInternal_1340":{"entryPoint":700,"id":1340,"parameterSlots":6,"returnSlots":1},"@processRoute_1044":{"entryPoint":214,"id":1044,"parameterSlots":6,"returnSlots":1},"@readAddress_943":{"entryPoint":null,"id":943,"parameterSlots":1,"returnSlots":1},"@readBytes_952":{"entryPoint":null,"id":952,"parameterSlots":1,"returnSlots":1},"@readUint16_907":{"entryPoint":null,"id":907,"parameterSlots":1,"returnSlots":1},"@readUint8_898":{"entryPoint":null,"id":898,"parameterSlots":1,"returnSlots":1},"@readUint_925":{"entryPoint":null,"id":925,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_284":{"entryPoint":6871,"id":284,"parameterSlots":4,"returnSlots":0},"@safeTransfer_258":{"entryPoint":6654,"id":258,"parameterSlots":3,"returnSlots":0},"@swapTrident_1533":{"entryPoint":4316,"id":1533,"parameterSlots":1,"returnSlots":0},"@swapUniswapPool_1667":{"entryPoint":1893,"id":1667,"parameterSlots":1,"returnSlots":1},"@transferValueAndprocessRoute_1100":{"entryPoint":363,"id":1100,"parameterSlots":8,"returnSlots":1},"@unwrapNative_2131":{"entryPoint":3580,"id":2131,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_792":{"entryPoint":7537,"id":792,"parameterSlots":4,"returnSlots":1},"@wrapAndDistributeERC20Amounts_1867":{"entryPoint":3171,"id":1867,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":7841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr":{"entryPoint":8147,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr":{"entryPoint":8012,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory":{"entryPoint":9032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory":{"entryPoint":9147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory":{"entryPoint":8638,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":8964,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint112_fromMemory":{"entryPoint":8603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint128_fromMemory":{"entryPoint":9000,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64_fromMemory":{"entryPoint":9123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":8384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_873cd9257ab4ffdca306d3e6c7c6446bd4c5e00efc70ea77ad74d4fe404d5b37__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ef2803841b52c86814d96883048464ae548e9347f651c80e3f08e587697a6736__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f124b7c6fa9859758bb2a94bb01c973cc962775f72f908c146d550a33144899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8838,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8556,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8779,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8718,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8580,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":8312,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":8907,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8509,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7794,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":7757,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16081:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:15","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:15"},"nodeType":"YulFunctionCall","src":"148:12:15"},"nodeType":"YulExpressionStatement","src":"148:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:15"},"nodeType":"YulFunctionCall","src":"89:54:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:15"},"nodeType":"YulFunctionCall","src":"79:65:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:15"},"nodeType":"YulFunctionCall","src":"72:73:15"},"nodeType":"YulIf","src":"69:93:15"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:15","type":""}],"src":"14:154:15"},{"body":{"nodeType":"YulBlock","src":"205:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"222:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"225:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"215:6:15"},"nodeType":"YulFunctionCall","src":"215:88:15"},"nodeType":"YulExpressionStatement","src":"215:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"319:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"322:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"312:6:15"},"nodeType":"YulFunctionCall","src":"312:15:15"},"nodeType":"YulExpressionStatement","src":"312:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"336:6:15"},"nodeType":"YulFunctionCall","src":"336:15:15"},"nodeType":"YulExpressionStatement","src":"336:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"173:184:15"},{"body":{"nodeType":"YulBlock","src":"414:725:15","statements":[{"body":{"nodeType":"YulBlock","src":"463:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"465:6:15"},"nodeType":"YulFunctionCall","src":"465:12:15"},"nodeType":"YulExpressionStatement","src":"465:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"442:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"450:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"438:3:15"},"nodeType":"YulFunctionCall","src":"438:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"457:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"434:3:15"},"nodeType":"YulFunctionCall","src":"434:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"427:6:15"},"nodeType":"YulFunctionCall","src":"427:35:15"},"nodeType":"YulIf","src":"424:55:15"},{"nodeType":"YulVariableDeclaration","src":"488:30:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"511:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"498:12:15"},"nodeType":"YulFunctionCall","src":"498:20:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"492:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"527:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"537:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"531:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"578:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"580:16:15"},"nodeType":"YulFunctionCall","src":"580:18:15"},"nodeType":"YulExpressionStatement","src":"580:18:15"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"570:2:15"},{"name":"_2","nodeType":"YulIdentifier","src":"574:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"567:2:15"},"nodeType":"YulFunctionCall","src":"567:10:15"},"nodeType":"YulIf","src":"564:36:15"},{"nodeType":"YulVariableDeclaration","src":"609:76:15","value":{"kind":"number","nodeType":"YulLiteral","src":"619:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"613:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"694:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"714:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"708:5:15"},"nodeType":"YulFunctionCall","src":"708:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"698:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"726:71:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"748:6:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"772:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"776:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"768:3:15"},"nodeType":"YulFunctionCall","src":"768:13:15"},{"name":"_3","nodeType":"YulIdentifier","src":"783:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"764:3:15"},"nodeType":"YulFunctionCall","src":"764:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"760:3:15"},"nodeType":"YulFunctionCall","src":"760:31:15"},{"name":"_3","nodeType":"YulIdentifier","src":"793:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:15"},"nodeType":"YulFunctionCall","src":"756:40:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"744:3:15"},"nodeType":"YulFunctionCall","src":"744:53:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"730:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"856:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"858:16:15"},"nodeType":"YulFunctionCall","src":"858:18:15"},"nodeType":"YulExpressionStatement","src":"858:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"815:10:15"},{"name":"_2","nodeType":"YulIdentifier","src":"827:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"812:2:15"},"nodeType":"YulFunctionCall","src":"812:18:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"835:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"847:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"832:2:15"},"nodeType":"YulFunctionCall","src":"832:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"809:2:15"},"nodeType":"YulFunctionCall","src":"809:46:15"},"nodeType":"YulIf","src":"806:72:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"894:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"898:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"887:6:15"},"nodeType":"YulFunctionCall","src":"887:22:15"},"nodeType":"YulExpressionStatement","src":"887:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"925:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"933:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"918:6:15"},"nodeType":"YulFunctionCall","src":"918:18:15"},"nodeType":"YulExpressionStatement","src":"918:18:15"},{"body":{"nodeType":"YulBlock","src":"984:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"993:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"996:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"986:6:15"},"nodeType":"YulFunctionCall","src":"986:12:15"},"nodeType":"YulExpressionStatement","src":"986:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"959:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"967:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:15"},"nodeType":"YulFunctionCall","src":"955:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"972:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:15"},"nodeType":"YulFunctionCall","src":"951:26:15"},{"name":"end","nodeType":"YulIdentifier","src":"979:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"948:2:15"},"nodeType":"YulFunctionCall","src":"948:35:15"},"nodeType":"YulIf","src":"945:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1026:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1034:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1022:3:15"},"nodeType":"YulFunctionCall","src":"1022:17:15"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1045:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1041:3:15"},"nodeType":"YulFunctionCall","src":"1041:17:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1060:2:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1009:12:15"},"nodeType":"YulFunctionCall","src":"1009:54:15"},"nodeType":"YulExpressionStatement","src":"1009:54:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1095:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:15"},"nodeType":"YulFunctionCall","src":"1083:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1100:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:15"},"nodeType":"YulFunctionCall","src":"1079:26:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1072:6:15"},"nodeType":"YulFunctionCall","src":"1072:37:15"},"nodeType":"YulExpressionStatement","src":"1072:37:15"},{"nodeType":"YulAssignment","src":"1118:15:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1127:6:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1118:5:15"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"388:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"396:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"404:5:15","type":""}],"src":"362:777:15"},{"body":{"nodeType":"YulBlock","src":"1308:712:15","statements":[{"body":{"nodeType":"YulBlock","src":"1355:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1364:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1367:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1357:6:15"},"nodeType":"YulFunctionCall","src":"1357:12:15"},"nodeType":"YulExpressionStatement","src":"1357:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1329:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1338:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1325:3:15"},"nodeType":"YulFunctionCall","src":"1325:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1350:3:15","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1321:3:15"},"nodeType":"YulFunctionCall","src":"1321:33:15"},"nodeType":"YulIf","src":"1318:53:15"},{"nodeType":"YulVariableDeclaration","src":"1380:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1393:12:15"},"nodeType":"YulFunctionCall","src":"1393:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1384:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1450:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1425:24:15"},"nodeType":"YulFunctionCall","src":"1425:31:15"},"nodeType":"YulExpressionStatement","src":"1425:31:15"},{"nodeType":"YulAssignment","src":"1465:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1475:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1465:6:15"}]},{"nodeType":"YulAssignment","src":"1489:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1516:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1527:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:15"},"nodeType":"YulFunctionCall","src":"1512:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:15"},"nodeType":"YulFunctionCall","src":"1499:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1489:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1540:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1572:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1583:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1568:3:15"},"nodeType":"YulFunctionCall","src":"1568:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1555:12:15"},"nodeType":"YulFunctionCall","src":"1555:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1544:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1621:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1596:24:15"},"nodeType":"YulFunctionCall","src":"1596:33:15"},"nodeType":"YulExpressionStatement","src":"1596:33:15"},{"nodeType":"YulAssignment","src":"1638:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1648:7:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1638:6:15"}]},{"nodeType":"YulAssignment","src":"1664:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1691:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1702:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1687:3:15"},"nodeType":"YulFunctionCall","src":"1687:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1674:12:15"},"nodeType":"YulFunctionCall","src":"1674:32:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1664:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1715:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1747:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1758:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:15"},"nodeType":"YulFunctionCall","src":"1743:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1730:12:15"},"nodeType":"YulFunctionCall","src":"1730:33:15"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1719:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1797:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1772:24:15"},"nodeType":"YulFunctionCall","src":"1772:33:15"},"nodeType":"YulExpressionStatement","src":"1772:33:15"},{"nodeType":"YulAssignment","src":"1814:17:15","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1824:7:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1814:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1840:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1882:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:15"},"nodeType":"YulFunctionCall","src":"1867:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1854:12:15"},"nodeType":"YulFunctionCall","src":"1854:33:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1844:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1930:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1942:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1932:6:15"},"nodeType":"YulFunctionCall","src":"1932:12:15"},"nodeType":"YulExpressionStatement","src":"1932:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1902:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1910:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1899:2:15"},"nodeType":"YulFunctionCall","src":"1899:30:15"},"nodeType":"YulIf","src":"1896:50:15"},{"nodeType":"YulAssignment","src":"1955:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:15"},"nodeType":"YulFunctionCall","src":"1982:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2006:7:15"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"1965:16:15"},"nodeType":"YulFunctionCall","src":"1965:49:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1955:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1234:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1245:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1257:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1265:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1273:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1281:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1289:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1297:6:15","type":""}],"src":"1144:876:15"},{"body":{"nodeType":"YulBlock","src":"2126:76:15","statements":[{"nodeType":"YulAssignment","src":"2136:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:15"},"nodeType":"YulFunctionCall","src":"2144:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2136:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2178:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"2189:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2171:6:15"},"nodeType":"YulFunctionCall","src":"2171:25:15"},"nodeType":"YulExpressionStatement","src":"2171:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2095:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2106:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2117:4:15","type":""}],"src":"2025:177:15"},{"body":{"nodeType":"YulBlock","src":"2333:125:15","statements":[{"nodeType":"YulAssignment","src":"2343:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2355:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2366:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2351:3:15"},"nodeType":"YulFunctionCall","src":"2351:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2343:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2385:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2400:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2408:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2396:3:15"},"nodeType":"YulFunctionCall","src":"2396:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2378:6:15"},"nodeType":"YulFunctionCall","src":"2378:74:15"},"nodeType":"YulExpressionStatement","src":"2378:74:15"}]},"name":"abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2302:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2313:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2324:4:15","type":""}],"src":"2207:251:15"},{"body":{"nodeType":"YulBlock","src":"2669:889:15","statements":[{"body":{"nodeType":"YulBlock","src":"2716:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2725:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2728:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2718:6:15"},"nodeType":"YulFunctionCall","src":"2718:12:15"},"nodeType":"YulExpressionStatement","src":"2718:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2690:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2699:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2686:3:15"},"nodeType":"YulFunctionCall","src":"2686:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2711:3:15","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2682:3:15"},"nodeType":"YulFunctionCall","src":"2682:33:15"},"nodeType":"YulIf","src":"2679:53:15"},{"nodeType":"YulVariableDeclaration","src":"2741:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2767:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2754:12:15"},"nodeType":"YulFunctionCall","src":"2754:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2745:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2811:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2786:24:15"},"nodeType":"YulFunctionCall","src":"2786:31:15"},"nodeType":"YulExpressionStatement","src":"2786:31:15"},{"nodeType":"YulAssignment","src":"2826:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"2836:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2826:6:15"}]},{"nodeType":"YulAssignment","src":"2850:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2877:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2888:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2873:3:15"},"nodeType":"YulFunctionCall","src":"2873:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2860:12:15"},"nodeType":"YulFunctionCall","src":"2860:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2850:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"2901:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2933:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2944:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2929:3:15"},"nodeType":"YulFunctionCall","src":"2929:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2916:12:15"},"nodeType":"YulFunctionCall","src":"2916:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2905:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2982:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2957:24:15"},"nodeType":"YulFunctionCall","src":"2957:33:15"},"nodeType":"YulExpressionStatement","src":"2957:33:15"},{"nodeType":"YulAssignment","src":"2999:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3009:7:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2999:6:15"}]},{"nodeType":"YulAssignment","src":"3025:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3052:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3063:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3048:3:15"},"nodeType":"YulFunctionCall","src":"3048:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3035:12:15"},"nodeType":"YulFunctionCall","src":"3035:32:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3025:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3076:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3108:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3119:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3104:3:15"},"nodeType":"YulFunctionCall","src":"3104:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3091:12:15"},"nodeType":"YulFunctionCall","src":"3091:33:15"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"3080:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"3158:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3133:24:15"},"nodeType":"YulFunctionCall","src":"3133:33:15"},"nodeType":"YulExpressionStatement","src":"3133:33:15"},{"nodeType":"YulAssignment","src":"3175:17:15","value":{"name":"value_2","nodeType":"YulIdentifier","src":"3185:7:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3175:6:15"}]},{"nodeType":"YulAssignment","src":"3201:43:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3228:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3239:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3224:3:15"},"nodeType":"YulFunctionCall","src":"3224:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3211:12:15"},"nodeType":"YulFunctionCall","src":"3211:33:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3201:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3253:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3285:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3296:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3281:3:15"},"nodeType":"YulFunctionCall","src":"3281:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3268:12:15"},"nodeType":"YulFunctionCall","src":"3268:33:15"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"3257:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"3335:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3310:24:15"},"nodeType":"YulFunctionCall","src":"3310:33:15"},"nodeType":"YulExpressionStatement","src":"3310:33:15"},{"nodeType":"YulAssignment","src":"3352:17:15","value":{"name":"value_3","nodeType":"YulIdentifier","src":"3362:7:15"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3352:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3378:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3409:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3420:3:15","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3405:3:15"},"nodeType":"YulFunctionCall","src":"3405:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3392:12:15"},"nodeType":"YulFunctionCall","src":"3392:33:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3382:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3468:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3477:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3480:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3470:6:15"},"nodeType":"YulFunctionCall","src":"3470:12:15"},"nodeType":"YulExpressionStatement","src":"3470:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3440:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3448:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3437:2:15"},"nodeType":"YulFunctionCall","src":"3437:30:15"},"nodeType":"YulIf","src":"3434:50:15"},{"nodeType":"YulAssignment","src":"3493:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3524:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3535:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3520:3:15"},"nodeType":"YulFunctionCall","src":"3520:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3544:7:15"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3503:16:15"},"nodeType":"YulFunctionCall","src":"3503:49:15"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3493:6:15"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2579:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2590:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2602:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2610:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2618:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2626:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2634:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2642:6:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2650:6:15","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2658:6:15","type":""}],"src":"2463:1095:15"},{"body":{"nodeType":"YulBlock","src":"3737:174:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3754:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3765:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:15"},"nodeType":"YulFunctionCall","src":"3747:21:15"},"nodeType":"YulExpressionStatement","src":"3747:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3788:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3799:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3784:3:15"},"nodeType":"YulFunctionCall","src":"3784:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"3804:2:15","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3777:6:15"},"nodeType":"YulFunctionCall","src":"3777:30:15"},"nodeType":"YulExpressionStatement","src":"3777:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3827:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3838:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3823:3:15"},"nodeType":"YulFunctionCall","src":"3823:18:15"},{"hexValue":"526f75746550726f636573736f72206973206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"3843:26:15","type":"","value":"RouteProcessor is locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3816:6:15"},"nodeType":"YulFunctionCall","src":"3816:54:15"},"nodeType":"YulExpressionStatement","src":"3816:54:15"},{"nodeType":"YulAssignment","src":"3879:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3891:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3902:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3887:3:15"},"nodeType":"YulFunctionCall","src":"3887:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3879:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3714:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3728:4:15","type":""}],"src":"3563:348:15"},{"body":{"nodeType":"YulBlock","src":"4107:14:15","statements":[{"nodeType":"YulAssignment","src":"4109:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"4116:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4109:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4091:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4099:3:15","type":""}],"src":"3916:205:15"},{"body":{"nodeType":"YulBlock","src":"4179:205:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4189:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4198:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4193:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4258:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4283:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"4288:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4279:3:15"},"nodeType":"YulFunctionCall","src":"4279:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4302:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"4307:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:15"},"nodeType":"YulFunctionCall","src":"4298:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4292:5:15"},"nodeType":"YulFunctionCall","src":"4292:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4272:6:15"},"nodeType":"YulFunctionCall","src":"4272:39:15"},"nodeType":"YulExpressionStatement","src":"4272:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4219:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"4222:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4216:2:15"},"nodeType":"YulFunctionCall","src":"4216:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4230:19:15","statements":[{"nodeType":"YulAssignment","src":"4232:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4241:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"4244:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4237:3:15"},"nodeType":"YulFunctionCall","src":"4237:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4232:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"4212:3:15","statements":[]},"src":"4208:113:15"},{"body":{"nodeType":"YulBlock","src":"4347:31:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4360:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4365:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:15"},"nodeType":"YulFunctionCall","src":"4356:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"4374:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4349:6:15"},"nodeType":"YulFunctionCall","src":"4349:27:15"},"nodeType":"YulExpressionStatement","src":"4349:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4336:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"4339:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4333:2:15"},"nodeType":"YulFunctionCall","src":"4333:13:15"},"nodeType":"YulIf","src":"4330:48:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4157:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4162:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"4167:6:15","type":""}],"src":"4126:258:15"},{"body":{"nodeType":"YulBlock","src":"4526:137:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4536:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4556:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4550:5:15"},"nodeType":"YulFunctionCall","src":"4550:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4540:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4598:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4606:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4594:3:15"},"nodeType":"YulFunctionCall","src":"4594:17:15"},{"name":"pos","nodeType":"YulIdentifier","src":"4613:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4618:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4572:21:15"},"nodeType":"YulFunctionCall","src":"4572:53:15"},"nodeType":"YulExpressionStatement","src":"4572:53:15"},{"nodeType":"YulAssignment","src":"4634:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4645:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4650:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4641:3:15"},"nodeType":"YulFunctionCall","src":"4641:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4634:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4502:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4507:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4518:3:15","type":""}],"src":"4389:274:15"},{"body":{"nodeType":"YulBlock","src":"4718:267:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4728:26:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4748:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4742:5:15"},"nodeType":"YulFunctionCall","src":"4742:12:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4732:6:15","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4770:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"4775:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4763:6:15"},"nodeType":"YulFunctionCall","src":"4763:19:15"},"nodeType":"YulExpressionStatement","src":"4763:19:15"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4817:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"4824:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:15"},"nodeType":"YulFunctionCall","src":"4813:16:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4835:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4840:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:15"},"nodeType":"YulFunctionCall","src":"4831:14:15"},{"name":"length","nodeType":"YulIdentifier","src":"4847:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4791:21:15"},"nodeType":"YulFunctionCall","src":"4791:63:15"},"nodeType":"YulExpressionStatement","src":"4791:63:15"},{"nodeType":"YulAssignment","src":"4863:116:15","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4878:3:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4891:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4899:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4887:3:15"},"nodeType":"YulFunctionCall","src":"4887:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"4904:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4883:3:15"},"nodeType":"YulFunctionCall","src":"4883:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4874:3:15"},"nodeType":"YulFunctionCall","src":"4874:98:15"},{"kind":"number","nodeType":"YulLiteral","src":"4974:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:15"},"nodeType":"YulFunctionCall","src":"4870:109:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4863:3:15"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4695:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4702:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4710:3:15","type":""}],"src":"4668:317:15"},{"body":{"nodeType":"YulBlock","src":"5111:99:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5128:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5139:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5121:6:15"},"nodeType":"YulFunctionCall","src":"5121:21:15"},"nodeType":"YulExpressionStatement","src":"5121:21:15"},{"nodeType":"YulAssignment","src":"5151:53:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5177:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5185:3:15"},"nodeType":"YulFunctionCall","src":"5185:18:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5159:17:15"},"nodeType":"YulFunctionCall","src":"5159:45:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5151:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5080:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5091:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5102:4:15","type":""}],"src":"4990:220:15"},{"body":{"nodeType":"YulBlock","src":"5316:125:15","statements":[{"nodeType":"YulAssignment","src":"5326:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5338:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5349:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:15"},"nodeType":"YulFunctionCall","src":"5334:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5326:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5368:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5383:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5391:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5379:3:15"},"nodeType":"YulFunctionCall","src":"5379:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5361:6:15"},"nodeType":"YulFunctionCall","src":"5361:74:15"},"nodeType":"YulExpressionStatement","src":"5361:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5285:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5296:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5307:4:15","type":""}],"src":"5215:226:15"},{"body":{"nodeType":"YulBlock","src":"5527:103:15","statements":[{"body":{"nodeType":"YulBlock","src":"5573:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5582:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5585:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5575:6:15"},"nodeType":"YulFunctionCall","src":"5575:12:15"},"nodeType":"YulExpressionStatement","src":"5575:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5548:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"5557:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5544:3:15"},"nodeType":"YulFunctionCall","src":"5544:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"5569:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5540:3:15"},"nodeType":"YulFunctionCall","src":"5540:32:15"},"nodeType":"YulIf","src":"5537:52:15"},{"nodeType":"YulAssignment","src":"5598:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5608:5:15"},"nodeType":"YulFunctionCall","src":"5608:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5598:6:15"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5493:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5504:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5516:6:15","type":""}],"src":"5446:184:15"},{"body":{"nodeType":"YulBlock","src":"5667:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5684:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5687:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5677:6:15"},"nodeType":"YulFunctionCall","src":"5677:88:15"},"nodeType":"YulExpressionStatement","src":"5677:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5781:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5784:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5774:6:15"},"nodeType":"YulFunctionCall","src":"5774:15:15"},"nodeType":"YulExpressionStatement","src":"5774:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5805:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5808:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5798:6:15"},"nodeType":"YulFunctionCall","src":"5798:15:15"},"nodeType":"YulExpressionStatement","src":"5798:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5635:184:15"},{"body":{"nodeType":"YulBlock","src":"5872:80:15","statements":[{"body":{"nodeType":"YulBlock","src":"5899:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5901:16:15"},"nodeType":"YulFunctionCall","src":"5901:18:15"},"nodeType":"YulExpressionStatement","src":"5901:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5888:1:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5895:1:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5891:3:15"},"nodeType":"YulFunctionCall","src":"5891:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5885:2:15"},"nodeType":"YulFunctionCall","src":"5885:13:15"},"nodeType":"YulIf","src":"5882:39:15"},{"nodeType":"YulAssignment","src":"5930:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5941:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"5944:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5937:3:15"},"nodeType":"YulFunctionCall","src":"5937:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5930:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5855:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"5858:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5864:3:15","type":""}],"src":"5824:128:15"},{"body":{"nodeType":"YulBlock","src":"6131:170:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6148:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6159:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6141:6:15"},"nodeType":"YulFunctionCall","src":"6141:21:15"},"nodeType":"YulExpressionStatement","src":"6141:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6182:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6193:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6178:3:15"},"nodeType":"YulFunctionCall","src":"6178:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6198:2:15","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6171:6:15"},"nodeType":"YulFunctionCall","src":"6171:30:15"},"nodeType":"YulExpressionStatement","src":"6171:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6221:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6232:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6217:3:15"},"nodeType":"YulFunctionCall","src":"6217:18:15"},{"hexValue":"556e6b6e6f776e20636f6d6d616e6420636f6465","kind":"string","nodeType":"YulLiteral","src":"6237:22:15","type":"","value":"Unknown command code"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6210:6:15"},"nodeType":"YulFunctionCall","src":"6210:50:15"},"nodeType":"YulExpressionStatement","src":"6210:50:15"},{"nodeType":"YulAssignment","src":"6269:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6281:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6292:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6277:3:15"},"nodeType":"YulFunctionCall","src":"6277:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6269:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6108:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6122:4:15","type":""}],"src":"5957:344:15"},{"body":{"nodeType":"YulBlock","src":"6480:170:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6497:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6508:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:15"},"nodeType":"YulFunctionCall","src":"6490:21:15"},"nodeType":"YulExpressionStatement","src":"6490:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6531:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6542:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6527:3:15"},"nodeType":"YulFunctionCall","src":"6527:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6547:2:15","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6520:6:15"},"nodeType":"YulFunctionCall","src":"6520:30:15"},"nodeType":"YulExpressionStatement","src":"6520:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6570:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6581:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6566:3:15"},"nodeType":"YulFunctionCall","src":"6566:18:15"},{"hexValue":"57726f6e6720616d6f756e74496e2076616c7565","kind":"string","nodeType":"YulLiteral","src":"6586:22:15","type":"","value":"Wrong amountIn value"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6559:6:15"},"nodeType":"YulFunctionCall","src":"6559:50:15"},"nodeType":"YulExpressionStatement","src":"6559:50:15"},{"nodeType":"YulAssignment","src":"6618:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6630:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6641:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6626:3:15"},"nodeType":"YulFunctionCall","src":"6626:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6618:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_f124b7c6fa9859758bb2a94bb01c973cc962775f72f908c146d550a33144899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6457:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6471:4:15","type":""}],"src":"6306:344:15"},{"body":{"nodeType":"YulBlock","src":"6829:181:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6846:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6857:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6839:6:15"},"nodeType":"YulFunctionCall","src":"6839:21:15"},"nodeType":"YulExpressionStatement","src":"6839:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6880:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6891:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6876:3:15"},"nodeType":"YulFunctionCall","src":"6876:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6896:2:15","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6869:6:15"},"nodeType":"YulFunctionCall","src":"6869:30:15"},"nodeType":"YulExpressionStatement","src":"6869:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6919:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6930:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6915:3:15"},"nodeType":"YulFunctionCall","src":"6915:18:15"},{"hexValue":"4d696e696d616c206f757075742062616c616e63652076696f6c6174696f6e","kind":"string","nodeType":"YulLiteral","src":"6935:33:15","type":"","value":"Minimal ouput balance violation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6908:6:15"},"nodeType":"YulFunctionCall","src":"6908:61:15"},"nodeType":"YulExpressionStatement","src":"6908:61:15"},{"nodeType":"YulAssignment","src":"6978:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6990:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7001:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6986:3:15"},"nodeType":"YulFunctionCall","src":"6986:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6978:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_873cd9257ab4ffdca306d3e6c7c6446bd4c5e00efc70ea77ad74d4fe404d5b37__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6806:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6820:4:15","type":""}],"src":"6655:355:15"},{"body":{"nodeType":"YulBlock","src":"7064:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"7086:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7088:16:15"},"nodeType":"YulFunctionCall","src":"7088:18:15"},"nodeType":"YulExpressionStatement","src":"7088:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7080:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"7083:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7077:2:15"},"nodeType":"YulFunctionCall","src":"7077:8:15"},"nodeType":"YulIf","src":"7074:34:15"},{"nodeType":"YulAssignment","src":"7117:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7129:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"7132:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7125:3:15"},"nodeType":"YulFunctionCall","src":"7125:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7117:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7046:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"7049:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7055:4:15","type":""}],"src":"7015:125:15"},{"body":{"nodeType":"YulBlock","src":"7205:128:15","statements":[{"nodeType":"YulAssignment","src":"7215:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7230:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7224:5:15"},"nodeType":"YulFunctionCall","src":"7224:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7215:5:15"}]},{"body":{"nodeType":"YulBlock","src":"7311:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7320:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7323:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7313:6:15"},"nodeType":"YulFunctionCall","src":"7313:12:15"},"nodeType":"YulExpressionStatement","src":"7313:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7259:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7270:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7277:30:15","type":"","value":"0xffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7266:3:15"},"nodeType":"YulFunctionCall","src":"7266:42:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7256:2:15"},"nodeType":"YulFunctionCall","src":"7256:53:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7249:6:15"},"nodeType":"YulFunctionCall","src":"7249:61:15"},"nodeType":"YulIf","src":"7246:81:15"}]},"name":"abi_decode_uint112_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7184:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7195:5:15","type":""}],"src":"7145:188:15"},{"body":{"nodeType":"YulBlock","src":"7452:336:15","statements":[{"body":{"nodeType":"YulBlock","src":"7498:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7507:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7510:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7500:6:15"},"nodeType":"YulFunctionCall","src":"7500:12:15"},"nodeType":"YulExpressionStatement","src":"7500:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7473:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"7482:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7469:3:15"},"nodeType":"YulFunctionCall","src":"7469:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"7494:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7465:3:15"},"nodeType":"YulFunctionCall","src":"7465:32:15"},"nodeType":"YulIf","src":"7462:52:15"},{"nodeType":"YulAssignment","src":"7523:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7563:9:15"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"7533:29:15"},"nodeType":"YulFunctionCall","src":"7533:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7523:6:15"}]},{"nodeType":"YulAssignment","src":"7582:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7626:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7637:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7622:3:15"},"nodeType":"YulFunctionCall","src":"7622:18:15"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"7592:29:15"},"nodeType":"YulFunctionCall","src":"7592:49:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7582:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"7650:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7673:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7684:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7669:3:15"},"nodeType":"YulFunctionCall","src":"7669:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7663:5:15"},"nodeType":"YulFunctionCall","src":"7663:25:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7654:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"7742:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7751:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7754:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7744:6:15"},"nodeType":"YulFunctionCall","src":"7744:12:15"},"nodeType":"YulExpressionStatement","src":"7744:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7710:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7721:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7728:10:15","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7717:3:15"},"nodeType":"YulFunctionCall","src":"7717:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7707:2:15"},"nodeType":"YulFunctionCall","src":"7707:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7700:6:15"},"nodeType":"YulFunctionCall","src":"7700:41:15"},"nodeType":"YulIf","src":"7697:61:15"},{"nodeType":"YulAssignment","src":"7767:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"7777:5:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7767:6:15"}]}]},"name":"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7402:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7413:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7425:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7433:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7441:6:15","type":""}],"src":"7338:450:15"},{"body":{"nodeType":"YulBlock","src":"7967:169:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7995:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7977:6:15"},"nodeType":"YulFunctionCall","src":"7977:21:15"},"nodeType":"YulExpressionStatement","src":"7977:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8018:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8029:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8014:3:15"},"nodeType":"YulFunctionCall","src":"8014:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8034:2:15","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8007:6:15"},"nodeType":"YulFunctionCall","src":"8007:30:15"},"nodeType":"YulExpressionStatement","src":"8007:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8057:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8068:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8053:3:15"},"nodeType":"YulFunctionCall","src":"8053:18:15"},{"hexValue":"57726f6e6720706f6f6c207265736572766573","kind":"string","nodeType":"YulLiteral","src":"8073:21:15","type":"","value":"Wrong pool reserves"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8046:6:15"},"nodeType":"YulFunctionCall","src":"8046:49:15"},"nodeType":"YulExpressionStatement","src":"8046:49:15"},{"nodeType":"YulAssignment","src":"8104:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8116:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8127:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8112:3:15"},"nodeType":"YulFunctionCall","src":"8112:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8104:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7944:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7958:4:15","type":""}],"src":"7793:343:15"},{"body":{"nodeType":"YulBlock","src":"8193:176:15","statements":[{"body":{"nodeType":"YulBlock","src":"8312:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8314:16:15"},"nodeType":"YulFunctionCall","src":"8314:18:15"},"nodeType":"YulExpressionStatement","src":"8314:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8224:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8217:6:15"},"nodeType":"YulFunctionCall","src":"8217:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8210:6:15"},"nodeType":"YulFunctionCall","src":"8210:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8232:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8239:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"8307:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8235:3:15"},"nodeType":"YulFunctionCall","src":"8235:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8229:2:15"},"nodeType":"YulFunctionCall","src":"8229:81:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8206:3:15"},"nodeType":"YulFunctionCall","src":"8206:105:15"},"nodeType":"YulIf","src":"8203:131:15"},{"nodeType":"YulAssignment","src":"8343:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8358:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8361:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8354:3:15"},"nodeType":"YulFunctionCall","src":"8354:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8343:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8172:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8175:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8181:7:15","type":""}],"src":"8141:228:15"},{"body":{"nodeType":"YulBlock","src":"8406:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8423:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8426:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8416:6:15"},"nodeType":"YulFunctionCall","src":"8416:88:15"},"nodeType":"YulExpressionStatement","src":"8416:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8520:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8523:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8513:6:15"},"nodeType":"YulFunctionCall","src":"8513:15:15"},"nodeType":"YulExpressionStatement","src":"8513:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8544:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8547:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8537:6:15"},"nodeType":"YulFunctionCall","src":"8537:15:15"},"nodeType":"YulExpressionStatement","src":"8537:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"8374:184:15"},{"body":{"nodeType":"YulBlock","src":"8609:228:15","statements":[{"body":{"nodeType":"YulBlock","src":"8640:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8664:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8654:6:15"},"nodeType":"YulFunctionCall","src":"8654:88:15"},"nodeType":"YulExpressionStatement","src":"8654:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8762:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8765:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8755:6:15"},"nodeType":"YulFunctionCall","src":"8755:15:15"},"nodeType":"YulExpressionStatement","src":"8755:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8790:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8793:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8783:6:15"},"nodeType":"YulFunctionCall","src":"8783:15:15"},"nodeType":"YulExpressionStatement","src":"8783:15:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8629:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8622:6:15"},"nodeType":"YulFunctionCall","src":"8622:9:15"},"nodeType":"YulIf","src":"8619:189:15"},{"nodeType":"YulAssignment","src":"8817:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8826:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8829:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8822:3:15"},"nodeType":"YulFunctionCall","src":"8822:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8817:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8594:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"8597:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8603:1:15","type":""}],"src":"8563:274:15"},{"body":{"nodeType":"YulBlock","src":"9045:279:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9062:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"9073:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9055:6:15"},"nodeType":"YulFunctionCall","src":"9055:25:15"},"nodeType":"YulExpressionStatement","src":"9055:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9100:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9111:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:15"},"nodeType":"YulFunctionCall","src":"9096:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"9116:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9089:6:15"},"nodeType":"YulFunctionCall","src":"9089:34:15"},"nodeType":"YulExpressionStatement","src":"9089:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9143:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9154:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9139:3:15"},"nodeType":"YulFunctionCall","src":"9139:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9163:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"9171:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9159:3:15"},"nodeType":"YulFunctionCall","src":"9159:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9132:6:15"},"nodeType":"YulFunctionCall","src":"9132:83:15"},"nodeType":"YulExpressionStatement","src":"9132:83:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9235:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9246:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9231:3:15"},"nodeType":"YulFunctionCall","src":"9231:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9251:3:15","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9224:6:15"},"nodeType":"YulFunctionCall","src":"9224:31:15"},"nodeType":"YulExpressionStatement","src":"9224:31:15"},{"nodeType":"YulAssignment","src":"9264:54:15","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9290:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9302:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9313:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9298:3:15"},"nodeType":"YulFunctionCall","src":"9298:19:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9272:17:15"},"nodeType":"YulFunctionCall","src":"9272:46:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9264:4:15"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8990:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9001:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9009:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9017:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9025:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9036:4:15","type":""}],"src":"8842:482:15"},{"body":{"nodeType":"YulBlock","src":"9376:148:15","statements":[{"body":{"nodeType":"YulBlock","src":"9467:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9469:16:15"},"nodeType":"YulFunctionCall","src":"9469:18:15"},"nodeType":"YulExpressionStatement","src":"9469:18:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9392:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9399:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9389:2:15"},"nodeType":"YulFunctionCall","src":"9389:77:15"},"nodeType":"YulIf","src":"9386:103:15"},{"nodeType":"YulAssignment","src":"9498:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9509:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"9516:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9505:3:15"},"nodeType":"YulFunctionCall","src":"9505:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9498:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9358:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9368:3:15","type":""}],"src":"9329:195:15"},{"body":{"nodeType":"YulBlock","src":"9703:226:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9720:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9731:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9713:6:15"},"nodeType":"YulFunctionCall","src":"9713:21:15"},"nodeType":"YulExpressionStatement","src":"9713:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9754:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9765:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9750:3:15"},"nodeType":"YulFunctionCall","src":"9750:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9770:2:15","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9743:6:15"},"nodeType":"YulFunctionCall","src":"9743:30:15"},"nodeType":"YulExpressionStatement","src":"9743:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9793:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9804:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9789:3:15"},"nodeType":"YulFunctionCall","src":"9789:18:15"},{"hexValue":"526f75746550726f636573736f723a20696e76616c696420696e70757420616d","kind":"string","nodeType":"YulLiteral","src":"9809:34:15","type":"","value":"RouteProcessor: invalid input am"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9782:6:15"},"nodeType":"YulFunctionCall","src":"9782:62:15"},"nodeType":"YulExpressionStatement","src":"9782:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9864:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9875:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9860:3:15"},"nodeType":"YulFunctionCall","src":"9860:18:15"},{"hexValue":"6f756e74","kind":"string","nodeType":"YulLiteral","src":"9880:6:15","type":"","value":"ount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9853:6:15"},"nodeType":"YulFunctionCall","src":"9853:34:15"},"nodeType":"YulExpressionStatement","src":"9853:34:15"},{"nodeType":"YulAssignment","src":"9896:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9908:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9919:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9904:3:15"},"nodeType":"YulFunctionCall","src":"9904:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9896:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef2803841b52c86814d96883048464ae548e9347f651c80e3f08e587697a6736__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9680:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9694:4:15","type":""}],"src":"9529:400:15"},{"body":{"nodeType":"YulBlock","src":"10155:338:15","statements":[{"nodeType":"YulAssignment","src":"10165:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10177:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10188:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:15"},"nodeType":"YulFunctionCall","src":"10173:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10165:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"10201:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"10211:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10205:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10269:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10284:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"10292:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10280:3:15"},"nodeType":"YulFunctionCall","src":"10280:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10262:6:15"},"nodeType":"YulFunctionCall","src":"10262:34:15"},"nodeType":"YulExpressionStatement","src":"10262:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10316:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10327:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10312:3:15"},"nodeType":"YulFunctionCall","src":"10312:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10336:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"10344:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10332:3:15"},"nodeType":"YulFunctionCall","src":"10332:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10305:6:15"},"nodeType":"YulFunctionCall","src":"10305:43:15"},"nodeType":"YulExpressionStatement","src":"10305:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10368:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10379:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10364:3:15"},"nodeType":"YulFunctionCall","src":"10364:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10388:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"10396:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10384:3:15"},"nodeType":"YulFunctionCall","src":"10384:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10357:6:15"},"nodeType":"YulFunctionCall","src":"10357:43:15"},"nodeType":"YulExpressionStatement","src":"10357:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10431:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:15"},"nodeType":"YulFunctionCall","src":"10416:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"10436:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10409:6:15"},"nodeType":"YulFunctionCall","src":"10409:34:15"},"nodeType":"YulExpressionStatement","src":"10409:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10474:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:15"},"nodeType":"YulFunctionCall","src":"10459:19:15"},{"name":"value4","nodeType":"YulIdentifier","src":"10480:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10452:6:15"},"nodeType":"YulFunctionCall","src":"10452:35:15"},"nodeType":"YulExpressionStatement","src":"10452:35:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10092:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10103:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10111:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10119:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10127:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10135:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10146:4:15","type":""}],"src":"9934:559:15"},{"body":{"nodeType":"YulBlock","src":"10596:147:15","statements":[{"body":{"nodeType":"YulBlock","src":"10642:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10651:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10654:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10644:6:15"},"nodeType":"YulFunctionCall","src":"10644:12:15"},"nodeType":"YulExpressionStatement","src":"10644:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10617:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"10626:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10613:3:15"},"nodeType":"YulFunctionCall","src":"10613:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"10638:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10609:3:15"},"nodeType":"YulFunctionCall","src":"10609:32:15"},"nodeType":"YulIf","src":"10606:52:15"},{"nodeType":"YulAssignment","src":"10667:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10683:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10677:5:15"},"nodeType":"YulFunctionCall","src":"10677:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10667:6:15"}]},{"nodeType":"YulAssignment","src":"10702:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10722:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10733:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10718:3:15"},"nodeType":"YulFunctionCall","src":"10718:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10712:5:15"},"nodeType":"YulFunctionCall","src":"10712:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10702:6:15"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10554:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10565:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10577:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10585:6:15","type":""}],"src":"10498:245:15"},{"body":{"nodeType":"YulBlock","src":"10867:99:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10884:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10895:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10877:6:15"},"nodeType":"YulFunctionCall","src":"10877:21:15"},"nodeType":"YulExpressionStatement","src":"10877:21:15"},{"nodeType":"YulAssignment","src":"10907:53:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10933:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:15"},"nodeType":"YulFunctionCall","src":"10941:18:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"10915:17:15"},"nodeType":"YulFunctionCall","src":"10915:45:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10907:4:15"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10836:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10847:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10858:4:15","type":""}],"src":"10748:218:15"},{"body":{"nodeType":"YulBlock","src":"11156:294:15","statements":[{"nodeType":"YulAssignment","src":"11166:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11178:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11189:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11174:3:15"},"nodeType":"YulFunctionCall","src":"11174:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11166:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"11202:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"11212:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11206:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11270:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11285:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11293:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11281:3:15"},"nodeType":"YulFunctionCall","src":"11281:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11263:6:15"},"nodeType":"YulFunctionCall","src":"11263:34:15"},"nodeType":"YulExpressionStatement","src":"11263:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11317:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11328:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11313:3:15"},"nodeType":"YulFunctionCall","src":"11313:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11337:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11345:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11333:3:15"},"nodeType":"YulFunctionCall","src":"11333:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11306:6:15"},"nodeType":"YulFunctionCall","src":"11306:43:15"},"nodeType":"YulExpressionStatement","src":"11306:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11369:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11380:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11365:3:15"},"nodeType":"YulFunctionCall","src":"11365:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11389:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11397:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11385:3:15"},"nodeType":"YulFunctionCall","src":"11385:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11358:6:15"},"nodeType":"YulFunctionCall","src":"11358:43:15"},"nodeType":"YulExpressionStatement","src":"11358:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11421:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11432:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11417:3:15"},"nodeType":"YulFunctionCall","src":"11417:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"11437:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11410:6:15"},"nodeType":"YulFunctionCall","src":"11410:34:15"},"nodeType":"YulExpressionStatement","src":"11410:34:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11101:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11112:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11120:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11128:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11136:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11147:4:15","type":""}],"src":"10971:479:15"},{"body":{"nodeType":"YulBlock","src":"11584:198:15","statements":[{"nodeType":"YulAssignment","src":"11594:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11606:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11617:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11602:3:15"},"nodeType":"YulFunctionCall","src":"11602:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11594:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"11629:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"11639:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11633:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11712:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11720:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11708:3:15"},"nodeType":"YulFunctionCall","src":"11708:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11690:6:15"},"nodeType":"YulFunctionCall","src":"11690:34:15"},"nodeType":"YulExpressionStatement","src":"11690:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11744:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11755:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11740:3:15"},"nodeType":"YulFunctionCall","src":"11740:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11764:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"11772:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11760:3:15"},"nodeType":"YulFunctionCall","src":"11760:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11733:6:15"},"nodeType":"YulFunctionCall","src":"11733:43:15"},"nodeType":"YulExpressionStatement","src":"11733:43:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11545:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11556:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11564:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11575:4:15","type":""}],"src":"11455:327:15"},{"body":{"nodeType":"YulBlock","src":"11847:132:15","statements":[{"nodeType":"YulAssignment","src":"11857:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11872:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11866:5:15"},"nodeType":"YulFunctionCall","src":"11866:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11857:5:15"}]},{"body":{"nodeType":"YulBlock","src":"11957:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11966:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11969:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11959:6:15"},"nodeType":"YulFunctionCall","src":"11959:12:15"},"nodeType":"YulExpressionStatement","src":"11959:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11901:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11912:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"11919:34:15","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11908:3:15"},"nodeType":"YulFunctionCall","src":"11908:46:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11898:2:15"},"nodeType":"YulFunctionCall","src":"11898:57:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11891:6:15"},"nodeType":"YulFunctionCall","src":"11891:65:15"},"nodeType":"YulIf","src":"11888:85:15"}]},"name":"abi_decode_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11826:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11837:5:15","type":""}],"src":"11787:192:15"},{"body":{"nodeType":"YulBlock","src":"12089:443:15","statements":[{"body":{"nodeType":"YulBlock","src":"12135:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12144:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12147:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12137:6:15"},"nodeType":"YulFunctionCall","src":"12137:12:15"},"nodeType":"YulExpressionStatement","src":"12137:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12110:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12106:3:15"},"nodeType":"YulFunctionCall","src":"12106:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12102:3:15"},"nodeType":"YulFunctionCall","src":"12102:32:15"},"nodeType":"YulIf","src":"12099:52:15"},{"nodeType":"YulVariableDeclaration","src":"12160:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12180:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12174:5:15"},"nodeType":"YulFunctionCall","src":"12174:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12164:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12192:33:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12214:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12222:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12210:3:15"},"nodeType":"YulFunctionCall","src":"12210:15:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"12196:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"12300:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12302:16:15"},"nodeType":"YulFunctionCall","src":"12302:18:15"},"nodeType":"YulExpressionStatement","src":"12302:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12243:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"12255:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12240:2:15"},"nodeType":"YulFunctionCall","src":"12240:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12279:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"12291:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12276:2:15"},"nodeType":"YulFunctionCall","src":"12276:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12237:2:15"},"nodeType":"YulFunctionCall","src":"12237:62:15"},"nodeType":"YulIf","src":"12234:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12338:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12342:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12331:6:15"},"nodeType":"YulFunctionCall","src":"12331:22:15"},"nodeType":"YulExpressionStatement","src":"12331:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12369:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12407:9:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"12377:29:15"},"nodeType":"YulFunctionCall","src":"12377:40:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12362:6:15"},"nodeType":"YulFunctionCall","src":"12362:56:15"},"nodeType":"YulExpressionStatement","src":"12362:56:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12438:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12446:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12434:3:15"},"nodeType":"YulFunctionCall","src":"12434:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12485:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12496:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12481:3:15"},"nodeType":"YulFunctionCall","src":"12481:18:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"12451:29:15"},"nodeType":"YulFunctionCall","src":"12451:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12427:6:15"},"nodeType":"YulFunctionCall","src":"12427:74:15"},"nodeType":"YulExpressionStatement","src":"12427:74:15"},{"nodeType":"YulAssignment","src":"12510:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"12520:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12510:6:15"}]}]},"name":"abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12055:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12066:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12078:6:15","type":""}],"src":"11984:548:15"},{"body":{"nodeType":"YulBlock","src":"12596:116:15","statements":[{"nodeType":"YulAssignment","src":"12606:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12621:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12615:5:15"},"nodeType":"YulFunctionCall","src":"12615:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12606:5:15"}]},{"body":{"nodeType":"YulBlock","src":"12690:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12699:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12702:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12692:6:15"},"nodeType":"YulFunctionCall","src":"12692:12:15"},"nodeType":"YulExpressionStatement","src":"12692:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12650:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12661:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"12668:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12657:3:15"},"nodeType":"YulFunctionCall","src":"12657:30:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12647:2:15"},"nodeType":"YulFunctionCall","src":"12647:41:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12640:6:15"},"nodeType":"YulFunctionCall","src":"12640:49:15"},"nodeType":"YulIf","src":"12637:69:15"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12575:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12586:5:15","type":""}],"src":"12537:175:15"},{"body":{"nodeType":"YulBlock","src":"12828:524:15","statements":[{"body":{"nodeType":"YulBlock","src":"12874:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12883:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12886:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12876:6:15"},"nodeType":"YulFunctionCall","src":"12876:12:15"},"nodeType":"YulExpressionStatement","src":"12876:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12849:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12858:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12845:3:15"},"nodeType":"YulFunctionCall","src":"12845:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"12870:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12841:3:15"},"nodeType":"YulFunctionCall","src":"12841:32:15"},"nodeType":"YulIf","src":"12838:52:15"},{"nodeType":"YulVariableDeclaration","src":"12899:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12919:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12913:5:15"},"nodeType":"YulFunctionCall","src":"12913:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12903:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12931:33:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12953:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12961:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12949:3:15"},"nodeType":"YulFunctionCall","src":"12949:15:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"12935:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"13039:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13041:16:15"},"nodeType":"YulFunctionCall","src":"13041:18:15"},"nodeType":"YulExpressionStatement","src":"13041:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"12982:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"12994:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12979:2:15"},"nodeType":"YulFunctionCall","src":"12979:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13018:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13030:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13015:2:15"},"nodeType":"YulFunctionCall","src":"13015:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12976:2:15"},"nodeType":"YulFunctionCall","src":"12976:62:15"},"nodeType":"YulIf","src":"12973:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13077:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13081:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13070:6:15"},"nodeType":"YulFunctionCall","src":"13070:22:15"},"nodeType":"YulExpressionStatement","src":"13070:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13108:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13145:9:15"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"13116:28:15"},"nodeType":"YulFunctionCall","src":"13116:39:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13101:6:15"},"nodeType":"YulFunctionCall","src":"13101:55:15"},"nodeType":"YulExpressionStatement","src":"13101:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13176:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13184:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13172:3:15"},"nodeType":"YulFunctionCall","src":"13172:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13222:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13233:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13218:3:15"},"nodeType":"YulFunctionCall","src":"13218:18:15"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"13189:28:15"},"nodeType":"YulFunctionCall","src":"13189:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13165:6:15"},"nodeType":"YulFunctionCall","src":"13165:73:15"},"nodeType":"YulExpressionStatement","src":"13165:73:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13258:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"13266:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13254:3:15"},"nodeType":"YulFunctionCall","src":"13254:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13305:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13316:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13301:3:15"},"nodeType":"YulFunctionCall","src":"13301:18:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"13271:29:15"},"nodeType":"YulFunctionCall","src":"13271:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13247:6:15"},"nodeType":"YulFunctionCall","src":"13247:74:15"},"nodeType":"YulExpressionStatement","src":"13247:74:15"},{"nodeType":"YulAssignment","src":"13330:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"13340:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13330:6:15"}]}]},"name":"abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12794:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12805:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12817:6:15","type":""}],"src":"12717:635:15"},{"body":{"nodeType":"YulBlock","src":"13578:338:15","statements":[{"nodeType":"YulAssignment","src":"13588:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13600:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13611:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13596:3:15"},"nodeType":"YulFunctionCall","src":"13596:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13588:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"13624:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"13634:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13628:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13707:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13715:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13703:3:15"},"nodeType":"YulFunctionCall","src":"13703:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13685:6:15"},"nodeType":"YulFunctionCall","src":"13685:34:15"},"nodeType":"YulExpressionStatement","src":"13685:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13739:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13750:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13735:3:15"},"nodeType":"YulFunctionCall","src":"13735:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13759:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13767:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13755:3:15"},"nodeType":"YulFunctionCall","src":"13755:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13728:6:15"},"nodeType":"YulFunctionCall","src":"13728:43:15"},"nodeType":"YulExpressionStatement","src":"13728:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13791:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13802:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13787:3:15"},"nodeType":"YulFunctionCall","src":"13787:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13811:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"13819:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13807:3:15"},"nodeType":"YulFunctionCall","src":"13807:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13780:6:15"},"nodeType":"YulFunctionCall","src":"13780:43:15"},"nodeType":"YulExpressionStatement","src":"13780:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13843:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13854:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13839:3:15"},"nodeType":"YulFunctionCall","src":"13839:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"13859:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13832:6:15"},"nodeType":"YulFunctionCall","src":"13832:34:15"},"nodeType":"YulExpressionStatement","src":"13832:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13886:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13897:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13882:3:15"},"nodeType":"YulFunctionCall","src":"13882:19:15"},{"name":"value4","nodeType":"YulIdentifier","src":"13903:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13875:6:15"},"nodeType":"YulFunctionCall","src":"13875:35:15"},"nodeType":"YulExpressionStatement","src":"13875:35:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13515:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13526:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13534:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13542:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13550:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13558:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13569:4:15","type":""}],"src":"13357:559:15"},{"body":{"nodeType":"YulBlock","src":"14050:168:15","statements":[{"nodeType":"YulAssignment","src":"14060:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14072:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14083:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14068:3:15"},"nodeType":"YulFunctionCall","src":"14068:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14060:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14102:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14117:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"14125:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14113:3:15"},"nodeType":"YulFunctionCall","src":"14113:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14095:6:15"},"nodeType":"YulFunctionCall","src":"14095:74:15"},"nodeType":"YulExpressionStatement","src":"14095:74:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14189:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14200:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14185:3:15"},"nodeType":"YulFunctionCall","src":"14185:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"14205:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14178:6:15"},"nodeType":"YulFunctionCall","src":"14178:34:15"},"nodeType":"YulExpressionStatement","src":"14178:34:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14011:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14022:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14030:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14041:4:15","type":""}],"src":"13921:297:15"},{"body":{"nodeType":"YulBlock","src":"14380:241:15","statements":[{"nodeType":"YulAssignment","src":"14390:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14402:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14413:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14398:3:15"},"nodeType":"YulFunctionCall","src":"14398:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14390:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"14425:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14435:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14429:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14493:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14508:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"14516:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14504:3:15"},"nodeType":"YulFunctionCall","src":"14504:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14486:6:15"},"nodeType":"YulFunctionCall","src":"14486:34:15"},"nodeType":"YulExpressionStatement","src":"14486:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14540:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14551:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14536:3:15"},"nodeType":"YulFunctionCall","src":"14536:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14560:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"14568:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14556:3:15"},"nodeType":"YulFunctionCall","src":"14556:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14529:6:15"},"nodeType":"YulFunctionCall","src":"14529:43:15"},"nodeType":"YulExpressionStatement","src":"14529:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14592:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14603:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14588:3:15"},"nodeType":"YulFunctionCall","src":"14588:18:15"},{"name":"value2","nodeType":"YulIdentifier","src":"14608:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14581:6:15"},"nodeType":"YulFunctionCall","src":"14581:34:15"},"nodeType":"YulExpressionStatement","src":"14581:34:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14333:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14344:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14352:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14360:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14371:4:15","type":""}],"src":"14223:398:15"},{"body":{"nodeType":"YulBlock","src":"14704:199:15","statements":[{"body":{"nodeType":"YulBlock","src":"14750:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14759:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14762:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14752:6:15"},"nodeType":"YulFunctionCall","src":"14752:12:15"},"nodeType":"YulExpressionStatement","src":"14752:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14725:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"14734:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14721:3:15"},"nodeType":"YulFunctionCall","src":"14721:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"14746:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14717:3:15"},"nodeType":"YulFunctionCall","src":"14717:32:15"},"nodeType":"YulIf","src":"14714:52:15"},{"nodeType":"YulVariableDeclaration","src":"14775:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14794:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14788:5:15"},"nodeType":"YulFunctionCall","src":"14788:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14779:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"14857:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14866:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14869:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14859:6:15"},"nodeType":"YulFunctionCall","src":"14859:12:15"},"nodeType":"YulExpressionStatement","src":"14859:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14826:5:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14847:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14840:6:15"},"nodeType":"YulFunctionCall","src":"14840:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14833:6:15"},"nodeType":"YulFunctionCall","src":"14833:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14823:2:15"},"nodeType":"YulFunctionCall","src":"14823:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14816:6:15"},"nodeType":"YulFunctionCall","src":"14816:40:15"},"nodeType":"YulIf","src":"14813:60:15"},{"nodeType":"YulAssignment","src":"14882:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"14892:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14882:6:15"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14670:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14681:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14693:6:15","type":""}],"src":"14626:277:15"},{"body":{"nodeType":"YulBlock","src":"15082:232:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15099:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15110:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15092:6:15"},"nodeType":"YulFunctionCall","src":"15092:21:15"},"nodeType":"YulExpressionStatement","src":"15092:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15133:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15144:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15129:3:15"},"nodeType":"YulFunctionCall","src":"15129:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"15149:2:15","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15122:6:15"},"nodeType":"YulFunctionCall","src":"15122:30:15"},"nodeType":"YulExpressionStatement","src":"15122:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15172:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15183:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15168:3:15"},"nodeType":"YulFunctionCall","src":"15168:18:15"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"15188:34:15","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15161:6:15"},"nodeType":"YulFunctionCall","src":"15161:62:15"},"nodeType":"YulExpressionStatement","src":"15161:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15243:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15254:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15239:3:15"},"nodeType":"YulFunctionCall","src":"15239:18:15"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"15259:12:15","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15232:6:15"},"nodeType":"YulFunctionCall","src":"15232:40:15"},"nodeType":"YulExpressionStatement","src":"15232:40:15"},{"nodeType":"YulAssignment","src":"15281:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15293:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15304:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15289:3:15"},"nodeType":"YulFunctionCall","src":"15289:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15281:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15059:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15073:4:15","type":""}],"src":"14908:406:15"},{"body":{"nodeType":"YulBlock","src":"15493:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15510:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15521:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15503:6:15"},"nodeType":"YulFunctionCall","src":"15503:21:15"},"nodeType":"YulExpressionStatement","src":"15503:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15544:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15555:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15540:3:15"},"nodeType":"YulFunctionCall","src":"15540:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"15560:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15533:6:15"},"nodeType":"YulFunctionCall","src":"15533:30:15"},"nodeType":"YulExpressionStatement","src":"15533:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15583:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15594:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15579:3:15"},"nodeType":"YulFunctionCall","src":"15579:18:15"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"15599:34:15","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15572:6:15"},"nodeType":"YulFunctionCall","src":"15572:62:15"},"nodeType":"YulExpressionStatement","src":"15572:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15654:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15665:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15650:3:15"},"nodeType":"YulFunctionCall","src":"15650:18:15"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"15670:8:15","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15643:6:15"},"nodeType":"YulFunctionCall","src":"15643:36:15"},"nodeType":"YulExpressionStatement","src":"15643:36:15"},{"nodeType":"YulAssignment","src":"15688:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15700:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15711:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15696:3:15"},"nodeType":"YulFunctionCall","src":"15696:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15688:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15470:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15484:4:15","type":""}],"src":"15319:402:15"},{"body":{"nodeType":"YulBlock","src":"15900:179:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15917:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15928:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15910:6:15"},"nodeType":"YulFunctionCall","src":"15910:21:15"},"nodeType":"YulExpressionStatement","src":"15910:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15951:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15962:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15947:3:15"},"nodeType":"YulFunctionCall","src":"15947:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"15967:2:15","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15940:6:15"},"nodeType":"YulFunctionCall","src":"15940:30:15"},"nodeType":"YulExpressionStatement","src":"15940:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15990:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16001:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15986:3:15"},"nodeType":"YulFunctionCall","src":"15986:18:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"16006:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15979:6:15"},"nodeType":"YulFunctionCall","src":"15979:59:15"},"nodeType":"YulExpressionStatement","src":"15979:59:15"},{"nodeType":"YulAssignment","src":"16047:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16059:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16070:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16055:3:15"},"nodeType":"YulFunctionCall","src":"16055:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16047:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15877:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15891:4:15","type":""}],"src":"15726:353:15"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value5 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        let value_3 := calldataload(add(headStart, 192))\n        validator_revert_address(value_3)\n        value6 := value_3\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"RouteProcessor is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_70ee23a3b6e6dd71e33f2c807cd13199f903ff7c94e388cd2fd71fe2d7b17e08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Unknown command code\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f124b7c6fa9859758bb2a94bb01c973cc962775f72f908c146d550a33144899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Wrong amountIn value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_873cd9257ab4ffdca306d3e6c7c6446bd4c5e00efc70ea77ad74d4fe404d5b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Minimal ouput balance violation\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Wrong pool reserves\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ef2803841b52c86814d96883048464ae548e9347f651c80e3f08e587697a6736__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"RouteProcessor: invalid input am\")\n        mstore(add(headStart, 96), \"ount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint128_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint128_fromMemory(add(headStart, 32)))\n        value0 := memPtr\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint64_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_uint128_fromMemory(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"975":[{"length":32,"start":124},{"length":32,"start":4167},{"length":32,"start":4640},{"length":32,"start":4871},{"length":32,"start":5106},{"length":32,"start":5386},{"length":32,"start":5605},{"length":32,"start":5802},{"length":32,"start":5975},{"length":32,"start":6200},{"length":32,"start":6398},{"length":32,"start":6605}]},"linkReferences":{},"object":"6080604052600436106100385760003560e01c80632646478b146100445780636b2ace871461006a57806393b3774c146100c357600080fd5b3661003f57005b600080fd5b610057610052366004611f4c565b6100d6565b6040519081526020015b60405180910390f35b34801561007657600080fd5b5061009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610061565b6100576100d1366004611fd3565b61016b565b60008054600114610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b6564000000000000000060448201526064015b60405180910390fd5b600260005561015b8787878787876102bc565b6001600055979650505050505050565b600080546001146101d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b65640000000000000000604482015260640161013f565b60026000908155604051819073ffffffffffffffffffffffffffffffffffffffff8c16908b908381818185875af1925050503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b5091509150818160405160200161025291906120a4565b60405160208183030381529060405290610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f919061210a565b506102a88989898989896102bc565b60016000559b9a5050505050505050505050565b6000808073ffffffffffffffffffffffffffffffffffffffff871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610386576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301528816906370a0823190602401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190612124565b61039f565b8473ffffffffffffffffffffffffffffffffffffffff16315b604080518082019091528581528551860160208201529091505b80516020820151111561058d5760006103d88280516001018051915290565b905060148160ff1610156104e5578060ff16600a1415610401576103fb82610765565b50610587565b8060ff166004141561041b5761041682610a87565b610587565b8060ff166003141561044257610431828c610bcb565b61043b908561216c565b9350610587565b8060ff16600514156104575761043182610c63565b8060ff166006141561046d576104168783610dfc565b8060ff166007141561048357610431828c610f4d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e6b6e6f776e20636f6d6d616e6420636f6465000000000000000000000000604482015260640161013f565b60188160ff161015610532578060ff166014141561050757610416828c610fdc565b8060ff166015141561051c57610416826110dc565b8060ff166017141561048357610416828c611196565b8060ff166018141561054857610431828c611251565b8060ff166019141561055d5761041682611378565b8060ff16601a14156105725761041682611574565b8060ff16601b14156104835761041682611887565b506103b9565b8883146105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f57726f6e6720616d6f756e74496e2076616c7565000000000000000000000000604482015260640161013f565b600073ffffffffffffffffffffffffffffffffffffffff891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146106be576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301528a16906370a0823190602401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b99190612124565b6106d7565b8673ffffffffffffffffffffffffffffffffffffffff16315b90506106e3888461216c565b81101561074c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4d696e696d616c206f757075742062616c616e63652076696f6c6174696f6e00604482015260640161013f565b6107568382612184565b9b9a5050505050505050505050565b6000806107788380516014018051915290565b9050600061078c8480516014018051915290565b905060006107a08580516001018051915290565b905060006107b48680516014018051915290565b90506000808573ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082891906121be565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008211801561085d5750600081115b6108c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f57726f6e6720706f6f6c20726573657276657300000000000000000000000000604482015260640161013f565b6000808560ff166001146108d85782846108db565b83835b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301529294509092506000918491908a16906370a0823190602401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190612124565b6109819190612184565b90506000610991826103e561220e565b9050806109a0856103e861220e565b6109aa919061216c565b6109b4848361220e565b6109be919061224b565b9a506000808960ff166001146109d6578c60006109da565b60008d5b604080516000815260208101918290527f022c0d9f00000000000000000000000000000000000000000000000000000000909152919350915073ffffffffffffffffffffffffffffffffffffffff8d169063022c0d9f90610a4490859085908e9060248101612286565b600060405180830381600087803b158015610a5e57600080fd5b505af1158015610a72573d6000803e3d6000fd5b50505050505050505050505050505050919050565b6000610a998280516014018051915290565b90506000610aad8380516001018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009060019073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b449190612124565b610b4e9190612184565b905060005b8260ff16811015610bc4576000610b708680516014018051915290565b90506000610b848780516002018051915290565b61ffff8082168602049485900394909150610bb673ffffffffffffffffffffffffffffffffffffffff881684836119fe565b505050806001019050610b53565b5050505050565b600080610bde8480516001018051915290565b90506000915060005b8160ff16811015610c5b576000610c048680516014018051915290565b90506000610c188780516020018051915290565b9050610c24818661216c565b9450610c4873ffffffffffffffffffffffffffffffffffffffff8716338484611ad7565b505080610c54906122cb565b9050610be7565b505092915050565b600080610c768380516014018051915290565b90508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b50505050506000610ceb8480516001018051915290565b90506000925060005b8160ff16811015610d67576000610d118680516014018051915290565b90506000610d258780516020018051915290565b9050610d31818761216c565b9550610d5473ffffffffffffffffffffffffffffffffffffffff861683836119fe565b505080610d60906122cb565b9050610cf4565b504715610df5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f75746550726f636573736f723a20696e76616c696420696e70757420616d60448201527f6f756e7400000000000000000000000000000000000000000000000000000000606482015260840161013f565b5050919050565b6000610e0e8280516014018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915073ffffffffffffffffffffffffffffffffffffffff821690632e1a7d4d9060019083906370a0823190602401602060405180830381865afa158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa9190612124565b610eb49190612184565b6040518263ffffffff1660e01b8152600401610ed291815260200190565b600060405180830381600087803b158015610eec57600080fd5b505af1158015610f00573d6000803e3d6000fd5b505060405173ffffffffffffffffffffffffffffffffffffffff861692504780156108fc029250906000818181858888f19350505050158015610f47573d6000803e3d6000fd5b50505050565b600080610f608480516001018051915290565b90506000915060005b8160ff16811015610c5b576000610f868680516014018051915290565b90506000610f9a8780516020018051915290565b9050610fa6818661216c565b9450610fc973ffffffffffffffffffffffffffffffffffffffff871683836119fe565b505080610fd5906122cb565b9050610f69565b6000610fee8380516014018051915290565b905060006110028480516020018051915290565b6040517f02b9446c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301819052908516604483015260648201839052600060848301529192506302b9446c9060a4015b60408051808303816000875af11580156110b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d49190612304565b505050505050565b60006110ee8280516014018051915290565b8251602080820180519092010184526040517f627dd56a0000000000000000000000000000000000000000000000000000000081529192509073ffffffffffffffffffffffffffffffffffffffff83169063627dd56a9061115390849060040161210a565b6020604051808303816000875af1158015611172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f479190612124565b60006111a88380516014018051915290565b905060006111bc8480516020018051915290565b6040517f97da6d3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152306024830152848116604483015260648201839052600060848301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a401611092565b6000806112648480516001018051915290565b90506000915060005b8160ff16811015610c5b57600061128a8680516014018051915290565b9050600061129e8780516020018051915290565b90506112aa818661216c565b6040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301523360248301528481166044830152606482018490529196507f00000000000000000000000000000000000000000000000000000000000000009091169063f18d03cc90608401600060405180830381600087803b15801561134d57600080fd5b505af1158015611361573d6000803e3d6000fd5b50505050505080611371906122cb565b905061126d565b600061138a8280516014018051915290565b9050600061139e8380516001018051915290565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301523060248301529192506000916001917f00000000000000000000000000000000000000000000000000000000000000009091169063f7888aec90604401602060405180830381865afa15801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f9190612124565b6114699190612184565b905060005b8260ff16811015610bc457600061148b8680516014018051915290565b9050600061149f8780516002018051915290565b6040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152306024830152848116604483015261ffff8084168802046064830181905296879003969293507f0000000000000000000000000000000000000000000000000000000000000000169063f18d03cc90608401600060405180830381600087803b15801561154e57600080fd5b505af1158015611562573d6000803e3d6000fd5b5050505050505080600101905061146e565b60006115868280516014018051915290565b9050600061159a8380516014018051915290565b6040517f4ffe34db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690634ffe34db906024016040805180830381865afa15801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164f9190612348565b516040517fdf23b45b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526fffffffffffffffffffffffffffffffff909216917f0000000000000000000000000000000000000000000000000000000000000000169063df23b45b90602401606060405180830381865afa1580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171591906123bb565b60409081015190517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301526fffffffffffffffffffffffffffffffff909216918516906370a0823190602401602060405180830381865afa1580156117bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117df9190612124565b6117e9919061216c565b6117f39190612184565b6040517f02b9446c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301819052908616604483015260648201839052600060848301529192506302b9446c9060a401611092565b60006118998280516014018051915290565b905060006118ad8380516014018051915290565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301523060248301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f7888aec90604401602060405180830381865afa158015611945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119699190612124565b6040517f97da6d3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152306024830152848116604483015260006064830152608482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a401611092565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052611ad29084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611b35565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610f479085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611a50565b6000611b97826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611c419092919063ffffffff16565b805190915015611ad25780806020019051810190611bb59190612427565b611ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161013f565b6060611c508484600085611c58565b949350505050565b606082471015611cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161013f565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d1391906120a4565b60006040518083038185875af1925050503d8060008114611d50576040519150601f19603f3d011682016040523d82523d6000602084013e611d55565b606091505b5091509150611d6687838387611d71565b979650505050505050565b60608315611e04578251611dfd5773ffffffffffffffffffffffffffffffffffffffff85163b611dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161013f565b5081611c50565b611c508383815115611e195781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f919061210a565b73ffffffffffffffffffffffffffffffffffffffff81168114611e6f57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112611eb257600080fd5b813567ffffffffffffffff80821115611ecd57611ecd611e72565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611f1357611f13611e72565b81604052838152866020858801011115611f2c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215611f6557600080fd5b8635611f7081611e4d565b9550602087013594506040870135611f8781611e4d565b9350606087013592506080870135611f9e81611e4d565b915060a087013567ffffffffffffffff811115611fba57600080fd5b611fc689828a01611ea1565b9150509295509295509295565b600080600080600080600080610100898b031215611ff057600080fd5b8835611ffb81611e4d565b975060208901359650604089013561201281611e4d565b955060608901359450608089013561202981611e4d565b935060a0890135925060c089013561204081611e4d565b915060e089013567ffffffffffffffff81111561205c57600080fd5b6120688b828c01611ea1565b9150509295985092959890939650565b60005b8381101561209357818101518382015260200161207b565b83811115610f475750506000910152565b600082516120b6818460208701612078565b9190910192915050565b600081518084526120d8816020860160208601612078565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061211d60208301846120c0565b9392505050565b60006020828403121561213657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561217f5761217f61213d565b500190565b6000828210156121965761219661213d565b500390565b80516dffffffffffffffffffffffffffff811681146121b957600080fd5b919050565b6000806000606084860312156121d357600080fd5b6121dc8461219b565b92506121ea6020850161219b565b9150604084015163ffffffff8116811461220357600080fd5b809150509250925092565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122465761224661213d565b500290565b600082612281577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff831660408201526080606082015260006122c160808301846120c0565b9695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122fd576122fd61213d565b5060010190565b6000806040838503121561231757600080fd5b505080516020909101519092909150565b80516fffffffffffffffffffffffffffffffff811681146121b957600080fd5b60006040828403121561235a57600080fd5b6040516040810181811067ffffffffffffffff8211171561237d5761237d611e72565b60405261238983612328565b815261239760208401612328565b60208201529392505050565b805167ffffffffffffffff811681146121b957600080fd5b6000606082840312156123cd57600080fd5b6040516060810181811067ffffffffffffffff821117156123f0576123f0611e72565b6040526123fc836123a3565b815261240a602084016123a3565b602082015261241b60408401612328565b60408201529392505050565b60006020828403121561243957600080fd5b8151801515811461211d57600080fdfea264697066735822122094b1f4dca42af174e67447a8c123dbb05c58e628ef14bf7157e50e77841c08ac64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2646478B EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x6B2ACE87 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x93B3774C EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57 PUSH2 0x52 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x61 JUMP JUMPDEST PUSH2 0x57 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x15B DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 DUP12 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST POP PUSH2 0x2A8 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP6 DUP2 MSTORE DUP6 MLOAD DUP7 ADD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD GT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 PUSH2 0x3D8 DUP3 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0xA EQ ISZERO PUSH2 0x401 JUMPI PUSH2 0x3FB DUP3 PUSH2 0x765 JUMP JUMPDEST POP PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0x41B JUMPI PUSH2 0x416 DUP3 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x442 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x43B SWAP1 DUP6 PUSH2 0x216C JUMP JUMPDEST SWAP4 POP PUSH2 0x587 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0x457 JUMPI PUSH2 0x431 DUP3 PUSH2 0xC63 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0x46D JUMPI PUSH2 0x416 DUP8 DUP4 PUSH2 0xDFC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x7 EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6B6E6F776E20636F6D6D616E6420636F6465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x18 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x532 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x14 EQ ISZERO PUSH2 0x507 JUMPI PUSH2 0x416 DUP3 DUP13 PUSH2 0xFDC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x15 EQ ISZERO PUSH2 0x51C JUMPI PUSH2 0x416 DUP3 PUSH2 0x10DC JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x17 EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x416 DUP3 DUP13 PUSH2 0x1196 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x18 EQ ISZERO PUSH2 0x548 JUMPI PUSH2 0x431 DUP3 DUP13 PUSH2 0x1251 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x19 EQ ISZERO PUSH2 0x55D JUMPI PUSH2 0x416 DUP3 PUSH2 0x1378 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1A EQ ISZERO PUSH2 0x572 JUMPI PUSH2 0x416 DUP3 PUSH2 0x1574 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO PUSH2 0x483 JUMPI PUSH2 0x416 DUP3 PUSH2 0x1887 JUMP JUMPDEST POP PUSH2 0x3B9 JUMP JUMPDEST DUP9 DUP4 EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720616D6F756E74496E2076616C7565000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST SWAP1 POP PUSH2 0x6E3 DUP9 DUP5 PUSH2 0x216C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D616C206F757075742062616C616E63652076696F6C6174696F6E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x756 DUP4 DUP3 PUSH2 0x2184 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x778 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x78C DUP5 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A0 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7B4 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x85D JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720706F6F6C20726573657276657300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x8D8 JUMPI DUP3 DUP5 PUSH2 0x8DB JUMP JUMPDEST DUP4 DUP4 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 DUP5 SWAP2 SWAP1 DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x953 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x991 DUP3 PUSH2 0x3E5 PUSH2 0x220E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x9A0 DUP6 PUSH2 0x3E8 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x9B4 DUP5 DUP4 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP11 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x9D6 JUMPI DUP13 PUSH1 0x0 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x0 DUP14 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0x22C0D9F00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0xA44 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP15 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAAD DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 PUSH2 0xB70 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB84 DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP7 MUL DIV SWAP5 DUP6 SWAP1 SUB SWAP5 SWAP1 SWAP2 POP PUSH2 0xBB6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP5 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBDE DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0xC04 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC18 DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xC24 DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST SWAP5 POP PUSH2 0xC48 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND CALLER DUP5 DUP5 PUSH2 0x1AD7 JUMP JUMPDEST POP POP DUP1 PUSH2 0xC54 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xBE7 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC76 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xCEB DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 PUSH2 0xD11 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD25 DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xD31 DUP2 DUP8 PUSH2 0x216C JUMP JUMPDEST SWAP6 POP PUSH2 0xD54 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP4 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP DUP1 PUSH2 0xD60 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 JUMP JUMPDEST POP SELFBALANCE ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20696E76616C696420696E70757420616D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0E DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP3 POP SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF60 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0xF86 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF9A DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xFA6 DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST SWAP5 POP PUSH2 0xFC9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP4 DUP4 PUSH2 0x19FE JUMP JUMPDEST POP POP DUP1 PUSH2 0xFD5 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEE DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1002 DUP5 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD SWAP1 SWAP3 ADD ADD DUP5 MSTORE PUSH1 0x40 MLOAD PUSH32 0x627DD56A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 SWAP3 POP SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x627DD56A SWAP1 PUSH2 0x1153 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x210A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BC DUP5 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1264 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 PUSH2 0x128A DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x129E DUP8 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x12AA DUP2 DUP7 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP DUP1 PUSH2 0x1371 SWAP1 PUSH2 0x22CB JUMP JUMPDEST SWAP1 POP PUSH2 0x126D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138A DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x139E DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x145F SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 PUSH2 0x148B DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x149F DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xFFFF DUP1 DUP5 AND DUP9 MUL DIV PUSH1 0x64 DUP4 ADD DUP2 SWAP1 MSTORE SWAP7 DUP8 SWAP1 SUB SWAP7 SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x146E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1586 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x159A DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4FFE34DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x4FFE34DB SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x162B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x2348 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xDF23B45B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDF23B45B SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17DF SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x17E9 SWAP2 SWAP1 PUSH2 0x216C JUMP JUMPDEST PUSH2 0x17F3 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1899 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18AD DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1945 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1969 SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1AD2 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1B35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xF47 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x1A50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B97 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1AD2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x2427 JUMP JUMPDEST PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1C50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1D13 SWAP2 SWAP1 PUSH2 0x20A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D50 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D66 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1D71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E04 JUMPI DUP3 MLOAD PUSH2 0x1DFD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1DFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST POP DUP2 PUSH2 0x1C50 JUMP JUMPDEST PUSH2 0x1C50 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x1E19 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1ECD JUMPI PUSH2 0x1ECD PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F13 PUSH2 0x1E72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1F70 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1F87 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1F9E DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC6 DUP10 DUP3 DUP11 ADD PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x1FFB DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2012 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2029 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x2040 DUP2 PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2068 DUP12 DUP3 DUP13 ADD PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2093 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x207B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF47 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20B6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2078 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20D8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x211D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217F PUSH2 0x213D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2196 JUMPI PUSH2 0x2196 PUSH2 0x213D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21DC DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP3 POP PUSH2 0x21EA PUSH1 0x20 DUP6 ADD PUSH2 0x219B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2246 JUMPI PUSH2 0x2246 PUSH2 0x213D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2281 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x22C1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x20C0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x22FD JUMPI PUSH2 0x22FD PUSH2 0x213D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x237D JUMPI PUSH2 0x237D PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x2389 DUP4 PUSH2 0x2328 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x2397 PUSH1 0x20 DUP5 ADD PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x21B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23F0 JUMPI PUSH2 0x23F0 PUSH2 0x1E72 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x23FC DUP4 PUSH2 0x23A3 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x240A PUSH1 0x20 DUP5 ADD PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x241B PUSH1 0x40 DUP5 ADD PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x211D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB1 DELEGATECALL 0xDC LOG4 0x2A CALL PUSH21 0xE67447A8C123DBB05C58E628EF14BF7157E50E7784 SHR ADDMOD 0xAC PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"485:13979:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:308;;;;;;:::i;:::-;;:::i;:::-;;;2171:25:15;;;2159:2;2144:18;1296:308:7;;;;;;;;581:42;;;;;;;;;;;;;;;;;;2408::15;2396:55;;;2378:74;;2366:2;2351:18;581:42:7;2207:251:15;2103:560:7;;;;;;:::i;:::-;;:::i;1296:308::-;1491:17;693:8;;705:1;693:13;685:50;;;;;;;3765:2:15;685:50:7;;;3747:21:15;3804:2;3784:18;;;3777:30;3843:26;3823:18;;;3816:54;3887:18;;685:50:7;;;;;;;;;755:1;744:8;:12;1524:74:::1;1545:7:::0;1554:8;1564;1574:12;1588:2;1592:5;1524:20:::1;:74::i;:::-;786:1:::0;775:8;:12;1517:81;1296:308;-1:-1:-1;;;;;;;1296:308:7:o;2103:560::-;2386:17;693:8;;705:1;693:13;685:50;;;;;;;3765:2:15;685:50:7;;;3747:21:15;3804:2;3784:18;;;3777:30;3843:26;3823:18;;;3816:54;3887:18;;685:50:7;3563:348:15;685:50:7;755:1;744:8;:12;;;2455:52:::1;::::0;744:8;;2455:20:::1;::::0;::::1;::::0;2483:19;;744:8;2455:52;744:8;2455:52;2483:19;2455:20;:52:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:95;;;;2522:7;2555:11;2538:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;2514:55;;;;;;;;;;;;;;:::i;:::-;;2583:74;2604:7;2613:8;2623;2633:12;2647:2;2651:5;2583:20;:74::i;:::-;786:1:::0;775:8;:12;2576:81;2103:560;-1:-1:-1;;;;;;;;;;;2103:560:7:o;2994:2296::-;3183:17;;;3264:26;;;361:42;3264:26;:89;;3323:30;;;;;:26;2396:55:15;;;3323:30:7;;;2378:74:15;3323:26:7;;;;;2351:18:15;;3323:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3264:89;;;3309:2;3301:19;;;3264:89;215:4:6;209:11;;241:15;;;228:29;;;265:20;;;307:11;;350:17;;345:2;333:15;;326:42;3239:114:7;;-1:-1:-1;3417:1538:7;522:13:6;;571:2;559:15;;553:22;-1:-1:-1;3417:1538:7;;;3454:17;3474:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;3474:18:7;3454:38;;3519:2;3505:11;:16;;;3501:1447;;;3538:11;:17;;3553:2;3538:17;3534:745;;;3568:23;3584:6;3568:15;:23::i;:::-;;3501:1447;;3534:745;3638:11;:16;;3653:1;3638:16;3634:645;;;3667:29;3689:6;3667:21;:29::i;:::-;3501:1447;;3634:645;3769:11;:16;;3784:1;3769:16;3765:514;;;3813:39;3836:6;3844:7;3813:22;:39::i;:::-;3798:54;;;;:::i;:::-;;;3501:1447;;3765:514;3896:11;:16;;3911:1;3896:16;3892:387;;;3940:37;3970:6;3940:29;:37::i;3892:387::-;4046:11;:16;;4061:1;4046:16;4042:237;;;4076:24;4089:2;4093:6;4076:12;:24::i;4042:237::-;4120:11;:16;;4135:1;4120:16;4116:163;;;4164:45;4193:6;4201:7;4164:28;:45::i;4116:163::-;4249:30;;;;;6159:2:15;4249:30:7;;;6141:21:15;6198:2;6178:18;;;6171:30;6237:22;6217:18;;;6210:50;6277:18;;4249:30:7;5957:344:15;3501:1447:7;4313:2;4299:11;:16;;;4295:653;;;4332:11;:17;;4347:2;4332:17;4328:251;;;4351:44;4379:6;4387:7;4351:27;:44::i;4328:251::-;4415:11;:17;;4430:2;4415:17;4411:168;;;4434:19;4446:6;4434:11;:19::i;4411:168::-;4473:11;:17;;4488:2;4473:17;4469:110;;;4492:41;4517:6;4525:7;4492:24;:41::i;4295:653::-;4610:11;:17;;4625:2;4610:17;4606:332;;;4644:38;4666:6;4674:7;4644:21;:38::i;4606:332::-;4702:11;:17;;4717:2;4702:17;4698:240;;;4721:31;4745:6;4721:23;:31::i;4698:240::-;4772:11;:17;;4787:2;4772:17;4768:170;;;4791:32;4816:6;4791:24;:32::i;4768:170::-;4843:11;:17;;4858:2;4843:17;4839:99;;;4862:30;4885:6;4862:22;:30::i;4839:99::-;3445:1510;3417:1538;;;4986:8;4971:11;:23;4963:56;;;;;;;6508:2:15;4963:56:7;;;6490:21:15;6547:2;6527:18;;;6520:30;6586:22;6566:18;;;6559:50;6626:18;;4963:56:7;6306:344:15;4963:56:7;5026:20;5049:26;;;361:42;5049:26;:89;;5108:30;;;;;:26;2396:55:15;;;5108:30:7;;;2378:74:15;5108:26:7;;;;;2351:18:15;;5108:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5049:89;;;5094:2;5086:19;;;5049:89;5026:112;-1:-1:-1;5169:29:7;5186:12;5169:14;:29;:::i;:::-;5153:12;:45;;5145:89;;;;;;;6857:2:15;5145:89:7;;;6839:21:15;6896:2;6876:18;;;6869:30;6935:33;6915:18;;;6908:61;6986:18;;5145:89:7;6655:355:15;5145:89:7;5255:29;5270:14;5255:12;:29;:::i;:::-;5243:41;2994:2296;-1:-1:-1;;;;;;;;;;;2994:2296:7:o;7732:861::-;7790:17;7816:12;7831:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7831:20:7;7816:35;;7858:15;7876:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7876:20:7;7858:38;;7903:15;7921:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;7921:18:7;7903:36;;7946:10;7959:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7959:20:7;7946:33;;7989:10;8001;8032:4;8017:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7988:63;;;;;;;;;8071:1;8066:2;:6;:16;;;;;8081:1;8076:2;:6;8066:16;8058:48;;;;;;;7995:2:15;8058:48:7;;;7977:21:15;8034:2;8014:18;;;8007:30;8073:21;8053:18;;;8046:49;8112:18;;8058:48:7;7793:343:15;8058:48:7;8114:17;8133:18;8155:9;:14;;8168:1;8155:14;:36;;8184:2;8188;8155:36;;;8173:2;8177;8155:36;8219:31;;;;;:25;2396:55:15;;;8219:31:7;;;2378:74:15;8113:78:7;;-1:-1:-1;8113:78:7;;-1:-1:-1;8200:16:7;;8113:78;;8219:25;;;;;;2351:18:15;;8219:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;8200:62;-1:-1:-1;8269:23:7;8295:14;8200:62;8306:3;8295:14;:::i;:::-;8269:40;-1:-1:-1;8269:40:7;8362:16;:9;8374:4;8362:16;:::i;:::-;:34;;;;:::i;:::-;8329:28;8347:10;8329:15;:28;:::i;:::-;8328:69;;;;:::i;:::-;8316:81;;8405:18;8425;8447:9;:14;;8460:1;8447:14;:66;;8491:9;8510:1;8447:66;;;8473:1;8477:9;8447:66;8574:12;;;8584:1;8574:12;;;;;;;;;8520:67;;;;8404:109;;-1:-1:-1;8404:109:7;-1:-1:-1;8520:25:7;;;;;;:67;;8404:109;;;;8570:2;;8520:67;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7809:784;;;;;;;;;;;;7732:861;;;:::o;12422:555::-;12484:13;12500:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;12500:20:7;12484:36;;12527:9;12539:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;12539:18:7;12586:38;;;;;12618:4;12586:38;;;2378:74:15;12527:30:7;;-1:-1:-1;12564:19:7;;12634:1;;12586:23;;;;;;2351:18:15;;12586:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;12564:71;;12699:9;12694:271;12718:3;12714:7;;:1;:7;12694:271;;;12739:10;12752:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;12752:20:7;12739:33;;12783:12;12798:19;:6;940:13:6;;977:1;968:11;994:10;;1012:19;;994:10;833:210;12798:19:7;12869:5;12846:19;;;;;12845:29;12885:21;;;;;12783:34;;-1:-1:-1;12917:38:7;:26;;;12944:2;12845:29;12917:26;:38::i;:::-;12728:237;;;12723:3;;;;;12694:271;;;;12477:500;;;12422:555;:::o;9008:392::-;9088:19;9116:9;9128:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;9128:18:7;9116:30;;9167:1;9153:15;;9180:9;9175:220;9199:3;9195:7;;:1;:7;9175:220;;;9218:10;9231:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;9231:20:7;9218:33;;9260:14;9277:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;9277:17:7;9260:34;-1:-1:-1;9303:21:7;9260:34;9303:21;;:::i;:::-;;-1:-1:-1;9333:54:7;:30;;;9364:10;9376:2;9380:6;9333:30;:54::i;:::-;9209:186;;9204:3;;;;:::i;:::-;;;9175:220;;;;9109:291;9008:392;;;;:::o;10593:552::-;10665:19;10693:13;10709:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;10709:20:7;10693:36;;10742:5;10736:20;;;10764:21;10736:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10795:9;10807:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;10807:18:7;10795:30;;10846:1;10832:15;;10859:9;10854:204;10878:3;10874:7;;:1;:7;10854:204;;;10897:10;10910:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;10910:20:7;10897:33;;10939:14;10956:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;10956:17:7;10939:34;-1:-1:-1;10982:21:7;10939:34;10982:21;;:::i;:::-;;-1:-1:-1;11012:38:7;:26;;;11039:2;11043:6;11012:26;:38::i;:::-;10888:170;;10883:3;;;;:::i;:::-;;;10854:204;;;-1:-1:-1;11072:21:7;:26;11064:75;;;;;;;9731:2:15;11064:75:7;;;9713:21:15;9770:2;9750:18;;;9743:30;9809:34;9789:18;;;9782:62;9880:6;9860:18;;;9853:34;9904:19;;11064:75:7;9529:400:15;11064:75:7;10686:459;;10593:552;;;:::o;14181:280::-;14252:13;14268:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;14268:20:7;14318:38;;;;;14350:4;14318:38;;;2378:74:15;14252:36:7;;-1:-1:-1;14295:21:7;;;;;;14366:1;;14295:21;;14318:23;;2351:18:15;;14318:38:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;14295:73;;;;;;;;;;;;;2171:25:15;;2159:2;2144:18;;2025:177;14295:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14406:49:7;;:26;;;;-1:-1:-1;14433:21:7;14406:49;;;;;-1:-1:-1;14433:21:7;14406:49;;;;14433:21;14406:26;:49;;;;;;;;;;;;;;;;;;;;;14245:216;14181:280;;:::o;9818:382::-;9904:19;9932:9;9944:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;9944:18:7;9932:30;;9983:1;9969:15;;9996:9;9991:204;10015:3;10011:7;;:1;:7;9991:204;;;10034:10;10047:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;10047:20:7;10034:33;;10076:14;10093:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;10093:17:7;10076:34;-1:-1:-1;10119:21:7;10076:34;10119:21;;:::i;:::-;;-1:-1:-1;10149:38:7;:26;;;10176:2;10180:6;10149:26;:38::i;:::-;10025:170;;10020:3;;;;:::i;:::-;;;9991:204;;5623:227;5706:10;5719:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;5719:20:7;5706:33;;5746:14;5763:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;5763:17:7;5787:57;;;;;:16;10280:15:15;;;5787:57:7;;;10262:34:15;5787:8:7;:16;;10312:18:15;;;10305:43;;;10384:15;;;10364:18;;;10357:43;10416:18;;;10409:34;;;5842:1:7;10459:19:15;;;10452:35;5746:34:7;;-1:-1:-1;5787:16:7;;10173:19:15;;5787:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5699:151;;5623:227;;:::o;7395:175::-;7447:12;7462:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7462:20:7;2031:13:6;;2068:2;2059:12;;;2093:10;;2126:16;;;;2111:32;;7538:26:7;;;;;7447:35;;-1:-1:-1;2059:12:6;7538:16:7;;;;;;:26;;2059:12:6;;7538:26:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6586:221::-;6666:10;6679:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;6679:20:7;6666:33;;6706:14;6723:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;6723:17:7;6747:54;;;;;:17;10280:15:15;;;6747:54:7;;;10262:34:15;6780:4:7;10312:18:15;;;10305:43;10384:15;;;10364:18;;;10357:43;10416:18;;;10409:34;;;6799:1:7;10459:19:15;;;10452:35;6706:34:7;;-1:-1:-1;6747:8:7;:17;;;;;;10173:19:15;;6747:54:7;9934:559:15;11574:382:7;11653:19;11681:9;11693:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;11693:18:7;11681:30;;11732:1;11718:15;;11745:9;11740:211;11764:3;11760:7;;:1;:7;11740:211;;;11783:10;11796:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;11796:20:7;11783:33;;11825:13;11841:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;11841:17:7;11825:33;-1:-1:-1;11867:20:7;11825:33;11867:20;;:::i;:::-;11896:47;;;;;:17;11281:15:15;;;11896:47:7;;;11263:34:15;11921:10:7;11313:18:15;;;11306:43;11385:15;;;11365:18;;;11358:43;11417:18;;;11410:34;;;11867:20:7;;-1:-1:-1;11896:8:7;:17;;;;;;11174:19:15;;11896:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11774:177;;11769:3;;;;:::i;:::-;;;11740:211;;13452:572;13516:13;13532:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;13532:20:7;13516:36;;13559:9;13571:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;13571:18:7;13618:40;;;;;:18;11708:15:15;;;13618:40:7;;;11690:34:15;13652:4:7;11740:18:15;;;11733:43;13559:30:7;;-1:-1:-1;;;13668:1:7;;13618:8;:18;;;;;;11602::15;;13618:40:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;;;:::i;:::-;13596:73;;13733:9;13728:284;13752:3;13748:7;;:1;:7;13728:284;;;13773:10;13786:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;13786:20:7;13773:33;;13817:12;13832:19;:6;940:13:6;;977:1;968:11;994:10;;1012:19;;994:10;833:210;13832:19:7;13951:51;;;;;:17;11281:15:15;;;13951:51:7;;;11263:34:15;13984:4:7;11313:18:15;;;11306:43;11385:15;;;11365:18;;;11358:43;13903:5:7;13880:19;;;;;13879:29;11417:18:15;;;11410:34;;;13919:21:7;;;;;13817:34;;-1:-1:-1;13951:8:7;:17;;;;11174:19:15;;13951:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13762:250;;;13757:3;;;;;13728:284;;6016:365;6081:10;6094:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;6094:20:7;6081:33;;6121:13;6137:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;6137:20:7;6281:22;;;;;:15;2396:55:15;;;6281:22:7;;;2378:74:15;6121:36:7;;-1:-1:-1;6166:14:7;;6281:8;:15;;;;2351:18:15;;6281:22:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;6235:28;;;;;:21;2396:55:15;;;6235:28:7;;;2378:74:15;6183:128:7;;;;;6235:8;:21;;;;2351:18:15;;6235:28:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;;;6183:42;;;;;:23;6215:8;2396:55:15;;6183:42:7;;;2378:74:15;6183:88:7;;;;;:23;;;;;2351:18:15;;6183:42:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:88;;;;:::i;:::-;:128;;;;:::i;:::-;6318:57;;;;;:16;10280:15:15;;;6318:57:7;;;10262:34:15;6318:8:7;:16;;10312:18:15;;;10305:43;;;10384:15;;;10364:18;;;10357:43;10416:18;;;10409:34;;;6373:1:7;10459:19:15;;;10452:35;6166:145:7;;-1:-1:-1;6318:16:7;;10173:19:15;;6318:57:7;9934:559:15;6979:270:7;7042:13;7058:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7058:20:7;7042:36;;7085:10;7098:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7098:20:7;7142:40;;;;;:18;11708:15:15;;;7142:40:7;;;11690:34:15;7176:4:7;11740:18:15;;;11733:43;7085:33:7;;-1:-1:-1;7125:14:7;;7142:8;:18;;;;11602::15;;7142:40:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7189:54;;;;;:17;10280:15:15;;;7189:54:7;;;10262:34:15;7222:4:7;10312:18:15;;;10305:43;10384:15;;;10364:18;;;10357:43;7233:1:7;10416:18:15;;;10409:34;10459:19;;;10452:35;;;7125:57:7;;-1:-1:-1;7189:8:7;:17;;;;;;10173:19:15;;7189:54:7;9934:559:15;763:205:3;902:58;;14125:42:15;14113:55;;902:58:3;;;14095:74:15;14185:18;;;14178:34;;;875:86:3;;895:5;;925:23;;14068:18:15;;902:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;974:241::-;1139:68;;14435:42:15;14504:15;;;1139:68:3;;;14486:34:15;14556:15;;14536:18;;;14529:43;14588:18;;;14581:34;;;1112:96:3;;1132:5;;1162:27;;14398:18:15;;1139:68:3;14223:398:15;3747:706:3;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:3;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;15110:2:15;4351:85:3;;;15092:21:15;15149:2;15129:18;;;15122:30;15188:34;15168:18;;;15161:62;15259:12;15239:18;;;15232:40;15289:19;;4351:85:3;14908:406:15;3873:223:4;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:4:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;15521:2:15;5149:81:4;;;15503:21:15;15560:2;15540:18;;;15533:30;15599:34;15579:18;;;15572:62;15670:8;15650:18;;;15643:36;15696:19;;5149:81:4;15319:402:15;5149:81:4;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:4:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;1465:19;;;;7908:60;;;;;;;15928:2:15;7908:60:4;;;15910:21:15;15967:2;15947:18;;;15940:30;16006:31;15986:18;;;15979:59;16055:18;;7908:60:4;15726:353:15;7908:60:4;-1:-1:-1;8003:10:4;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;14:154:15:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:184::-;225:77;222:1;215:88;322:4;319:1;312:15;346:4;343:1;336:15;362:777;404:5;457:3;450:4;442:6;438:17;434:27;424:55;;475:1;472;465:12;424:55;511:6;498:20;537:18;574:2;570;567:10;564:36;;;580:18;;:::i;:::-;714:2;708:9;776:4;768:13;;619:66;764:22;;;788:2;760:31;756:40;744:53;;;812:18;;;832:22;;;809:46;806:72;;;858:18;;:::i;:::-;898:10;894:2;887:22;933:2;925:6;918:18;979:3;972:4;967:2;959:6;955:15;951:26;948:35;945:55;;;996:1;993;986:12;945:55;1060:2;1053:4;1045:6;1041:17;1034:4;1026:6;1022:17;1009:54;1107:1;1100:4;1095:2;1087:6;1083:15;1079:26;1072:37;1127:6;1118:15;;;;;;362:777;;;;:::o;1144:876::-;1257:6;1265;1273;1281;1289;1297;1350:3;1338:9;1329:7;1325:23;1321:33;1318:53;;;1367:1;1364;1357:12;1318:53;1406:9;1393:23;1425:31;1450:5;1425:31;:::i;:::-;1475:5;-1:-1:-1;1527:2:15;1512:18;;1499:32;;-1:-1:-1;1583:2:15;1568:18;;1555:32;1596:33;1555:32;1596:33;:::i;:::-;1648:7;-1:-1:-1;1702:2:15;1687:18;;1674:32;;-1:-1:-1;1758:3:15;1743:19;;1730:33;1772;1730;1772;:::i;:::-;1824:7;-1:-1:-1;1882:3:15;1867:19;;1854:33;1910:18;1899:30;;1896:50;;;1942:1;1939;1932:12;1896:50;1965:49;2006:7;1997:6;1986:9;1982:22;1965:49;:::i;:::-;1955:59;;;1144:876;;;;;;;;:::o;2463:1095::-;2602:6;2610;2618;2626;2634;2642;2650;2658;2711:3;2699:9;2690:7;2686:23;2682:33;2679:53;;;2728:1;2725;2718:12;2679:53;2767:9;2754:23;2786:31;2811:5;2786:31;:::i;:::-;2836:5;-1:-1:-1;2888:2:15;2873:18;;2860:32;;-1:-1:-1;2944:2:15;2929:18;;2916:32;2957:33;2916:32;2957:33;:::i;:::-;3009:7;-1:-1:-1;3063:2:15;3048:18;;3035:32;;-1:-1:-1;3119:3:15;3104:19;;3091:33;3133;3091;3133;:::i;:::-;3185:7;-1:-1:-1;3239:3:15;3224:19;;3211:33;;-1:-1:-1;3296:3:15;3281:19;;3268:33;3310;3268;3310;:::i;:::-;3362:7;-1:-1:-1;3420:3:15;3405:19;;3392:33;3448:18;3437:30;;3434:50;;;3480:1;3477;3470:12;3434:50;3503:49;3544:7;3535:6;3524:9;3520:22;3503:49;:::i;:::-;3493:59;;;2463:1095;;;;;;;;;;;:::o;4126:258::-;4198:1;4208:113;4222:6;4219:1;4216:13;4208:113;;;4298:11;;;4292:18;4279:11;;;4272:39;4244:2;4237:10;4208:113;;;4339:6;4336:1;4333:13;4330:48;;;-1:-1:-1;;4374:1:15;4356:16;;4349:27;4126:258::o;4389:274::-;4518:3;4556:6;4550:13;4572:53;4618:6;4613:3;4606:4;4598:6;4594:17;4572:53;:::i;:::-;4641:16;;;;;4389:274;-1:-1:-1;;4389:274:15:o;4668:317::-;4710:3;4748:5;4742:12;4775:6;4770:3;4763:19;4791:63;4847:6;4840:4;4835:3;4831:14;4824:4;4817:5;4813:16;4791:63;:::i;:::-;4899:2;4887:15;4904:66;4883:88;4874:98;;;;4974:4;4870:109;;4668:317;-1:-1:-1;;4668:317:15:o;4990:220::-;5139:2;5128:9;5121:21;5102:4;5159:45;5200:2;5189:9;5185:18;5177:6;5159:45;:::i;:::-;5151:53;4990:220;-1:-1:-1;;;4990:220:15:o;5446:184::-;5516:6;5569:2;5557:9;5548:7;5544:23;5540:32;5537:52;;;5585:1;5582;5575:12;5537:52;-1:-1:-1;5608:16:15;;5446:184;-1:-1:-1;5446:184:15:o;5635:::-;5687:77;5684:1;5677:88;5784:4;5781:1;5774:15;5808:4;5805:1;5798:15;5824:128;5864:3;5895:1;5891:6;5888:1;5885:13;5882:39;;;5901:18;;:::i;:::-;-1:-1:-1;5937:9:15;;5824:128::o;7015:125::-;7055:4;7083:1;7080;7077:8;7074:34;;;7088:18;;:::i;:::-;-1:-1:-1;7125:9:15;;7015:125::o;7145:188::-;7224:13;;7277:30;7266:42;;7256:53;;7246:81;;7323:1;7320;7313:12;7246:81;7145:188;;;:::o;7338:450::-;7425:6;7433;7441;7494:2;7482:9;7473:7;7469:23;7465:32;7462:52;;;7510:1;7507;7500:12;7462:52;7533:40;7563:9;7533:40;:::i;:::-;7523:50;;7592:49;7637:2;7626:9;7622:18;7592:49;:::i;:::-;7582:59;;7684:2;7673:9;7669:18;7663:25;7728:10;7721:5;7717:22;7710:5;7707:33;7697:61;;7754:1;7751;7744:12;7697:61;7777:5;7767:15;;;7338:450;;;;;:::o;8141:228::-;8181:7;8307:1;8239:66;8235:74;8232:1;8229:81;8224:1;8217:9;8210:17;8206:105;8203:131;;;8314:18;;:::i;:::-;-1:-1:-1;8354:9:15;;8141:228::o;8563:274::-;8603:1;8629;8619:189;;8664:77;8661:1;8654:88;8765:4;8762:1;8755:15;8793:4;8790:1;8783:15;8619:189;-1:-1:-1;8822:9:15;;8563:274::o;8842:482::-;9073:6;9062:9;9055:25;9116:6;9111:2;9100:9;9096:18;9089:34;9171:42;9163:6;9159:55;9154:2;9143:9;9139:18;9132:83;9251:3;9246:2;9235:9;9231:18;9224:31;9036:4;9272:46;9313:3;9302:9;9298:19;9290:6;9272:46;:::i;:::-;9264:54;8842:482;-1:-1:-1;;;;;;8842:482:15:o;9329:195::-;9368:3;9399:66;9392:5;9389:77;9386:103;;;9469:18;;:::i;:::-;-1:-1:-1;9516:1:15;9505:13;;9329:195::o;10498:245::-;10577:6;10585;10638:2;10626:9;10617:7;10613:23;10609:32;10606:52;;;10654:1;10651;10644:12;10606:52;-1:-1:-1;;10677:16:15;;10733:2;10718:18;;;10712:25;10677:16;;10712:25;;-1:-1:-1;10498:245:15:o;11787:192::-;11866:13;;11919:34;11908:46;;11898:57;;11888:85;;11969:1;11966;11959:12;11984:548;12078:6;12131:2;12119:9;12110:7;12106:23;12102:32;12099:52;;;12147:1;12144;12137:12;12099:52;12180:2;12174:9;12222:2;12214:6;12210:15;12291:6;12279:10;12276:22;12255:18;12243:10;12240:34;12237:62;12234:88;;;12302:18;;:::i;:::-;12338:2;12331:22;12377:40;12407:9;12377:40;:::i;:::-;12369:6;12362:56;12451:49;12496:2;12485:9;12481:18;12451:49;:::i;:::-;12446:2;12434:15;;12427:74;12438:6;11984:548;-1:-1:-1;;;11984:548:15:o;12537:175::-;12615:13;;12668:18;12657:30;;12647:41;;12637:69;;12702:1;12699;12692:12;12717:635;12817:6;12870:2;12858:9;12849:7;12845:23;12841:32;12838:52;;;12886:1;12883;12876:12;12838:52;12919:2;12913:9;12961:2;12953:6;12949:15;13030:6;13018:10;13015:22;12994:18;12982:10;12979:34;12976:62;12973:88;;;13041:18;;:::i;:::-;13077:2;13070:22;13116:39;13145:9;13116:39;:::i;:::-;13108:6;13101:55;13189:48;13233:2;13222:9;13218:18;13189:48;:::i;:::-;13184:2;13176:6;13172:15;13165:73;13271:49;13316:2;13305:9;13301:18;13271:49;:::i;:::-;13266:2;13254:15;;13247:74;13258:6;12717:635;-1:-1:-1;;;12717:635:15:o;14626:277::-;14693:6;14746:2;14734:9;14725:7;14721:23;14717:32;14714:52;;;14762:1;14759;14752:12;14714:52;14794:9;14788:16;14847:5;14840:13;14833:21;14826:5;14823:32;14813:60;;14869:1;14866;14859:12"},"gasEstimates":{"creation":{"codeDepositCost":"1868600","executionCost":"infinite","totalCost":"infinite"},"external":{"bentoBox()":"infinite","processRoute(address,uint256,address,uint256,address,bytes)":"infinite","transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":"infinite"},"internal":{"bentoDepositAllFromBento(uint256)":"infinite","bentoDepositAmountFromBento(uint256,address)":"infinite","bentoWithdrawAllFromRP(uint256)":"infinite","bentoWithdrawShareFromRP(uint256,address)":"infinite","distributeBentoPortions(uint256)":"infinite","distributeBentoShares(uint256,address)":"infinite","distributeERC20Amounts(uint256,address)":"infinite","distributeERC20AmountsFromRP(uint256,address)":"infinite","distributeERC20Shares(uint256)":"infinite","processRouteInternal(address,uint256,address,uint256,address,bytes memory)":"infinite","swapTrident(uint256)":"infinite","swapUniswapPool(uint256)":"infinite","unwrapNative(address,uint256)":"infinite","wrapAndDistributeERC20Amounts(uint256)":"infinite"}},"methodIdentifiers":{"bentoBox()":"6b2ace87","processRoute(address,uint256,address,uint256,address,bytes)":"2646478b","transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":"93b3774c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bentoBox\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bentoBox\",\"outputs\":[{\"internalType\":\"contract IBentoBoxMinimal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"route\",\"type\":\"bytes\"}],\"name\":\"processRoute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"transferValueTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountValueTransfer\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"route\",\"type\":\"bytes\"}],\"name\":\"transferValueAndprocessRoute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Okavango\",\"kind\":\"dev\",\"methods\":{\"processRoute(address,uint256,address,uint256,address,bytes)\":{\"params\":{\"amountIn\":\"Amount of the input token\",\"amountOutMin\":\"Minimum amount of the output token\",\"tokenIn\":\"Address of the input token\",\"tokenOut\":\"Address of the output token\"},\"returns\":{\"amountOut\":\"Actual amount of the output token\"}},\"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)\":{\"params\":{\"amountIn\":\"Amount of the input token\",\"amountOutMin\":\"Minimum amount of the output token\",\"amountValueTransfer\":\"How much value to transfer\",\"tokenIn\":\"Address of the input token\",\"tokenOut\":\"Address of the output token\",\"transferValueTo\":\"Address where the value should be transferred\"},\"returns\":{\"amountOut\":\"Actual amount of the output token\"}}},\"title\":\"A route processor for the Sushi Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processRoute(address,uint256,address,uint256,address,bytes)\":{\"notice\":\"Processes the route generated off-chain. Has a lock\"},\"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)\":{\"notice\":\"Transfers some value to <transferValueTo> and then processes the route\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RouteProcessor.sol\":\"RouteProcessor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/InputStream.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nlibrary InputStream {\\r\\n  function createStream(bytes memory data) internal pure returns (uint256 stream) {\\r\\n    assembly {\\r\\n      stream := mload(0x40)\\r\\n      mstore(0x40, add(stream, 64))\\r\\n      mstore(stream, data)\\r\\n      let length := mload(data)\\r\\n      mstore(add(stream, 32), add(data, length))\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function isNotEmpty(uint256 stream) internal pure returns (bool) {\\r\\n    uint256 pos;\\r\\n    uint256 finish;\\r\\n    assembly {\\r\\n      pos := mload(stream)\\r\\n      finish := mload(add(stream, 32))\\r\\n    }\\r\\n    return pos < finish;\\r\\n  }\\r\\n\\r\\n  function readUint8(uint256 stream) internal pure returns (uint8 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 1)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint16(uint256 stream) internal pure returns (uint16 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 2)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint32(uint256 stream) internal pure returns (uint32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 4)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint(uint256 stream) internal pure returns (uint256 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes32(uint256 stream) internal pure returns (bytes32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readAddress(uint256 stream) internal pure returns (address res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 20)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes(uint256 stream) internal pure returns (bytes memory res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      res := add(pos, 32)\\r\\n      let length := mload(res)\\r\\n      mstore(stream, add(res, length))\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x84844b6c074e12ef158213777119a6456f4ed97b30d36207a5f2bf0d45b3bc4a\",\"license\":\"UNLICENSED\"},\"contracts/RouteProcessor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport '../interfaces/IUniswapV2Pair.sol';\\r\\nimport '../interfaces/IBentoBoxMinimal.sol';\\r\\nimport '../interfaces/IPool.sol';\\r\\nimport '../interfaces/IWETH.sol';\\r\\nimport './InputStream.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\r\\n\\r\\naddress constant NATIVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n/// @title A route processor for the Sushi Aggregator\\r\\n/// @author Okavango\\r\\ncontract RouteProcessor {\\r\\n  using SafeERC20 for IERC20;\\r\\n  using InputStream for uint256;\\r\\n\\r\\n  IBentoBoxMinimal public immutable bentoBox;\\r\\n\\r\\n  uint private unlocked = 1;\\r\\n  modifier lock() {\\r\\n      require(unlocked == 1, 'RouteProcessor is locked');\\r\\n      unlocked = 2;\\r\\n      _;\\r\\n      unlocked = 1;\\r\\n  }\\r\\n\\r\\n  constructor(address _bentoBox) {\\r\\n    bentoBox = IBentoBoxMinimal(_bentoBox);\\r\\n  }\\r\\n\\r\\n  /// @notice For native unwrapping\\r\\n  receive() external payable {}\\r\\n\\r\\n  /// @notice Processes the route generated off-chain. Has a lock\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function processRoute(\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) external payable lock returns (uint256 amountOut) {\\r\\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\\r\\n  }\\r\\n\\r\\n  /// @notice Transfers some value to <transferValueTo> and then processes the route\\r\\n  /// @param transferValueTo Address where the value should be transferred\\r\\n  /// @param amountValueTransfer How much value to transfer\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function transferValueAndprocessRoute(\\r\\n    address payable transferValueTo,\\r\\n    uint256 amountValueTransfer,\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) external payable lock returns (uint256 amountOut) {\\r\\n    (bool success, bytes memory returnBytes) = transferValueTo.call{value: amountValueTransfer}('');\\r\\n    require(success, string(abi.encodePacked(returnBytes)));\\r\\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\\r\\n  }\\r\\n\\r\\n  /// @notice Processes the route generated off-chain\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function processRouteInternal(\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) private returns (uint256 amountOut) {\\r\\n    uint256 amountInAcc = 0;\\r\\n    uint256 balanceInitial = tokenOut == NATIVE_ADDRESS ? \\r\\n      address(to).balance : IERC20(tokenOut).balanceOf(to);\\r\\n\\r\\n    uint256 stream = InputStream.createStream(route);\\r\\n    while (stream.isNotEmpty()) {\\r\\n      uint8 commandCode = stream.readUint8();\\r\\n      if (commandCode < 20) {\\r\\n        if (commandCode == 10)\\r\\n          swapUniswapPool(stream); // Sushi/Uniswap pool swap\\r\\n        else if (commandCode == 4)\\r\\n          distributeERC20Shares(stream); // distribute ERC20 tokens from this router to pools\\r\\n        else if (commandCode == 3)\\r\\n          amountInAcc += distributeERC20Amounts(stream, tokenIn); // initial distribution\\r\\n        else if (commandCode == 5)\\r\\n          amountInAcc += wrapAndDistributeERC20Amounts(stream); // wrap natives and initial distribution        \\r\\n        else if (commandCode == 6) \\r\\n          unwrapNative(to, stream);\\r\\n        else if (commandCode == 7)\\r\\n          amountInAcc += distributeERC20AmountsFromRP(stream, tokenIn); // initial distribution\\r\\n        else revert('Unknown command code');\\r\\n      } else if (commandCode < 24) {\\r\\n        if (commandCode == 20) bentoDepositAmountFromBento(stream, tokenIn);\\r\\n        else if (commandCode == 21) swapTrident(stream);\\r\\n        else if (commandCode == 23) bentoWithdrawShareFromRP(stream, tokenIn);\\r\\n        else revert('Unknown command code');\\r\\n      } else {\\r\\n        if (commandCode == 24) amountInAcc += distributeBentoShares(stream, tokenIn);\\r\\n        else if (commandCode == 25) distributeBentoPortions(stream);\\r\\n        else if (commandCode == 26) bentoDepositAllFromBento(stream);\\r\\n        else if (commandCode == 27) bentoWithdrawAllFromRP(stream);\\r\\n        else revert('Unknown command code');\\r\\n      }\\r\\n    }\\r\\n\\r\\n    require(amountInAcc == amountIn, 'Wrong amountIn value');\\r\\n    uint256 balanceFinal = tokenOut == NATIVE_ADDRESS ? \\r\\n      address(to).balance : IERC20(tokenOut).balanceOf(to);\\r\\n    require(balanceFinal >= balanceInitial + amountOutMin, 'Minimal ouput balance violation');\\r\\n\\r\\n    amountOut = balanceFinal - balanceInitial;\\r\\n  }\\r\\n\\r\\n  /// @notice Transfers input tokens sent to BentoBox to a pool\\r\\n  /// @notice Expected to be called for initial liquidity transfer from user to BentoBox, so we know exact amounts\\r\\n  /// @param stream [Pool, Amount]. Pool into which an amount of tokens will be transferred\\r\\n  /// @param token Address of the token to transfer\\r\\n  function bentoDepositAmountFromBento(uint256 stream, address token) private {\\r\\n    address to = stream.readAddress();\\r\\n    uint256 amount = stream.readUint();\\r\\n    bentoBox.deposit(token, address(bentoBox), to, amount, 0);\\r\\n  }\\r\\n\\r\\n  /// @notice Transfers all available input tokens from BentoBox to a pool\\r\\n  /// @param stream [Pool, Token]. Pool into which all tokens will be transferred \\r\\n  function bentoDepositAllFromBento(uint256 stream) private {\\r\\n    address to = stream.readAddress();\\r\\n    address token = stream.readAddress();\\r\\n\\r\\n    uint256 amount = IERC20(token).balanceOf(address(bentoBox)) +\\r\\n      bentoBox.strategyData(token).balance -\\r\\n      bentoBox.totals(token).elastic;\\r\\n    bentoBox.deposit(token, address(bentoBox), to, amount, 0);\\r\\n  }\\r\\n\\r\\n  /// @notice Withdraws BentoBox tokens from BentoBox to an address\\r\\n  /// @param stream [To, Amount]. Destination where an amount of token will be transferred\\r\\n  /// @param token Token to transfer\\r\\n  function bentoWithdrawShareFromRP(uint256 stream, address token) private {\\r\\n    address to = stream.readAddress();\\r\\n    uint256 amount = stream.readUint();\\r\\n    bentoBox.withdraw(token, address(this), to, amount, 0);\\r\\n  }\\r\\n\\r\\n  /// @notice Withdraws all available BentoBox tokens from BentoBox to an address\\r\\n  /// @param stream [Token, To]. Token which will be transferred to a destination\\r\\n  function bentoWithdrawAllFromRP(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    address to = stream.readAddress();\\r\\n    uint256 amount = bentoBox.balanceOf(token, address(this));\\r\\n    bentoBox.withdraw(token, address(this), to, 0, amount);\\r\\n  }\\r\\n\\r\\n  /// @notice Performs a Trident pool swap\\r\\n  /// @param stream [Pool, SwapData]. Pool against a swap defined by SwapData will be executed\\r\\n  function swapTrident(uint256 stream) private {\\r\\n    address pool = stream.readAddress();\\r\\n    bytes memory swapData = stream.readBytes();\\r\\n    IPool(pool).swap(swapData);\\r\\n  }\\r\\n\\r\\n  /// @notice Performs a Sushi/UniswapV2 pool swap\\r\\n  /// @param stream [Pool, TokenIn, Direction, To]\\r\\n  /// @return amountOut Amount of the output token\\r\\n  function swapUniswapPool(uint256 stream) private returns (uint256 amountOut) {\\r\\n    address pool = stream.readAddress();\\r\\n    address tokenIn = stream.readAddress();\\r\\n    uint8 direction = stream.readUint8();\\r\\n    address to = stream.readAddress();\\r\\n\\r\\n    (uint256 r0, uint256 r1, ) = IUniswapV2Pair(pool).getReserves();\\r\\n    require(r0 > 0 && r1 > 0, 'Wrong pool reserves');\\r\\n    (uint256 reserveIn, uint256 reserveOut) = direction == 1 ? (r0, r1) : (r1, r0);\\r\\n\\r\\n    uint256 amountIn = IERC20(tokenIn).balanceOf(pool) - reserveIn;\\r\\n    uint256 amountInWithFee = amountIn * 997;\\r\\n    amountOut = (amountInWithFee * reserveOut) / (reserveIn * 1000 + amountInWithFee);\\r\\n    (uint256 amount0Out, uint256 amount1Out) = direction == 1 ? (uint256(0), amountOut) : (amountOut, uint256(0));\\r\\n    IUniswapV2Pair(pool).swap(amount0Out, amount1Out, to, new bytes(0));\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes input ERC20 tokens from msg.sender to addresses. Tokens should be approved\\r\\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\\r\\n  /// @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\\r\\n  /// @param token Token to distribute\\r\\n  /// @return amountTotal Total amount distributed\\r\\n  function distributeERC20Amounts(uint256 stream, address token) private returns (uint256 amountTotal) {\\r\\n    uint8 num = stream.readUint8();\\r\\n    amountTotal = 0;\\r\\n    for (uint256 i = 0; i < num; ++i) {\\r\\n      address to = stream.readAddress();\\r\\n      uint256 amount = stream.readUint();\\r\\n      amountTotal += amount;\\r\\n      IERC20(token).safeTransferFrom(msg.sender, to, amount);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes input ERC20 tokens from this contract to addresses. Tokens should be approved\\r\\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\\r\\n  /// @param stream [ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\\r\\n  /// @param token Token to distribute\\r\\n  /// @return amountTotal Total amount distributed\\r\\n  function distributeERC20AmountsFromRP(uint256 stream, address token) private returns (uint256 amountTotal) {\\r\\n    uint8 num = stream.readUint8();\\r\\n    amountTotal = 0;\\r\\n    for (uint256 i = 0; i < num; ++i) {\\r\\n      address to = stream.readAddress();\\r\\n      uint256 amount = stream.readUint();\\r\\n      amountTotal += amount;\\r\\n      IERC20(token).safeTransfer(to, amount);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Wraps all native inputs and distributes wrapped ERC20 tokens from RouteProcessor to addresses\\r\\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\\r\\n  /// @param stream [WrapToken, ArrayLength, ...[To, Amount][]]. An array of destinations and token amounts\\r\\n  /// @return amountTotal Total amount distributed\\r\\n  function wrapAndDistributeERC20Amounts(uint256 stream) private returns (uint256 amountTotal) {\\r\\n    address token = stream.readAddress();\\r\\n    IWETH(token).deposit{value: address(this).balance}();\\r\\n    uint8 num = stream.readUint8();\\r\\n    amountTotal = 0;\\r\\n    for (uint256 i = 0; i < num; ++i) {\\r\\n      address to = stream.readAddress();\\r\\n      uint256 amount = stream.readUint();\\r\\n      amountTotal += amount;\\r\\n      IERC20(token).safeTransfer(to, amount);\\r\\n    }\\r\\n    require(address(this).balance == 0, \\\"RouteProcessor: invalid input amount\\\");\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes input BentoBox tokens from msg.sender to addresses. Tokens should be approved\\r\\n  /// @notice Expected to be called for initial liquidity transfer from the user to pools, so we know exact amounts\\r\\n  /// @param stream [ArrayLength, ...[To, ShareAmount][]]. An array of destinations and token share amounts\\r\\n  /// @param token Token to distribute\\r\\n  /// @return sharesTotal Total shares distributed\\r\\n  function distributeBentoShares(uint256 stream, address token) private returns (uint256 sharesTotal) {\\r\\n    uint8 num = stream.readUint8();\\r\\n    sharesTotal = 0;\\r\\n    for (uint256 i = 0; i < num; ++i) {\\r\\n      address to = stream.readAddress();\\r\\n      uint256 share = stream.readUint();\\r\\n      sharesTotal += share;\\r\\n      bentoBox.transfer(token, msg.sender, to, share);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes ERC20 tokens from RouteProcessor to addresses\\r\\n  /// @notice Quantity for sending is determined by share in 1/65535\\r\\n  /// @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\\r\\n  /// @notice so we have to work with shares - not fixed amounts\\r\\n  /// @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts\\r\\n  function distributeERC20Shares(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    uint8 num = stream.readUint8();\\r\\n    uint256 amountTotal = IERC20(token).balanceOf(address(this))\\r\\n      - 1;     // slot undrain protection\\r\\n\\r\\n    unchecked {\\r\\n      for (uint256 i = 0; i < num; ++i) {\\r\\n        address to = stream.readAddress();\\r\\n        uint16 share = stream.readUint16();\\r\\n        uint256 amount = (amountTotal * share) / 65535;\\r\\n        amountTotal -= amount;\\r\\n        IERC20(token).safeTransfer(to, amount);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes BentoBox tokens from RouteProcessor to addresses\\r\\n  /// @notice Quantity for sending is determined by portions in 1/65535.\\r\\n  /// @notice During routing we can't predict in advance the actual value of internal swaps because of slippage,\\r\\n  /// @notice so we have to work with portions - not fixed amounts\\r\\n  /// @param stream [Token, ArrayLength, ...[To, ShareAmount][]]. Token to distribute. An array of destinations and token share amounts\\r\\n  function distributeBentoPortions(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    uint8 num = stream.readUint8();\\r\\n    uint256 amountTotal = bentoBox.balanceOf(token, address(this))\\r\\n      - 1;     // slot undrain protection\\r\\n\\r\\n    unchecked {\\r\\n      for (uint256 i = 0; i < num; ++i) {\\r\\n        address to = stream.readAddress();\\r\\n        uint16 share = stream.readUint16();\\r\\n        uint256 amount = (amountTotal * share) / 65535;\\r\\n        amountTotal -= amount;\\r\\n        bentoBox.transfer(token, address(this), to, amount);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Unwraps the Native Token\\r\\n  /// @param receiver Destination of the unwrapped token\\r\\n  /// @param stream [Token]. Token to unwrap native\\r\\n  function unwrapNative(address receiver, uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    IWETH(token).withdraw( IERC20(token).balanceOf(address(this))\\r\\n      - 1);     // slot undrain protection\\r\\n    payable(receiver).transfer(address(this).balance);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x50a4931fca60a670ca0f470af0d4e3b9c337fb5b3162bd357ff6f3a8e5c49b06\",\"license\":\"UNLICENSED\"},\"interfaces/IBentoBoxMinimal.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct StrategyData {\\r\\n    uint64 strategyStartDate;\\r\\n    uint64 targetPercentage;\\r\\n    uint128 balance; // the balance of the strategy that BentoBox thinks is in there\\r\\n}\\r\\n\\r\\n/// @notice A rebasing library\\r\\nlibrary RebaseLibrary {\\r\\n    /// @notice Calculates the base value in relationship to `elastic` and `total`.\\r\\n    function toBase(Rebase memory total, uint256 elastic) internal pure returns (uint256 base) {\\r\\n        if (total.elastic == 0) {\\r\\n            base = elastic;\\r\\n        } else {\\r\\n            base = (elastic * total.base) / total.elastic;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Calculates the elastic value in relationship to `base` and `total`.\\r\\n    function toElastic(Rebase memory total, uint256 base) internal pure returns (uint256 elastic) {\\r\\n        if (total.base == 0) {\\r\\n            elastic = base;\\r\\n        } else {\\r\\n            elastic = (base * total.elastic) / total.base;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @notice Minimal BentoBox vault interface.\\r\\n/// @dev `token` is aliased as `address` from `IERC20` for simplicity.\\r\\ninterface IBentoBoxMinimal {\\r\\n    /// @notice Balance per ERC-20 token per account in shares.\\r\\n    function balanceOf(address, address) external view returns (uint256);\\r\\n\\r\\n    /// @dev Helper function to represent an `amount` of `token` in shares.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param amount The `token` amount.\\r\\n    /// @param roundUp If the result `share` should be rounded up.\\r\\n    /// @return share The token amount represented in shares.\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    /// @dev Helper function to represent shares back into the `token` amount.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param share The amount of shares.\\r\\n    /// @param roundUp If the result should be rounded up.\\r\\n    /// @return amount The share amount back into native representation.\\r\\n    function toAmount(\\r\\n        address token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    /// @notice Registers this contract so that users can approve it for BentoBox.\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    /// @notice Deposit an amount of `token` represented in either `amount` or `share`.\\r\\n    /// @param token The ERC-20 token to deposit.\\r\\n    /// @param from which account to pull the tokens.\\r\\n    /// @param to which account to push the tokens.\\r\\n    /// @param amount Token amount in native representation to deposit.\\r\\n    /// @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\\r\\n    /// @return amountOut The amount deposited.\\r\\n    /// @return shareOut The deposited amount represented in shares.\\r\\n    function deposit(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Withdraws an amount of `token` from a user account.\\r\\n    /// @param token_ The ERC-20 token to withdraw.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\\r\\n    /// @param share Like above, but `share` takes precedence over `amount`.\\r\\n    function withdraw(\\r\\n        address token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Transfer shares from a user account to another one.\\r\\n    /// @param token The ERC-20 token to transfer.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param share The amount of `token` in shares.\\r\\n    function transfer(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Reads the Rebase `totals`from storage for a given token\\r\\n    function totals(address token) external view returns (Rebase memory total);\\r\\n\\r\\n    function strategyData(address token) external view returns (StrategyData memory total);\\r\\n\\r\\n    /// @dev Approves users' BentoBox assets to a \\\"master\\\" contract.\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function harvest(\\r\\n        address token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa98bae923a99df0fda840a022e30fa4a2d0ea91d392714438cf5031e4e3d41c5\",\"license\":\"UNLICENSED\"},\"interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n/// @notice Trident pool interface.\\r\\ninterface IPool {\\r\\n    /// @notice Executes a swap from one token to another.\\r\\n    /// @dev The input tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function swap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Executes a swap from one token to another with a callback.\\r\\n    /// @dev This function allows borrowing the output tokens and sending the input tokens in the callback.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function flashSwap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Mints liquidity tokens.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return liquidity The amount of liquidity tokens that were minted for the user.\\r\\n    function mint(bytes calldata data) external returns (uint256 liquidity);\\r\\n\\r\\n    /// @notice Burns liquidity tokens.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return withdrawnAmounts The amount of various output tokens that were sent to the user.\\r\\n    function burn(bytes calldata data) external returns (TokenAmount[] memory withdrawnAmounts);\\r\\n\\r\\n    /// @notice Burns liquidity tokens for a single output token.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return amountOut The amount of output tokens that were sent to the user.\\r\\n    function burnSingle(bytes calldata data) external returns (uint256 amountOut);\\r\\n\\r\\n    /// @return A unique identifier for the pool type.\\r\\n    function poolIdentifier() external pure returns (bytes32);\\r\\n\\r\\n    /// @return An array of tokens supported by the pool.\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that will be sent to the user if the trade is executed.\\r\\n    function getAmountOut(bytes calldata data) external view returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountIn The amount of input tokens that are required from the user if the trade is executed.\\r\\n    function getAmountIn(bytes calldata data) external view returns (uint256 finalAmountIn);\\r\\n\\r\\n    /// @dev This event must be emitted on all swaps.\\r\\n    event Swap(address indexed recipient, address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\\r\\n\\r\\n    /// @dev This struct frames output tokens for burns.\\r\\n    struct TokenAmount {\\r\\n        address token;\\r\\n        uint256 amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x08f304fc6f4f982075e21c206a78741f9b0f8b1fbf51752acff87776c5f57b7d\",\"license\":\"GPL-3.0-or-later\"},\"interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\",\"keccak256\":\"0x20b5466d7f02c91eae6c79bc7acf6270e5483650af5d34fb265549c4b8c9718f\",\"license\":\"GPL-3.0\"},\"interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IWETH {\\r\\n  function deposit() external payable;\\r\\n\\r\\n  function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n  function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x7c3ac71ea1bda67a50642cb86bb77d9b71360df4a5da1de9403ad7d69ecdfa3e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":978,"contract":"contracts/RouteProcessor.sol:RouteProcessor","label":"unlocked","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"processRoute(address,uint256,address,uint256,address,bytes)":{"notice":"Processes the route generated off-chain. Has a lock"},"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":{"notice":"Transfers some value to <transferValueTo> and then processes the route"}},"version":1}}},"contracts/RouteProcessor3.sol":{"RouteProcessor3":{"abi":[{"inputs":[{"internalType":"address","name":"_bentoBox","type":"address"},{"internalType":"address[]","name":"priviledgedUserList","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Route","type":"event"},{"inputs":[],"name":"bentoBox","outputs":[{"internalType":"contract IBentoBoxMinimal","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"route","type":"bytes"}],"name":"processRoute","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resume","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"priviledge","type":"bool"}],"name":"setPriviledge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"transferValueTo","type":"address"},{"internalType":"uint256","name":"amountValueTransfer","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"route","type":"bytes"}],"name":"transferValueAndprocessRoute","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"Ilya Lyalin version 2.1","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"processRoute(address,uint256,address,uint256,address,bytes)":{"params":{"amountIn":"Amount of the input token","amountOutMin":"Minimum amount of the output token","tokenIn":"Address of the input token","tokenOut":"Address of the output token"},"returns":{"amountOut":"Actual amount of the output token"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":{"params":{"amountIn":"Amount of the input token","amountOutMin":"Minimum amount of the output token","amountValueTransfer":"How much value to transfer","tokenIn":"Address of the input token","tokenOut":"Address of the output token","transferValueTo":"Address where the value should be transferred"},"returns":{"amountOut":"Actual amount of the output token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"A route processor for the Sushi Aggregator","version":1},"evm":{"bytecode":{"functionDebugData":{"@_2288":{"entryPoint":null,"id":2288,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_849":{"entryPoint":null,"id":849,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":235,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":2},"increment_t_uint256":{"entryPoint":621,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":599,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":344,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1913:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:15","statements":[{"nodeType":"YulAssignment","src":"84:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:15"},"nodeType":"YulFunctionCall","src":"93:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:15"}]},{"body":{"nodeType":"YulBlock","src":"169:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:15"},"nodeType":"YulFunctionCall","src":"171:12:15"},"nodeType":"YulExpressionStatement","src":"171:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:15"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:15","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:15"},"nodeType":"YulFunctionCall","src":"150:11:15"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:15"},"nodeType":"YulFunctionCall","src":"146:19:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:15"},"nodeType":"YulFunctionCall","src":"135:31:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:15"},"nodeType":"YulFunctionCall","src":"125:42:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:15"},"nodeType":"YulFunctionCall","src":"118:50:15"},"nodeType":"YulIf","src":"115:70:15"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:15","type":""}],"src":"14:177:15"},{"body":{"nodeType":"YulBlock","src":"228:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:15"},"nodeType":"YulFunctionCall","src":"248:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:15"},"nodeType":"YulFunctionCall","src":"238:31:15"},"nodeType":"YulExpressionStatement","src":"238:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:15"},"nodeType":"YulFunctionCall","src":"278:15:15"},"nodeType":"YulExpressionStatement","src":"278:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:15"},"nodeType":"YulFunctionCall","src":"302:15:15"},"nodeType":"YulExpressionStatement","src":"302:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:15"},{"body":{"nodeType":"YulBlock","src":"451:1091:15","statements":[{"body":{"nodeType":"YulBlock","src":"497:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"506:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"509:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"499:6:15"},"nodeType":"YulFunctionCall","src":"499:12:15"},"nodeType":"YulExpressionStatement","src":"499:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"472:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"481:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"468:3:15"},"nodeType":"YulFunctionCall","src":"468:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"493:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"464:3:15"},"nodeType":"YulFunctionCall","src":"464:32:15"},"nodeType":"YulIf","src":"461:52:15"},{"nodeType":"YulAssignment","src":"522:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"562:9:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"532:29:15"},"nodeType":"YulFunctionCall","src":"532:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"522:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"581:12:15","value":{"kind":"number","nodeType":"YulLiteral","src":"591:2:15","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"585:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"602:39:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"626:9:15"},{"name":"_1","nodeType":"YulIdentifier","src":"637:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"622:3:15"},"nodeType":"YulFunctionCall","src":"622:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"616:5:15"},"nodeType":"YulFunctionCall","src":"616:25:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"606:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"650:28:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:2:15","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"672:1:15","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"664:3:15"},"nodeType":"YulFunctionCall","src":"664:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"676:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"660:3:15"},"nodeType":"YulFunctionCall","src":"660:18:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"654:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"705:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"714:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"717:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"707:6:15"},"nodeType":"YulFunctionCall","src":"707:12:15"},"nodeType":"YulExpressionStatement","src":"707:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"693:6:15"},{"name":"_2","nodeType":"YulIdentifier","src":"701:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"690:2:15"},"nodeType":"YulFunctionCall","src":"690:14:15"},"nodeType":"YulIf","src":"687:34:15"},{"nodeType":"YulVariableDeclaration","src":"730:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"744:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"755:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:15"},"nodeType":"YulFunctionCall","src":"740:22:15"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"734:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"810:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"819:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"822:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"812:6:15"},"nodeType":"YulFunctionCall","src":"812:12:15"},"nodeType":"YulExpressionStatement","src":"812:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"789:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"793:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"785:3:15"},"nodeType":"YulFunctionCall","src":"785:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"800:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"781:3:15"},"nodeType":"YulFunctionCall","src":"781:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"774:6:15"},"nodeType":"YulFunctionCall","src":"774:35:15"},"nodeType":"YulIf","src":"771:55:15"},{"nodeType":"YulVariableDeclaration","src":"835:19:15","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"851:2:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"845:5:15"},"nodeType":"YulFunctionCall","src":"845:9:15"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"839:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"877:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"879:16:15"},"nodeType":"YulFunctionCall","src":"879:18:15"},"nodeType":"YulExpressionStatement","src":"879:18:15"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"869:2:15"},{"name":"_2","nodeType":"YulIdentifier","src":"873:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"866:2:15"},"nodeType":"YulFunctionCall","src":"866:10:15"},"nodeType":"YulIf","src":"863:36:15"},{"nodeType":"YulVariableDeclaration","src":"908:20:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"922:1:15","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"925:2:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"918:3:15"},"nodeType":"YulFunctionCall","src":"918:10:15"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"912:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"937:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"957:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"951:5:15"},"nodeType":"YulFunctionCall","src":"951:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"941:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"969:56:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"991:6:15"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"1007:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"1011:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1003:3:15"},"nodeType":"YulFunctionCall","src":"1003:11:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1020:2:15","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1016:3:15"},"nodeType":"YulFunctionCall","src":"1016:7:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"999:3:15"},"nodeType":"YulFunctionCall","src":"999:25:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:15"},"nodeType":"YulFunctionCall","src":"987:38:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"973:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1084:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1086:16:15"},"nodeType":"YulFunctionCall","src":"1086:18:15"},"nodeType":"YulExpressionStatement","src":"1086:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1043:10:15"},{"name":"_2","nodeType":"YulIdentifier","src":"1055:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1040:2:15"},"nodeType":"YulFunctionCall","src":"1040:18:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1063:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1075:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1060:2:15"},"nodeType":"YulFunctionCall","src":"1060:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1037:2:15"},"nodeType":"YulFunctionCall","src":"1037:46:15"},"nodeType":"YulIf","src":"1034:72:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1122:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1126:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1115:6:15"},"nodeType":"YulFunctionCall","src":"1115:22:15"},"nodeType":"YulExpressionStatement","src":"1115:22:15"},{"nodeType":"YulVariableDeclaration","src":"1146:17:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1157:6:15"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1150:3:15","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1179:6:15"},{"name":"_4","nodeType":"YulIdentifier","src":"1187:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1172:6:15"},"nodeType":"YulFunctionCall","src":"1172:18:15"},"nodeType":"YulExpressionStatement","src":"1172:18:15"},{"nodeType":"YulAssignment","src":"1199:22:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1210:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1218:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1206:3:15"},"nodeType":"YulFunctionCall","src":"1206:15:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1199:3:15"}]},{"nodeType":"YulVariableDeclaration","src":"1230:34:15","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1252:2:15"},{"name":"_5","nodeType":"YulIdentifier","src":"1256:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1248:3:15"},"nodeType":"YulFunctionCall","src":"1248:11:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1261:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1244:3:15"},"nodeType":"YulFunctionCall","src":"1244:20:15"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1234:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1296:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1305:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1308:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1298:6:15"},"nodeType":"YulFunctionCall","src":"1298:12:15"},"nodeType":"YulExpressionStatement","src":"1298:12:15"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1279:6:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1287:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1276:2:15"},"nodeType":"YulFunctionCall","src":"1276:19:15"},"nodeType":"YulIf","src":"1273:39:15"},{"nodeType":"YulVariableDeclaration","src":"1321:22:15","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1336:2:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1340:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1332:3:15"},"nodeType":"YulFunctionCall","src":"1332:11:15"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1325:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1408:103:15","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1429:3:15"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1464:3:15"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1434:29:15"},"nodeType":"YulFunctionCall","src":"1434:34:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1422:6:15"},"nodeType":"YulFunctionCall","src":"1422:47:15"},"nodeType":"YulExpressionStatement","src":"1422:47:15"},{"nodeType":"YulAssignment","src":"1482:19:15","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1493:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1498:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1489:3:15"},"nodeType":"YulFunctionCall","src":"1489:12:15"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1482:3:15"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1363:3:15"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1368:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1360:2:15"},"nodeType":"YulFunctionCall","src":"1360:15:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1376:23:15","statements":[{"nodeType":"YulAssignment","src":"1378:19:15","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1389:3:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1394:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1385:3:15"},"nodeType":"YulFunctionCall","src":"1385:12:15"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1378:3:15"}]}]},"pre":{"nodeType":"YulBlock","src":"1356:3:15","statements":[]},"src":"1352:159:15"},{"nodeType":"YulAssignment","src":"1520:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1530:6:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1520:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"409:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"420:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"432:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"440:6:15","type":""}],"src":"328:1214:15"},{"body":{"nodeType":"YulBlock","src":"1579:95:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1596:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1608:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1599:3:15"},"nodeType":"YulFunctionCall","src":"1599:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1589:6:15"},"nodeType":"YulFunctionCall","src":"1589:31:15"},"nodeType":"YulExpressionStatement","src":"1589:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1639:4:15","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1629:6:15"},"nodeType":"YulFunctionCall","src":"1629:15:15"},"nodeType":"YulExpressionStatement","src":"1629:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1660:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1663:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1653:6:15"},"nodeType":"YulFunctionCall","src":"1653:15:15"},"nodeType":"YulExpressionStatement","src":"1653:15:15"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"1547:127:15"},{"body":{"nodeType":"YulBlock","src":"1726:185:15","statements":[{"body":{"nodeType":"YulBlock","src":"1765:111:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1786:1:15","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:3:15","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1798:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1789:3:15"},"nodeType":"YulFunctionCall","src":"1789:20:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1779:6:15"},"nodeType":"YulFunctionCall","src":"1779:31:15"},"nodeType":"YulExpressionStatement","src":"1779:31:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1830:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1833:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:15"},"nodeType":"YulFunctionCall","src":"1823:15:15"},"nodeType":"YulExpressionStatement","src":"1823:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1858:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1861:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1851:6:15"},"nodeType":"YulFunctionCall","src":"1851:15:15"},"nodeType":"YulExpressionStatement","src":"1851:15:15"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1742:5:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1753:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1749:3:15"},"nodeType":"YulFunctionCall","src":"1749:6:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1739:2:15"},"nodeType":"YulFunctionCall","src":"1739:17:15"},"nodeType":"YulIf","src":"1736:140:15"},{"nodeType":"YulAssignment","src":"1885:20:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1896:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1903:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:15"},"nodeType":"YulFunctionCall","src":"1892:13:15"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1885:3:15"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1708:5:15","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1718:3:15","type":""}],"src":"1679:232:15"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040526002805461ffff60a01b191661010160a01b1790553480156200002657600080fd5b50604051620038a3380380620038a383398101604081905262000049916200016e565b6200005433620000eb565b6001600160a01b038216608052600280546001600160a01b031916600117905560005b8151811015620000e25760018060008484815181106200009b576200009b62000257565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000d9816200026d565b91505062000077565b50505062000297565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200015357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200018257600080fd5b6200018d836200013b565b602084810151919350906001600160401b0380821115620001ad57600080fd5b818601915086601f830112620001c257600080fd5b815181811115620001d757620001d762000158565b8060051b604051601f19603f83011681018181108582111715620001ff57620001ff62000158565b6040529182528482019250838101850191898311156200021e57600080fd5b938501935b82851015620002475762000237856200013b565b8452938501939285019262000223565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200029057634e487b7160e01b600052601160045260246000fd5b5060010190565b6080516135a362000300600039600081816101100152818161150901528181612460015281816124a701528181612511015281816125d601528181612683015281816127670152818161285801528181612904015281816129d30152612acf01526135a36000f3fe6080604052600436106100b55760003560e01c80638da5cb5b116100695780639a1f34061161004e5780639a1f3406146101bf578063f2fde38b146101df578063fa461e33146101ff57600080fd5b80638da5cb5b1461018157806393b3774c146101ac57600080fd5b80636b2ace871161009a5780636b2ace87146100fe578063715018a6146101575780638456cb591461016c57600080fd5b8063046f7da2146100c15780632646478b146100d857600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100d661021f565b005b6100eb6100e6366004612f16565b61032d565b6040519081526020015b60405180910390f35b34801561010a57600080fd5b506101327f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f5565b34801561016357600080fd5b506100d66104d7565b34801561017857600080fd5b506100d66104eb565b34801561018d57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610132565b6100eb6101ba366004612f9d565b6105f4565b3480156101cb57600080fd5b506100d66101da366004613050565b610860565b3480156101eb57600080fd5b506100d66101fa366004613089565b6108be565b34801561020b57600080fd5b506100d661021a3660046130ad565b610975565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061025a57503360009081526001602081905260409091205460ff161515145b6102eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f52503a2063616c6c6572206973206e6f7420746865206f776e6572206f72206160448201527f2070726976696c6564676564207573657200000000000000000000000000000060648201526084015b60405180910390fd5b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff167501000000000000000000000000000000000000000000179055565b60025460009074010000000000000000000000000000000000000000900460ff166001146103b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b6564000000000000000060448201526064016102e2565b6002547501000000000000000000000000000000000000000000900460ff1660011461043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f7220697320706175736564000000000000000060448201526064016102e2565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167402000000000000000000000000000000000000000017905561048c878787878787610b23565b9050600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790559695505050505050565b6104df611180565b6104e96000611201565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061052657503360009081526001602081905260409091205460ff161515145b6105b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f52503a2063616c6c6572206973206e6f7420746865206f776e6572206f72206160448201527f2070726976696c6564676564207573657200000000000000000000000000000060648201526084016102e2565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff167502000000000000000000000000000000000000000000179055565b60025460009074010000000000000000000000000000000000000000900460ff1660011461067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f72206973206c6f636b6564000000000000000060448201526064016102e2565b6002547501000000000000000000000000000000000000000000900460ff16600114610706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f526f75746550726f636573736f7220697320706175736564000000000000000060448201526064016102e2565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055604051600090819073ffffffffffffffffffffffffffffffffffffffff8c16908b908381818185875af1925050503d806000811461079f576040519150601f19603f3d011682016040523d82523d6000602084013e6107a4565b606091505b509150915081816040516020016107bb9190613159565b60405160208183030381529060405290610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e291906131bf565b50610811898989898989610b23565b92505050600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017905598975050505050505050565b610868611180565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6108c6611180565b73ffffffffffffffffffffffffffffffffffffffff8116610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102e2565b61097281611201565b50565b60025473ffffffffffffffffffffffffffffffffffffffff163314610a1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f526f75746550726f636573736f722e756e697377617056335377617043616c6c60448201527f6261636b3a2063616c6c2066726f6d20756e6b6e6f776e20736f75726365000060648201526084016102e2565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790556000610a5582840184613089565b90506000808613610a665784610a68565b855b905060008113610afa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f526f75746550726f636573736f722e756e697377617056335377617043616c6c60448201527f6261636b3a206e6f7420706f73697469766520616d6f756e740000000000000060648201526084016102e2565b610b1b73ffffffffffffffffffffffffffffffffffffffff83163383611276565b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bea576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8916906370a0823190602401602060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be591906131d2565b610bec565b475b9050600073ffffffffffffffffffffffffffffffffffffffff871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610cb6576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301528816906370a0823190602401602060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb191906131d2565b610ccf565b8473ffffffffffffffffffffffffffffffffffffffff16315b604080518082019091528581528551860160208201529091505b805160208201511115610e1c576000610d088280516001018051915290565b90508060ff1660011415610d2457610d1f8261134f565b610e16565b8060ff1660021415610d3a57610d1f828b61142c565b8060ff1660031415610d4f57610d1f8261144c565b8060ff1660041415610d6457610d1f82611471565b8060ff1660051415610d7957610d1f82611492565b8060ff1660061415610d8f57610d1f8b836115ed565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f75746550726f636573736f723a20556e6b6e6f776e20636f6d6d616e642060448201527f636f64650000000000000000000000000000000000000000000000000000000060648201526084016102e2565b50610ce9565b600073ffffffffffffffffffffffffffffffffffffffff8b1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610ee2576040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8c16906370a0823190602401602060405180830381865afa158015610eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edd91906131d2565b610ee4565b475b905083610ef18b8361321a565b1015610f7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f526f75746550726f636573736f723a204d696e696d616c20696d70757420626160448201527f6c616e63652076696f6c6174696f6e000000000000000000000000000000000060648201526084016102e2565b600073ffffffffffffffffffffffffffffffffffffffff8a1673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14611047576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301528b16906370a0823190602401602060405180830381865afa15801561101e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104291906131d2565b611060565b8773ffffffffffffffffffffffffffffffffffffffff16315b905061106c898561321a565b8110156110fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f526f75746550726f636573736f723a204d696e696d616c206f7570757420626160448201527f6c616e63652076696f6c6174696f6e000000000000000000000000000000000060648201526084016102e2565b6111058482613232565b6040805173ffffffffffffffffffffffffffffffffffffffff8b81168252602082018f90529181018c905260608101839052919750808c1691908e169033907f2db5ddd0b42bdbca0d69ea16f234a870a485854ae0d91f16643d6f317d8b89949060800160405180910390a450505050509695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e2565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261134a9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611680565b505050565b60006113618280516014018051915290565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156113d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f591906131d2565b90508015611420577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b61134a8330848461178c565b600061143e8380516014018051915290565b905061134a8333838561178c565b4761146d823073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8461178c565b5050565b60006114838280516014018051915290565b905061146d82308360006117e7565b60006114a48280516014018051915290565b905060006114b88380516001018051915290565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301523060248301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f7888aec90604401602060405180830381865afa158015611550573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157491906131d2565b9050801561159f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b60005b8260ff168110156115e65760006115bf8680516002018051915290565b61ffff80821685020493849003939091506115dc873088846117e7565b50506001016115a2565b5050505050565b60006115ff8280516020018051915290565b905060006116138380516020018051915290565b905060006116278480516001018051915290565b9050600061163b8580516020018051915290565b9050600061164f8680516020018051915290565b905061167773ffffffffffffffffffffffffffffffffffffffff8816333088888888886118fc565b50505050505050565b60006116e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b7c9092919063ffffffff16565b80519091501561134a57808060200190518101906117009190613249565b61134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102e2565b600061179e8580516001018051915290565b905060005b8160ff16811015610b1b5760006117c08780516002018051915290565b61ffff80821686020494859003949091506117dd888888846117e7565b50506001016117a3565b60006117f98580516001018051915290565b905060ff81166118145761180f85858585611b93565b6115e6565b8060ff166001141561182c5761180f85858585611f0c565b8060ff16600214156118445761180f858585856121f0565b8060ff166003141561185c5761180f858585856123ef565b8060ff16600414156118745761180f85858585612a49565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f526f75746550726f636573736f723a20556e6b6e6f776e20706f6f6c2074797060448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084016102e2565b6040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152600091908a1690637ecebe0090602401602060405180830381865afa15801561196c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199091906131d2565b6040517fd505accf00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919250908a169063d505accf9060e401600060405180830381600087803b158015611a2a57600080fd5b505af1158015611a3e573d6000803e3d6000fd5b50506040517f7ecebe0000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152600093508c169150637ecebe0090602401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad591906131d2565b9050611ae282600161321a565b8114611b70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5361666545524332303a207065726d697420646964206e6f742073756363656560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016102e2565b50505050505050505050565b6060611b8b8484600085612bc1565b949350505050565b6000611ba58580516014018051915290565b90506000611bb98680516001018051915290565b90506000611bcd8780516014018051915290565b90506000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c419190613289565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150600082118015611c765750600081115b611cdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f57726f6e6720706f6f6c2072657365727665730000000000000000000000000060448201526064016102e2565b6000808560ff16600114611cf1578284611cf4565b83835b9150915087600014611d665773ffffffffffffffffffffffffffffffffffffffff8a16301415611d4457611d3f73ffffffffffffffffffffffffffffffffffffffff8a16888a611276565b611e06565b611d3f73ffffffffffffffffffffffffffffffffffffffff8a168b898b612cda565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301528391908b16906370a0823190602401602060405180830381865afa158015611dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df991906131d2565b611e039190613232565b97505b6000611e14896103e56132d9565b9050600081611e25856103e86132d9565b611e2f919061321a565b611e3984846132d9565b611e439190613316565b90506000808960ff16600114611e5b57826000611e5f565b6000835b604080516000815260208101918290527f022c0d9f00000000000000000000000000000000000000000000000000000000909152919350915073ffffffffffffffffffffffffffffffffffffffff8c169063022c0d9f90611ec990859085908e9060248101613351565b600060405180830381600087803b158015611ee357600080fd5b505af1158015611ef7573d6000803e3d6000fd5b50505050505050505050505050505050505050565b6000611f1e8580516014018051915290565b9050600080611f338780516001018051915290565b60ff161190506000611f4b8780516014018051915290565b905073ffffffffffffffffffffffffffffffffffffffff861630146120315773ffffffffffffffffffffffffffffffffffffffff8616331461200f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f73776170556e6956333a20756e65787065637465642066726f6d20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016102e2565b61203173ffffffffffffffffffffffffffffffffffffffff8616333087612cda565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851690811790915563128acb08828487816120a5576120a0600173fffd8963efd1fc6a506488495d951d5263988d26613396565b6120b5565b6120b56401000276a360016133cb565b6040805173ffffffffffffffffffffffffffffffffffffffff8d166020820152016040516020818303038152906040526040518663ffffffff1660e01b8152600401612105959493929190613403565b60408051808303816000875af1158015612123573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612147919061344a565b505060025473ffffffffffffffffffffffffffffffffffffffff16600114611677576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f75746550726f636573736f722e73776170556e6956333a20756e6578706560448201527f637465640000000000000000000000000000000000000000000000000000000060648201526084016102e2565b60006122028580516001018051915290565b905060006122168680516014018051915290565b9050600180831614156122e55760006122358780516014018051915290565b9050600283166122a1578073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561228757600080fd5b505af115801561229b573d6000803e3d6000fd5b50505050505b73ffffffffffffffffffffffffffffffffffffffff821630146122df576122df73ffffffffffffffffffffffffffffffffffffffff82168386611276565b50610b1b565b600282166123ad5773ffffffffffffffffffffffffffffffffffffffff8516301461232c5761232c73ffffffffffffffffffffffffffffffffffffffff8516863086612cda565b6040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff851690632e1a7d4d90602401600060405180830381600087803b15801561239457600080fd5b505af11580156123a8573d6000803e3d6000fd5b505050505b60405173ffffffffffffffffffffffffffffffffffffffff8216904780156108fc02916000818181858888f19350505050158015611677573d6000803e3d6000fd5b60006124018580516001018051915290565b905060006124158680516014018051915290565b905060ff8216156127f85782156124cc5773ffffffffffffffffffffffffffffffffffffffff851630141561248a5761248573ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000085611276565b612722565b61248573ffffffffffffffffffffffffffffffffffffffff8516867f000000000000000000000000000000000000000000000000000000000000000086612cda565b6040517f4ffe34db00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527f00000000000000000000000000000000000000000000000000000000000000001690634ffe34db906024016040805180830381865afa158015612557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257b919061348e565b516040517fdf23b45b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526fffffffffffffffffffffffffffffffff909216917f0000000000000000000000000000000000000000000000000000000000000000169063df23b45b90602401606060405180830381865afa15801561261d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126419190613501565b60409081015190517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301526fffffffffffffffffffffffffffffffff909216918716906370a0823190602401602060405180830381865afa1580156126e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270b91906131d2565b612715919061321a565b61271f9190613232565b92505b6040517f02b9446c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830181905290831660448301526064820185905260006084830152906302b9446c9060a40160408051808303816000875af11580156127cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127f1919061344a565b5050610b1b565b82156128b9576040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528681166024830152306044830152606482018590527f0000000000000000000000000000000000000000000000000000000000000000169063f18d03cc90608401600060405180830381600087803b15801561289c57600080fd5b505af11580156128b0573d6000803e3d6000fd5b50505050612972565b6040517ff7888aec00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527f0000000000000000000000000000000000000000000000000000000000000000169063f7888aec90604401602060405180830381865afa15801561294b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296f91906131d2565b92505b6040517f97da6d3000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152306024830152828116604483015260006064830152608482018590527f000000000000000000000000000000000000000000000000000000000000000016906397da6d309060a40160408051808303816000875af1158015612a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3f919061344a565b5050505050505050565b6000612a5b8580516014018051915290565b8551602080820180519092010187529091508215612b2c576040517ff18d03cc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015286811660248301528381166044830152606482018590527f0000000000000000000000000000000000000000000000000000000000000000169063f18d03cc90608401600060405180830381600087803b158015612b1357600080fd5b505af1158015612b27573d6000803e3d6000fd5b505050505b6040517f627dd56a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063627dd56a90612b7e9084906004016131bf565b6020604051808303816000875af1158015612b9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167791906131d2565b606082471015612c53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102e2565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612c7c9190613159565b60006040518083038185875af1925050503d8060008114612cb9576040519150601f19603f3d011682016040523d82523d6000602084013e612cbe565b606091505b5091509150612ccf87838387612d3e565b979650505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052612d389085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016112c8565b50505050565b60608315612dd1578251612dca5773ffffffffffffffffffffffffffffffffffffffff85163b612dca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102e2565b5081611b8b565b611b8b8383815115612de65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e291906131bf565b73ffffffffffffffffffffffffffffffffffffffff8116811461097257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112612e7c57600080fd5b813567ffffffffffffffff80821115612e9757612e97612e3c565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612edd57612edd612e3c565b81604052838152866020858801011115612ef657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c08789031215612f2f57600080fd5b8635612f3a81612e1a565b9550602087013594506040870135612f5181612e1a565b9350606087013592506080870135612f6881612e1a565b915060a087013567ffffffffffffffff811115612f8457600080fd5b612f9089828a01612e6b565b9150509295509295509295565b600080600080600080600080610100898b031215612fba57600080fd5b8835612fc581612e1a565b9750602089013596506040890135612fdc81612e1a565b9550606089013594506080890135612ff381612e1a565b935060a0890135925060c089013561300a81612e1a565b915060e089013567ffffffffffffffff81111561302657600080fd5b6130328b828c01612e6b565b9150509295985092959890939650565b801515811461097257600080fd5b6000806040838503121561306357600080fd5b823561306e81612e1a565b9150602083013561307e81613042565b809150509250929050565b60006020828403121561309b57600080fd5b81356130a681612e1a565b9392505050565b600080600080606085870312156130c357600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156130e957600080fd5b818701915087601f8301126130fd57600080fd5b81358181111561310c57600080fd5b88602082850101111561311e57600080fd5b95989497505060200194505050565b60005b83811015613148578181015183820152602001613130565b83811115612d385750506000910152565b6000825161316b81846020870161312d565b9190910192915050565b6000815180845261318d81602086016020860161312d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006130a66020830184613175565b6000602082840312156131e457600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561322d5761322d6131eb565b500190565b600082821015613244576132446131eb565b500390565b60006020828403121561325b57600080fd5b81516130a681613042565b80516dffffffffffffffffffffffffffff8116811461328457600080fd5b919050565b60008060006060848603121561329e57600080fd5b6132a784613266565b92506132b560208501613266565b9150604084015163ffffffff811681146132ce57600080fd5b809150509250925092565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613311576133116131eb565b500290565b60008261334c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b84815283602082015273ffffffffffffffffffffffffffffffffffffffff8316604082015260806060820152600061338c6080830184613175565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff838116908316818110156133c3576133c36131eb565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff8083168185168083038211156133fa576133fa6131eb565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a06080830152612ccf60a0830184613175565b6000806040838503121561345d57600080fd5b505080516020909101519092909150565b80516fffffffffffffffffffffffffffffffff8116811461328457600080fd5b6000604082840312156134a057600080fd5b6040516040810181811067ffffffffffffffff821117156134c3576134c3612e3c565b6040526134cf8361346e565b81526134dd6020840161346e565b60208201529392505050565b805167ffffffffffffffff8116811461328457600080fd5b60006060828403121561351357600080fd5b6040516060810181811067ffffffffffffffff8211171561353657613536612e3c565b604052613542836134e9565b8152613550602084016134e9565b60208201526135616040840161346e565b6040820152939250505056fea2646970667358221220354456a1d8bdd3dd96dec0afd1602b5fde91f00da7bb5f2ccf8af687b214144e64736f6c634300080a0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x38A3 CODESIZE SUB DUP1 PUSH3 0x38A3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x49 SWAP2 PUSH3 0x16E JUMP JUMPDEST PUSH3 0x54 CALLER PUSH3 0xEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0xE2 JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x9B JUMPI PUSH3 0x9B PUSH3 0x257 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0xD9 DUP2 PUSH3 0x26D JUMP JUMPDEST SWAP2 POP POP PUSH3 0x77 JUMP JUMPDEST POP POP POP PUSH3 0x297 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x18D DUP4 PUSH3 0x13B JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP2 SWAP4 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1D7 JUMPI PUSH3 0x1D7 PUSH3 0x158 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x1FF JUMPI PUSH3 0x1FF PUSH3 0x158 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH3 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x247 JUMPI PUSH3 0x237 DUP6 PUSH3 0x13B JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x223 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x290 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x35A3 PUSH3 0x300 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x110 ADD MSTORE DUP2 DUP2 PUSH2 0x1509 ADD MSTORE DUP2 DUP2 PUSH2 0x2460 ADD MSTORE DUP2 DUP2 PUSH2 0x24A7 ADD MSTORE DUP2 DUP2 PUSH2 0x2511 ADD MSTORE DUP2 DUP2 PUSH2 0x25D6 ADD MSTORE DUP2 DUP2 PUSH2 0x2683 ADD MSTORE DUP2 DUP2 PUSH2 0x2767 ADD MSTORE DUP2 DUP2 PUSH2 0x2858 ADD MSTORE DUP2 DUP2 PUSH2 0x2904 ADD MSTORE DUP2 DUP2 PUSH2 0x29D3 ADD MSTORE PUSH2 0x2ACF ADD MSTORE PUSH2 0x35A3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x9A1F3406 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9A1F3406 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x93B3774C EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B2ACE87 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x6B2ACE87 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46F7DA2 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x2646478B EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xBC JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3050 JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3089 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x25A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52503A2063616C6C6572206973206E6F7420746865206F776E6572206F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726976696C65646765642075736572000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973207061757365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x20000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH2 0x48C DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DF PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x4E9 PUSH1 0x0 PUSH2 0x1201 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x526 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52503A2063616C6C6572206973206E6F7420746865206F776E6572206F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726976696C65646765642075736572000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x2000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973207061757365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x20000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 DUP12 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x31BF JUMP JUMPDEST POP PUSH2 0x811 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0xB23 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x868 PUSH2 0x1180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8C6 PUSH2 0x1180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0x1201 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E756E697377617056335377617043616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6261636B3A2063616C6C2066726F6D20756E6B6E6F776E20736F757263650000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xA55 DUP3 DUP5 ADD DUP5 PUSH2 0x3089 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP7 SGT PUSH2 0xA66 JUMPI DUP5 PUSH2 0xA68 JUMP JUMPDEST DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E756E697377617056335377617043616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6261636B3A206E6F7420706F73697469766520616D6F756E7400000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xB1B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP6 DUP2 MSTORE DUP6 MLOAD DUP7 ADD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD GT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 PUSH2 0xD08 DUP3 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xD3A JUMPI PUSH2 0xD1F DUP3 DUP12 PUSH2 0x142C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD1F DUP3 PUSH2 0x144C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0xD64 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x1471 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x1492 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0xD8F JUMPI PUSH2 0xD1F DUP12 DUP4 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20556E6B6E6F776E20636F6D6D616E6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F646500000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST POP PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP DUP4 PUSH2 0xEF1 DUP12 DUP4 PUSH2 0x321A JUMP JUMPDEST LT ISZERO PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A204D696E696D616C20696D707574206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C616E63652076696F6C6174696F6E0000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1042 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST SWAP1 POP PUSH2 0x106C DUP10 DUP6 PUSH2 0x321A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A204D696E696D616C206F75707574206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C616E63652076696F6C6174696F6E0000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x1105 DUP5 DUP3 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP16 SWAP1 MSTORE SWAP2 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 POP DUP1 DUP13 AND SWAP2 SWAP1 DUP15 AND SWAP1 CALLER SWAP1 PUSH32 0x2DB5DDD0B42BDBCA0D69EA16F234A870A485854AE0D91F16643D6F317D8B8994 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x134A SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1680 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1420 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD JUMPDEST PUSH2 0x134A DUP4 ADDRESS DUP5 DUP5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x134A DUP4 CALLER DUP4 DUP6 PUSH2 0x178C JUMP JUMPDEST SELFBALANCE PUSH2 0x146D DUP3 ADDRESS PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 PUSH2 0x178C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1483 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x146D DUP3 ADDRESS DUP4 PUSH1 0x0 PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A4 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14B8 DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1574 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x159F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x15E6 JUMPI PUSH1 0x0 PUSH2 0x15BF DUP7 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP6 MUL DIV SWAP4 DUP5 SWAP1 SUB SWAP4 SWAP1 SWAP2 POP PUSH2 0x15DC DUP8 ADDRESS DUP9 DUP5 PUSH2 0x17E7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x15A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP3 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1613 DUP4 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1627 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163B DUP6 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164F DUP7 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1677 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x18FC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x134A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 PUSH2 0x17C0 DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP7 MUL DIV SWAP5 DUP6 SWAP1 SUB SWAP5 SWAP1 SWAP2 POP PUSH2 0x17DD DUP9 DUP9 DUP9 DUP5 PUSH2 0x17E7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP2 AND PUSH2 0x1814 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x182C JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x1F0C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1844 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x21F0 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x185C JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0x1874 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20556E6B6E6F776E20706F6F6C20747970 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7ECEBE0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP11 AND SWAP1 PUSH4 0x7ECEBE00 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xC4 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP11 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x7ECEBE0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP4 POP DUP13 AND SWAP2 POP PUSH4 0x7ECEBE00 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE2 DUP3 PUSH1 0x1 PUSH2 0x321A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A207065726D697420646964206E6F7420737563636565 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B8B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2BC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BB9 DUP7 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BCD DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1C76 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720706F6F6C20726573657276657300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1CF1 JUMPI DUP3 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP2 POP SWAP2 POP DUP8 PUSH1 0x0 EQ PUSH2 0x1D66 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND ADDRESS EQ ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D3F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP9 DUP11 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x1D3F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP12 DUP10 DUP12 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 SWAP2 SWAP1 DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF9 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x1E03 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH1 0x0 PUSH2 0x1E14 DUP10 PUSH2 0x3E5 PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1E25 DUP6 PUSH2 0x3E8 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x1E2F SWAP2 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x1E39 DUP5 DUP5 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x1E43 SWAP2 SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1E5B JUMPI DUP3 PUSH1 0x0 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0x22C0D9F00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x1EC9 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP15 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x3351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1E DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1F33 DUP8 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xFF AND GT SWAP1 POP PUSH1 0x0 PUSH2 0x1F4B DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ADDRESS EQ PUSH2 0x2031 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND CALLER EQ PUSH2 0x200F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170556E6956333A20756E65787065637465642066726F6D206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x2031 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND CALLER ADDRESS DUP8 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH4 0x128ACB08 DUP3 DUP5 DUP8 DUP2 PUSH2 0x20A5 JUMPI PUSH2 0x20A0 PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x20B5 PUSH5 0x1000276A3 PUSH1 0x1 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2105 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2123 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ PUSH2 0x1677 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E73776170556E6956333A20756E65787065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2216 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP4 AND EQ ISZERO PUSH2 0x22E5 JUMPI PUSH1 0x0 PUSH2 0x2235 DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 AND PUSH2 0x22A1 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x229B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ADDRESS EQ PUSH2 0x22DF JUMPI PUSH2 0x22DF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 DUP7 PUSH2 0x1276 JUMP JUMPDEST POP PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x2 DUP3 AND PUSH2 0x23AD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ PUSH2 0x232C JUMPI PUSH2 0x232C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP7 ADDRESS DUP7 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1677 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2415 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x27F8 JUMPI DUP3 ISZERO PUSH2 0x24CC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ ISZERO PUSH2 0x248A JUMPI PUSH2 0x2485 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH32 0x0 DUP6 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2722 JUMP JUMPDEST PUSH2 0x2485 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP7 PUSH32 0x0 DUP7 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4FFE34DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x4FFE34DB SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2557 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x257B SWAP2 SWAP1 PUSH2 0x348E JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xDF23B45B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDF23B45B SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x3501 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x270B SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x271F SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP1 PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F1 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP PUSH2 0xB1B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x289C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x296F SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3F SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5B DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD SWAP1 SWAP3 ADD ADD DUP8 MSTORE SWAP1 SWAP2 POP DUP3 ISZERO PUSH2 0x2B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x627DD56A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x627DD56A SWAP1 PUSH2 0x2B7E SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x31BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C7C SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CB9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CCF DUP8 DUP4 DUP4 DUP8 PUSH2 0x2D3E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2D38 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x12C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2DD1 JUMPI DUP3 MLOAD PUSH2 0x2DCA JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2DCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST POP DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1B8B DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2DE6 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x31BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E97 JUMPI PUSH2 0x2E97 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2EDD JUMPI PUSH2 0x2EDD PUSH2 0x2E3C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2F3A DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2F51 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x2F68 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F90 DUP10 DUP3 DUP11 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2FC5 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2FDC DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2FF3 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x300A DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3032 DUP12 DUP3 DUP13 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306E DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x307E DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x30A6 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x310C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x311E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3148 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3130 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D38 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x316B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x312D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x318D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x312D JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x30A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x322D JUMPI PUSH2 0x322D PUSH2 0x31EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3244 JUMPI PUSH2 0x3244 PUSH2 0x31EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x30A6 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x329E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32A7 DUP5 PUSH2 0x3266 JUMP JUMPDEST SWAP3 POP PUSH2 0x32B5 PUSH1 0x20 DUP6 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x32CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3311 JUMPI PUSH2 0x3311 PUSH2 0x31EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x334C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x338C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x31EB JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x33FA JUMPI PUSH2 0x33FA PUSH2 0x31EB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP7 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP6 PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CCF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x345D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x34C3 JUMPI PUSH2 0x34C3 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x34CF DUP4 PUSH2 0x346E JUMP JUMPDEST DUP2 MSTORE PUSH2 0x34DD PUSH1 0x20 DUP5 ADD PUSH2 0x346E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3536 JUMPI PUSH2 0x3536 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x3542 DUP4 PUSH2 0x34E9 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3550 PUSH1 0x20 DUP5 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3561 PUSH1 0x40 DUP5 ADD PUSH2 0x346E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DIFFICULTY JUMP LOG1 0xD8 0xBD 0xD3 0xDD SWAP7 0xDE 0xC0 0xAF 0xD1 PUSH1 0x2B 0x5F 0xDE SWAP2 CREATE 0xD 0xA7 0xBB 0x5F 0x2C 0xCF DUP11 0xF6 DUP8 0xB2 EQ EQ 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"1106:16421:8:-:0;;;1580:26;;;-1:-1:-1;;;;1611:24:8;-1:-1:-1;;;1611:24:8;;;2024:293;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:5;936:18:0;:32::i;:::-;-1:-1:-1;;;;;2100:38:8;;;;2145:14;:40;;-1:-1:-1;;;;;;2145:40:8;591:42;2145:40;;;:14;2194:118;2215:19;:26;2211:1;:30;2194:118;;;2300:4;2257:16;:40;2274:19;2294:1;2274:22;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2257:40:8;;;;;;;;;;;-1:-1:-1;2257:40:8;:47;;-1:-1:-1;;2257:47:8;;;;;;;;;;2243:3;;;;:::i;:::-;;;;2194:118;;;;2024:293;;1106:16421;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:15:-;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1214;432:6;440;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;532:40;562:9;532:40;:::i;:::-;591:2;622:18;;;616:25;522:50;;-1:-1:-1;591:2:15;-1:-1:-1;;;;;690:14:15;;;687:34;;;717:1;714;707:12;687:34;755:6;744:9;740:22;730:32;;800:7;793:4;789:2;785:13;781:27;771:55;;822:1;819;812:12;771:55;851:2;845:9;873:2;869;866:10;863:36;;;879:18;;:::i;:::-;925:2;922:1;918:10;957:2;951:9;1020:2;1016:7;1011:2;1007;1003:11;999:25;991:6;987:38;1075:6;1063:10;1060:22;1055:2;1043:10;1040:18;1037:46;1034:72;;;1086:18;;:::i;:::-;1122:2;1115:22;1172:18;;;1206:15;;;;-1:-1:-1;1248:11:15;;;1244:20;;;1276:19;;;1273:39;;;1308:1;1305;1298:12;1273:39;1332:11;;;;1352:159;1368:6;1363:3;1360:15;1352:159;;;1434:34;1464:3;1434:34;:::i;:::-;1422:47;;1385:12;;;;1489;;;;1352:159;;;1530:6;1520:16;;;;;;;;328:1214;;;;;:::o;1547:127::-;1608:10;1603:3;1599:20;1596:1;1589:31;1639:4;1636:1;1629:15;1663:4;1660:1;1653:15;1679:232;1718:3;-1:-1:-1;;1739:17:15;;1736:140;;;1798:10;1793:3;1789:20;1786:1;1779:31;1833:4;1830:1;1823:15;1861:4;1858:1;1851:15;1736:140;-1:-1:-1;1903:1:15;1892:13;;1679:232::o;:::-;1106:16421:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2329":{"entryPoint":null,"id":2329,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_506":{"entryPoint":5760,"id":506,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":4480,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_849":{"entryPoint":null,"id":849,"parameterSlots":0,"returnSlots":1},"@_revert_836":{"entryPoint":null,"id":836,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":4609,"id":111,"parameterSlots":1,"returnSlots":0},"@applyPermit_2670":{"entryPoint":5613,"id":2670,"parameterSlots":2,"returnSlots":0},"@bentoBox_2190":{"entryPoint":null,"id":2190,"parameterSlots":0,"returnSlots":0},"@bentoBridge_3259":{"entryPoint":9199,"id":3259,"parameterSlots":4,"returnSlots":0},"@createStream_870":{"entryPoint":null,"id":870,"parameterSlots":1,"returnSlots":1},"@distributeAndSwap_2820":{"entryPoint":6028,"id":2820,"parameterSlots":4,"returnSlots":0},"@functionCallWithValue_661":{"entryPoint":11201,"id":661,"parameterSlots":4,"returnSlots":1},"@functionCall_597":{"entryPoint":7036,"id":597,"parameterSlots":3,"returnSlots":1},"@isContract_525":{"entryPoint":null,"id":525,"parameterSlots":1,"returnSlots":1},"@isNotEmpty_889":{"entryPoint":null,"id":889,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@pause_2314":{"entryPoint":1259,"id":2314,"parameterSlots":0,"returnSlots":0},"@processInsideBento_2923":{"entryPoint":5266,"id":2923,"parameterSlots":1,"returnSlots":0},"@processMyERC20_2739":{"entryPoint":4943,"id":2739,"parameterSlots":1,"returnSlots":0},"@processNative_2695":{"entryPoint":5196,"id":2695,"parameterSlots":1,"returnSlots":0},"@processOnePool_2843":{"entryPoint":5233,"id":2843,"parameterSlots":1,"returnSlots":0},"@processRouteInternal_2615":{"entryPoint":2851,"id":2615,"parameterSlots":6,"returnSlots":1},"@processRoute_2359":{"entryPoint":813,"id":2359,"parameterSlots":6,"returnSlots":1},"@processUserERC20_2762":{"entryPoint":5164,"id":2762,"parameterSlots":2,"returnSlots":0},"@readAddress_943":{"entryPoint":null,"id":943,"parameterSlots":1,"returnSlots":1},"@readBytes32_934":{"entryPoint":null,"id":934,"parameterSlots":1,"returnSlots":1},"@readBytes_952":{"entryPoint":null,"id":952,"parameterSlots":1,"returnSlots":1},"@readUint16_907":{"entryPoint":null,"id":907,"parameterSlots":1,"returnSlots":1},"@readUint8_898":{"entryPoint":null,"id":898,"parameterSlots":1,"returnSlots":1},"@readUint_925":{"entryPoint":null,"id":925,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":1239,"id":68,"parameterSlots":0,"returnSlots":0},"@resume_2324":{"entryPoint":543,"id":2324,"parameterSlots":0,"returnSlots":0},"@safePermit_468":{"entryPoint":6396,"id":468,"parameterSlots":8,"returnSlots":0},"@safeTransferFrom_284":{"entryPoint":11482,"id":284,"parameterSlots":4,"returnSlots":0},"@safeTransfer_258":{"entryPoint":4726,"id":258,"parameterSlots":3,"returnSlots":0},"@setPriviledge_2304":{"entryPoint":2144,"id":2304,"parameterSlots":2,"returnSlots":0},"@swapTrident_3466":{"entryPoint":10825,"id":3466,"parameterSlots":4,"returnSlots":0},"@swapUniV2_3420":{"entryPoint":7059,"id":3420,"parameterSlots":4,"returnSlots":0},"@swapUniV3_3566":{"entryPoint":7948,"id":3566,"parameterSlots":4,"returnSlots":0},"@swap_3001":{"entryPoint":6119,"id":3001,"parameterSlots":4,"returnSlots":0},"@transferOwnership_91":{"entryPoint":2238,"id":91,"parameterSlots":1,"returnSlots":0},"@transferValueAndprocessRoute_2415":{"entryPoint":1524,"id":2415,"parameterSlots":8,"returnSlots":1},"@uniswapV3SwapCallback_3627":{"entryPoint":2421,"id":3627,"parameterSlots":4,"returnSlots":0},"@verifyCallResultFromTarget_792":{"entryPoint":11582,"id":792,"parameterSlots":4,"returnSlots":1},"@wrapNative_3114":{"entryPoint":8688,"id":3114,"parameterSlots":4,"returnSlots":0},"abi_decode_bytes":{"entryPoint":11883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr":{"entryPoint":12189,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12368,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr":{"entryPoint":12054,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256t_int256_fromMemory":{"entryPoint":13386,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr":{"entryPoint":12461,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory":{"entryPoint":13454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory":{"entryPoint":13569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory":{"entryPoint":12937,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint112_fromMemory":{"entryPoint":12902,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint128_fromMemory":{"entryPoint":13422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64_fromMemory":{"entryPoint":13545,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":12661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13315,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0b5b4205be21de03eec6126ff0426ce9ddd0d46725c0dc1f1fbc15f95e7c18d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_109b5fa48dfe29b659aee04f834cca4dcdb7c1a898e22af0dbdba611710e847d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2fd7b2e744765339cba0d4b70781f674fdce5c117f6e5c0ea00c1673e8933f74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ebc182e7c46fc6349e1408fd903da9c1df4edd533f302c0976acd00016bf545__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_42a80a7be8a33858f4be3424bda19c8de91fa9a2d1474de6a845eae9c001c5f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4ae490f2240c03b2196588ec720ea6bf1857f74b857b3d5f1d6ebac9f7aaeb8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52366735308a5c07bd0e6762eb3c371a1df692a70693d51f6c7b4f1dff080a40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e54319434d3864e8dd7c4cd9cdb6a79d069e029c55c261818cbfc4d729db80b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98fc47eac89460486ae0b70a66337c2e351938a89c3f85906555a17c179a0256__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d4d063a9d0e76bbc10089bd8d53d485ba0d69dcf634aebb1459c19fb7eb67be9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13137,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_t_uint160":{"entryPoint":13259,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12826,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13078,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":13017,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint160":{"entryPoint":13206,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12850,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":12589,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x11":{"entryPoint":12779,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11836,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":11802,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":12354,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23896:15","statements":[{"nodeType":"YulBlock","src":"6:3:15","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:109:15","statements":[{"body":{"nodeType":"YulBlock","src":"146:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"155:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"158:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"148:6:15"},"nodeType":"YulFunctionCall","src":"148:12:15"},"nodeType":"YulExpressionStatement","src":"148:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"100:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:15"},"nodeType":"YulFunctionCall","src":"89:54:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:15"},"nodeType":"YulFunctionCall","src":"79:65:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:15"},"nodeType":"YulFunctionCall","src":"72:73:15"},"nodeType":"YulIf","src":"69:93:15"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:15","type":""}],"src":"14:154:15"},{"body":{"nodeType":"YulBlock","src":"205:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"222:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"225:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"215:6:15"},"nodeType":"YulFunctionCall","src":"215:88:15"},"nodeType":"YulExpressionStatement","src":"215:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"319:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"322:4:15","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"312:6:15"},"nodeType":"YulFunctionCall","src":"312:15:15"},"nodeType":"YulExpressionStatement","src":"312:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"336:6:15"},"nodeType":"YulFunctionCall","src":"336:15:15"},"nodeType":"YulExpressionStatement","src":"336:15:15"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"173:184:15"},{"body":{"nodeType":"YulBlock","src":"414:725:15","statements":[{"body":{"nodeType":"YulBlock","src":"463:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"475:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"465:6:15"},"nodeType":"YulFunctionCall","src":"465:12:15"},"nodeType":"YulExpressionStatement","src":"465:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"442:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"450:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"438:3:15"},"nodeType":"YulFunctionCall","src":"438:17:15"},{"name":"end","nodeType":"YulIdentifier","src":"457:3:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"434:3:15"},"nodeType":"YulFunctionCall","src":"434:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"427:6:15"},"nodeType":"YulFunctionCall","src":"427:35:15"},"nodeType":"YulIf","src":"424:55:15"},{"nodeType":"YulVariableDeclaration","src":"488:30:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"511:6:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"498:12:15"},"nodeType":"YulFunctionCall","src":"498:20:15"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"492:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"527:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"537:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"531:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"578:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"580:16:15"},"nodeType":"YulFunctionCall","src":"580:18:15"},"nodeType":"YulExpressionStatement","src":"580:18:15"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"570:2:15"},{"name":"_2","nodeType":"YulIdentifier","src":"574:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"567:2:15"},"nodeType":"YulFunctionCall","src":"567:10:15"},"nodeType":"YulIf","src":"564:36:15"},{"nodeType":"YulVariableDeclaration","src":"609:76:15","value":{"kind":"number","nodeType":"YulLiteral","src":"619:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"613:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"694:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"714:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"708:5:15"},"nodeType":"YulFunctionCall","src":"708:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"698:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"726:71:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"748:6:15"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"772:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"776:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"768:3:15"},"nodeType":"YulFunctionCall","src":"768:13:15"},{"name":"_3","nodeType":"YulIdentifier","src":"783:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"764:3:15"},"nodeType":"YulFunctionCall","src":"764:22:15"},{"kind":"number","nodeType":"YulLiteral","src":"788:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"760:3:15"},"nodeType":"YulFunctionCall","src":"760:31:15"},{"name":"_3","nodeType":"YulIdentifier","src":"793:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:15"},"nodeType":"YulFunctionCall","src":"756:40:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"744:3:15"},"nodeType":"YulFunctionCall","src":"744:53:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"730:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"856:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"858:16:15"},"nodeType":"YulFunctionCall","src":"858:18:15"},"nodeType":"YulExpressionStatement","src":"858:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"815:10:15"},{"name":"_2","nodeType":"YulIdentifier","src":"827:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"812:2:15"},"nodeType":"YulFunctionCall","src":"812:18:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"835:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"847:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"832:2:15"},"nodeType":"YulFunctionCall","src":"832:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"809:2:15"},"nodeType":"YulFunctionCall","src":"809:46:15"},"nodeType":"YulIf","src":"806:72:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"894:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"898:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"887:6:15"},"nodeType":"YulFunctionCall","src":"887:22:15"},"nodeType":"YulExpressionStatement","src":"887:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"925:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"933:2:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"918:6:15"},"nodeType":"YulFunctionCall","src":"918:18:15"},"nodeType":"YulExpressionStatement","src":"918:18:15"},{"body":{"nodeType":"YulBlock","src":"984:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"993:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"996:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"986:6:15"},"nodeType":"YulFunctionCall","src":"986:12:15"},"nodeType":"YulExpressionStatement","src":"986:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"959:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"967:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:15"},"nodeType":"YulFunctionCall","src":"955:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"972:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:15"},"nodeType":"YulFunctionCall","src":"951:26:15"},{"name":"end","nodeType":"YulIdentifier","src":"979:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"948:2:15"},"nodeType":"YulFunctionCall","src":"948:35:15"},"nodeType":"YulIf","src":"945:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1026:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1034:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1022:3:15"},"nodeType":"YulFunctionCall","src":"1022:17:15"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1045:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1041:3:15"},"nodeType":"YulFunctionCall","src":"1041:17:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1060:2:15"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1009:12:15"},"nodeType":"YulFunctionCall","src":"1009:54:15"},"nodeType":"YulExpressionStatement","src":"1009:54:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"1095:2:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:15"},"nodeType":"YulFunctionCall","src":"1083:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"1100:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:15"},"nodeType":"YulFunctionCall","src":"1079:26:15"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1072:6:15"},"nodeType":"YulFunctionCall","src":"1072:37:15"},"nodeType":"YulExpressionStatement","src":"1072:37:15"},{"nodeType":"YulAssignment","src":"1118:15:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1127:6:15"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1118:5:15"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"388:6:15","type":""},{"name":"end","nodeType":"YulTypedName","src":"396:3:15","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"404:5:15","type":""}],"src":"362:777:15"},{"body":{"nodeType":"YulBlock","src":"1308:712:15","statements":[{"body":{"nodeType":"YulBlock","src":"1355:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1364:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1367:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1357:6:15"},"nodeType":"YulFunctionCall","src":"1357:12:15"},"nodeType":"YulExpressionStatement","src":"1357:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1329:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"1338:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1325:3:15"},"nodeType":"YulFunctionCall","src":"1325:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"1350:3:15","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1321:3:15"},"nodeType":"YulFunctionCall","src":"1321:33:15"},"nodeType":"YulIf","src":"1318:53:15"},{"nodeType":"YulVariableDeclaration","src":"1380:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1393:12:15"},"nodeType":"YulFunctionCall","src":"1393:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1384:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1450:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1425:24:15"},"nodeType":"YulFunctionCall","src":"1425:31:15"},"nodeType":"YulExpressionStatement","src":"1425:31:15"},{"nodeType":"YulAssignment","src":"1465:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"1475:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1465:6:15"}]},{"nodeType":"YulAssignment","src":"1489:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1516:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1527:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:15"},"nodeType":"YulFunctionCall","src":"1512:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:15"},"nodeType":"YulFunctionCall","src":"1499:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1489:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1540:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1572:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1583:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1568:3:15"},"nodeType":"YulFunctionCall","src":"1568:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1555:12:15"},"nodeType":"YulFunctionCall","src":"1555:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1544:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1621:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1596:24:15"},"nodeType":"YulFunctionCall","src":"1596:33:15"},"nodeType":"YulExpressionStatement","src":"1596:33:15"},{"nodeType":"YulAssignment","src":"1638:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1648:7:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1638:6:15"}]},{"nodeType":"YulAssignment","src":"1664:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1691:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1702:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1687:3:15"},"nodeType":"YulFunctionCall","src":"1687:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1674:12:15"},"nodeType":"YulFunctionCall","src":"1674:32:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1664:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1715:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1747:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1758:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1743:3:15"},"nodeType":"YulFunctionCall","src":"1743:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1730:12:15"},"nodeType":"YulFunctionCall","src":"1730:33:15"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1719:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1797:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1772:24:15"},"nodeType":"YulFunctionCall","src":"1772:33:15"},"nodeType":"YulExpressionStatement","src":"1772:33:15"},{"nodeType":"YulAssignment","src":"1814:17:15","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1824:7:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1814:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"1840:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1882:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1867:3:15"},"nodeType":"YulFunctionCall","src":"1867:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1854:12:15"},"nodeType":"YulFunctionCall","src":"1854:33:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1844:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"1930:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1939:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1942:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1932:6:15"},"nodeType":"YulFunctionCall","src":"1932:12:15"},"nodeType":"YulExpressionStatement","src":"1932:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1902:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"1910:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1899:2:15"},"nodeType":"YulFunctionCall","src":"1899:30:15"},"nodeType":"YulIf","src":"1896:50:15"},{"nodeType":"YulAssignment","src":"1955:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:15"},"nodeType":"YulFunctionCall","src":"1982:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2006:7:15"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"1965:16:15"},"nodeType":"YulFunctionCall","src":"1965:49:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1955:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1234:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1245:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1257:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1265:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1273:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1281:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1289:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1297:6:15","type":""}],"src":"1144:876:15"},{"body":{"nodeType":"YulBlock","src":"2126:76:15","statements":[{"nodeType":"YulAssignment","src":"2136:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:15"},"nodeType":"YulFunctionCall","src":"2144:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2136:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2178:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"2189:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2171:6:15"},"nodeType":"YulFunctionCall","src":"2171:25:15"},"nodeType":"YulExpressionStatement","src":"2171:25:15"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2095:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2106:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2117:4:15","type":""}],"src":"2025:177:15"},{"body":{"nodeType":"YulBlock","src":"2333:125:15","statements":[{"nodeType":"YulAssignment","src":"2343:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2355:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2366:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2351:3:15"},"nodeType":"YulFunctionCall","src":"2351:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2343:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2385:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2400:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2408:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2396:3:15"},"nodeType":"YulFunctionCall","src":"2396:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2378:6:15"},"nodeType":"YulFunctionCall","src":"2378:74:15"},"nodeType":"YulExpressionStatement","src":"2378:74:15"}]},"name":"abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2302:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2313:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2324:4:15","type":""}],"src":"2207:251:15"},{"body":{"nodeType":"YulBlock","src":"2564:125:15","statements":[{"nodeType":"YulAssignment","src":"2574:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2586:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2597:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2582:3:15"},"nodeType":"YulFunctionCall","src":"2582:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2574:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2616:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2631:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"2639:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2627:3:15"},"nodeType":"YulFunctionCall","src":"2627:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2609:6:15"},"nodeType":"YulFunctionCall","src":"2609:74:15"},"nodeType":"YulExpressionStatement","src":"2609:74:15"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2533:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2544:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2555:4:15","type":""}],"src":"2463:226:15"},{"body":{"nodeType":"YulBlock","src":"2900:889:15","statements":[{"body":{"nodeType":"YulBlock","src":"2947:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2956:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2949:6:15"},"nodeType":"YulFunctionCall","src":"2949:12:15"},"nodeType":"YulExpressionStatement","src":"2949:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2921:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2917:3:15"},"nodeType":"YulFunctionCall","src":"2917:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"2942:3:15","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2913:3:15"},"nodeType":"YulFunctionCall","src":"2913:33:15"},"nodeType":"YulIf","src":"2910:53:15"},{"nodeType":"YulVariableDeclaration","src":"2972:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2985:12:15"},"nodeType":"YulFunctionCall","src":"2985:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2976:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3042:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3017:24:15"},"nodeType":"YulFunctionCall","src":"3017:31:15"},"nodeType":"YulExpressionStatement","src":"3017:31:15"},{"nodeType":"YulAssignment","src":"3057:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"3067:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3057:6:15"}]},{"nodeType":"YulAssignment","src":"3081:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3108:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3119:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3104:3:15"},"nodeType":"YulFunctionCall","src":"3104:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3091:12:15"},"nodeType":"YulFunctionCall","src":"3091:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3081:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3132:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3164:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3175:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:15"},"nodeType":"YulFunctionCall","src":"3160:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3147:12:15"},"nodeType":"YulFunctionCall","src":"3147:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3136:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3213:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3188:24:15"},"nodeType":"YulFunctionCall","src":"3188:33:15"},"nodeType":"YulExpressionStatement","src":"3188:33:15"},{"nodeType":"YulAssignment","src":"3230:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3240:7:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3230:6:15"}]},{"nodeType":"YulAssignment","src":"3256:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3283:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3294:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3279:3:15"},"nodeType":"YulFunctionCall","src":"3279:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3266:12:15"},"nodeType":"YulFunctionCall","src":"3266:32:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3256:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3307:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3339:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3350:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3335:3:15"},"nodeType":"YulFunctionCall","src":"3335:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3322:12:15"},"nodeType":"YulFunctionCall","src":"3322:33:15"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"3311:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"3389:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3364:24:15"},"nodeType":"YulFunctionCall","src":"3364:33:15"},"nodeType":"YulExpressionStatement","src":"3364:33:15"},{"nodeType":"YulAssignment","src":"3406:17:15","value":{"name":"value_2","nodeType":"YulIdentifier","src":"3416:7:15"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3406:6:15"}]},{"nodeType":"YulAssignment","src":"3432:43:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3459:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3470:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3455:3:15"},"nodeType":"YulFunctionCall","src":"3455:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3442:12:15"},"nodeType":"YulFunctionCall","src":"3442:33:15"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3432:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3484:48:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3516:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3527:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3512:3:15"},"nodeType":"YulFunctionCall","src":"3512:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3499:12:15"},"nodeType":"YulFunctionCall","src":"3499:33:15"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"3488:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"3566:7:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3541:24:15"},"nodeType":"YulFunctionCall","src":"3541:33:15"},"nodeType":"YulExpressionStatement","src":"3541:33:15"},{"nodeType":"YulAssignment","src":"3583:17:15","value":{"name":"value_3","nodeType":"YulIdentifier","src":"3593:7:15"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3583:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"3609:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3640:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"3651:3:15","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3636:3:15"},"nodeType":"YulFunctionCall","src":"3636:19:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3623:12:15"},"nodeType":"YulFunctionCall","src":"3623:33:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3613:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"3699:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3708:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3711:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3701:6:15"},"nodeType":"YulFunctionCall","src":"3701:12:15"},"nodeType":"YulExpressionStatement","src":"3701:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3671:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3679:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3668:2:15"},"nodeType":"YulFunctionCall","src":"3668:30:15"},"nodeType":"YulIf","src":"3665:50:15"},{"nodeType":"YulAssignment","src":"3724:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3755:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"3766:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3751:3:15"},"nodeType":"YulFunctionCall","src":"3751:22:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3775:7:15"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3734:16:15"},"nodeType":"YulFunctionCall","src":"3734:49:15"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3724:6:15"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2810:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2821:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2833:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2841:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2849:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2857:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2865:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2873:6:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2881:6:15","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2889:6:15","type":""}],"src":"2694:1095:15"},{"body":{"nodeType":"YulBlock","src":"3836:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"3890:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3899:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3902:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3892:6:15"},"nodeType":"YulFunctionCall","src":"3892:12:15"},"nodeType":"YulExpressionStatement","src":"3892:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3859:5:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3880:5:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3873:6:15"},"nodeType":"YulFunctionCall","src":"3873:13:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3866:6:15"},"nodeType":"YulFunctionCall","src":"3866:21:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3856:2:15"},"nodeType":"YulFunctionCall","src":"3856:32:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3849:6:15"},"nodeType":"YulFunctionCall","src":"3849:40:15"},"nodeType":"YulIf","src":"3846:60:15"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3825:5:15","type":""}],"src":"3794:118:15"},{"body":{"nodeType":"YulBlock","src":"4001:298:15","statements":[{"body":{"nodeType":"YulBlock","src":"4047:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4056:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4059:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4049:6:15"},"nodeType":"YulFunctionCall","src":"4049:12:15"},"nodeType":"YulExpressionStatement","src":"4049:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4022:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4018:3:15"},"nodeType":"YulFunctionCall","src":"4018:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4043:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4014:3:15"},"nodeType":"YulFunctionCall","src":"4014:32:15"},"nodeType":"YulIf","src":"4011:52:15"},{"nodeType":"YulVariableDeclaration","src":"4072:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4098:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4085:12:15"},"nodeType":"YulFunctionCall","src":"4085:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4076:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4142:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4117:24:15"},"nodeType":"YulFunctionCall","src":"4117:31:15"},"nodeType":"YulExpressionStatement","src":"4117:31:15"},{"nodeType":"YulAssignment","src":"4157:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"4167:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4157:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"4181:47:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4213:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4224:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4209:3:15"},"nodeType":"YulFunctionCall","src":"4209:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4196:12:15"},"nodeType":"YulFunctionCall","src":"4196:32:15"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4185:7:15","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4259:7:15"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4237:21:15"},"nodeType":"YulFunctionCall","src":"4237:30:15"},"nodeType":"YulExpressionStatement","src":"4237:30:15"},{"nodeType":"YulAssignment","src":"4276:17:15","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4286:7:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4276:6:15"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3959:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3970:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3982:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3990:6:15","type":""}],"src":"3917:382:15"},{"body":{"nodeType":"YulBlock","src":"4374:177:15","statements":[{"body":{"nodeType":"YulBlock","src":"4420:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4429:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4432:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4422:6:15"},"nodeType":"YulFunctionCall","src":"4422:12:15"},"nodeType":"YulExpressionStatement","src":"4422:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4395:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4391:3:15"},"nodeType":"YulFunctionCall","src":"4391:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4416:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4387:3:15"},"nodeType":"YulFunctionCall","src":"4387:32:15"},"nodeType":"YulIf","src":"4384:52:15"},{"nodeType":"YulVariableDeclaration","src":"4445:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4471:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4458:12:15"},"nodeType":"YulFunctionCall","src":"4458:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4449:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4515:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4490:24:15"},"nodeType":"YulFunctionCall","src":"4490:31:15"},"nodeType":"YulExpressionStatement","src":"4490:31:15"},{"nodeType":"YulAssignment","src":"4530:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"4540:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4530:6:15"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4340:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4351:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4363:6:15","type":""}],"src":"4304:247:15"},{"body":{"nodeType":"YulBlock","src":"4677:604:15","statements":[{"body":{"nodeType":"YulBlock","src":"4723:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4732:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4735:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4725:6:15"},"nodeType":"YulFunctionCall","src":"4725:12:15"},"nodeType":"YulExpressionStatement","src":"4725:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4698:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"4707:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4694:3:15"},"nodeType":"YulFunctionCall","src":"4694:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4719:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4690:3:15"},"nodeType":"YulFunctionCall","src":"4690:32:15"},"nodeType":"YulIf","src":"4687:52:15"},{"nodeType":"YulAssignment","src":"4748:33:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4758:12:15"},"nodeType":"YulFunctionCall","src":"4758:23:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4748:6:15"}]},{"nodeType":"YulAssignment","src":"4790:42:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4828:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:15"},"nodeType":"YulFunctionCall","src":"4813:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4800:12:15"},"nodeType":"YulFunctionCall","src":"4800:32:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4790:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"4841:46:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4872:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"4883:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4868:3:15"},"nodeType":"YulFunctionCall","src":"4868:18:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4855:12:15"},"nodeType":"YulFunctionCall","src":"4855:32:15"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4845:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4896:28:15","value":{"kind":"number","nodeType":"YulLiteral","src":"4906:18:15","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4900:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"4951:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4960:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4963:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4953:6:15"},"nodeType":"YulFunctionCall","src":"4953:12:15"},"nodeType":"YulExpressionStatement","src":"4953:12:15"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4939:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"4947:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4936:2:15"},"nodeType":"YulFunctionCall","src":"4936:14:15"},"nodeType":"YulIf","src":"4933:34:15"},{"nodeType":"YulVariableDeclaration","src":"4976:32:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4990:9:15"},{"name":"offset","nodeType":"YulIdentifier","src":"5001:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4986:3:15"},"nodeType":"YulFunctionCall","src":"4986:22:15"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4980:2:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5056:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5065:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5068:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5058:6:15"},"nodeType":"YulFunctionCall","src":"5058:12:15"},"nodeType":"YulExpressionStatement","src":"5058:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5035:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"5039:4:15","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:15"},"nodeType":"YulFunctionCall","src":"5031:13:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5046:7:15"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5027:3:15"},"nodeType":"YulFunctionCall","src":"5027:27:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5020:6:15"},"nodeType":"YulFunctionCall","src":"5020:35:15"},"nodeType":"YulIf","src":"5017:55:15"},{"nodeType":"YulVariableDeclaration","src":"5081:30:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5108:2:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5095:12:15"},"nodeType":"YulFunctionCall","src":"5095:16:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5085:6:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"5138:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5147:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5150:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5140:6:15"},"nodeType":"YulFunctionCall","src":"5140:12:15"},"nodeType":"YulExpressionStatement","src":"5140:12:15"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5126:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"5134:2:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5123:2:15"},"nodeType":"YulFunctionCall","src":"5123:14:15"},"nodeType":"YulIf","src":"5120:34:15"},{"body":{"nodeType":"YulBlock","src":"5204:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5213:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5216:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5206:6:15"},"nodeType":"YulFunctionCall","src":"5206:12:15"},"nodeType":"YulExpressionStatement","src":"5206:12:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5177:2:15"},{"name":"length","nodeType":"YulIdentifier","src":"5181:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5173:3:15"},"nodeType":"YulFunctionCall","src":"5173:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"5190:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5169:3:15"},"nodeType":"YulFunctionCall","src":"5169:24:15"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5195:7:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5166:2:15"},"nodeType":"YulFunctionCall","src":"5166:37:15"},"nodeType":"YulIf","src":"5163:57:15"},{"nodeType":"YulAssignment","src":"5229:21:15","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5243:2:15"},{"kind":"number","nodeType":"YulLiteral","src":"5247:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5239:3:15"},"nodeType":"YulFunctionCall","src":"5239:11:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5229:6:15"}]},{"nodeType":"YulAssignment","src":"5259:16:15","value":{"name":"length","nodeType":"YulIdentifier","src":"5269:6:15"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5259:6:15"}]}]},"name":"abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4619:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4630:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4642:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4650:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4658:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4666:6:15","type":""}],"src":"4556:725:15"},{"body":{"nodeType":"YulBlock","src":"5460:239:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5477:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5488:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5470:6:15"},"nodeType":"YulFunctionCall","src":"5470:21:15"},"nodeType":"YulExpressionStatement","src":"5470:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5511:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5522:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5507:3:15"},"nodeType":"YulFunctionCall","src":"5507:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"5527:2:15","type":"","value":"49"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5500:6:15"},"nodeType":"YulFunctionCall","src":"5500:30:15"},"nodeType":"YulExpressionStatement","src":"5500:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5550:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5561:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5546:3:15"},"nodeType":"YulFunctionCall","src":"5546:18:15"},{"hexValue":"52503a2063616c6c6572206973206e6f7420746865206f776e6572206f722061","kind":"string","nodeType":"YulLiteral","src":"5566:34:15","type":"","value":"RP: caller is not the owner or a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5539:6:15"},"nodeType":"YulFunctionCall","src":"5539:62:15"},"nodeType":"YulExpressionStatement","src":"5539:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5621:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5632:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5617:3:15"},"nodeType":"YulFunctionCall","src":"5617:18:15"},{"hexValue":"2070726976696c65646765642075736572","kind":"string","nodeType":"YulLiteral","src":"5637:19:15","type":"","value":" priviledged user"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5610:6:15"},"nodeType":"YulFunctionCall","src":"5610:47:15"},"nodeType":"YulExpressionStatement","src":"5610:47:15"},{"nodeType":"YulAssignment","src":"5666:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5678:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5689:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5674:3:15"},"nodeType":"YulFunctionCall","src":"5674:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5666:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_d4d063a9d0e76bbc10089bd8d53d485ba0d69dcf634aebb1459c19fb7eb67be9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5437:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5451:4:15","type":""}],"src":"5286:413:15"},{"body":{"nodeType":"YulBlock","src":"5878:174:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5895:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5906:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5888:6:15"},"nodeType":"YulFunctionCall","src":"5888:21:15"},"nodeType":"YulExpressionStatement","src":"5888:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5929:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5940:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5925:3:15"},"nodeType":"YulFunctionCall","src":"5925:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"5945:2:15","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5918:6:15"},"nodeType":"YulFunctionCall","src":"5918:30:15"},"nodeType":"YulExpressionStatement","src":"5918:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5968:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"5979:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5964:3:15"},"nodeType":"YulFunctionCall","src":"5964:18:15"},{"hexValue":"526f75746550726f636573736f72206973206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"5984:26:15","type":"","value":"RouteProcessor is locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5957:6:15"},"nodeType":"YulFunctionCall","src":"5957:54:15"},"nodeType":"YulExpressionStatement","src":"5957:54:15"},{"nodeType":"YulAssignment","src":"6020:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6043:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:15"},"nodeType":"YulFunctionCall","src":"6028:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6020:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5855:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5869:4:15","type":""}],"src":"5704:348:15"},{"body":{"nodeType":"YulBlock","src":"6231:174:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6248:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6259:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6241:6:15"},"nodeType":"YulFunctionCall","src":"6241:21:15"},"nodeType":"YulExpressionStatement","src":"6241:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:15"},"nodeType":"YulFunctionCall","src":"6278:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"6298:2:15","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6271:6:15"},"nodeType":"YulFunctionCall","src":"6271:30:15"},"nodeType":"YulExpressionStatement","src":"6271:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6321:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6332:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6317:3:15"},"nodeType":"YulFunctionCall","src":"6317:18:15"},{"hexValue":"526f75746550726f636573736f7220697320706175736564","kind":"string","nodeType":"YulLiteral","src":"6337:26:15","type":"","value":"RouteProcessor is paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6310:6:15"},"nodeType":"YulFunctionCall","src":"6310:54:15"},"nodeType":"YulExpressionStatement","src":"6310:54:15"},{"nodeType":"YulAssignment","src":"6373:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6385:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"6396:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6381:3:15"},"nodeType":"YulFunctionCall","src":"6381:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6373:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_4ae490f2240c03b2196588ec720ea6bf1857f74b857b3d5f1d6ebac9f7aaeb8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6208:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6222:4:15","type":""}],"src":"6057:348:15"},{"body":{"nodeType":"YulBlock","src":"6601:14:15","statements":[{"nodeType":"YulAssignment","src":"6603:10:15","value":{"name":"pos","nodeType":"YulIdentifier","src":"6610:3:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6603:3:15"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6585:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6593:3:15","type":""}],"src":"6410:205:15"},{"body":{"nodeType":"YulBlock","src":"6673:205:15","statements":[{"nodeType":"YulVariableDeclaration","src":"6683:10:15","value":{"kind":"number","nodeType":"YulLiteral","src":"6692:1:15","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6687:1:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"6752:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6777:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"6782:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6773:3:15"},"nodeType":"YulFunctionCall","src":"6773:11:15"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6796:3:15"},{"name":"i","nodeType":"YulIdentifier","src":"6801:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:15"},"nodeType":"YulFunctionCall","src":"6792:11:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6786:5:15"},"nodeType":"YulFunctionCall","src":"6786:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6766:6:15"},"nodeType":"YulFunctionCall","src":"6766:39:15"},"nodeType":"YulExpressionStatement","src":"6766:39:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6713:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"6716:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6710:2:15"},"nodeType":"YulFunctionCall","src":"6710:13:15"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6724:19:15","statements":[{"nodeType":"YulAssignment","src":"6726:15:15","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6735:1:15"},{"kind":"number","nodeType":"YulLiteral","src":"6738:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6731:3:15"},"nodeType":"YulFunctionCall","src":"6731:10:15"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6726:1:15"}]}]},"pre":{"nodeType":"YulBlock","src":"6706:3:15","statements":[]},"src":"6702:113:15"},{"body":{"nodeType":"YulBlock","src":"6841:31:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6854:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"6859:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:15"},"nodeType":"YulFunctionCall","src":"6850:16:15"},{"kind":"number","nodeType":"YulLiteral","src":"6868:1:15","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6843:6:15"},"nodeType":"YulFunctionCall","src":"6843:27:15"},"nodeType":"YulExpressionStatement","src":"6843:27:15"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6830:1:15"},{"name":"length","nodeType":"YulIdentifier","src":"6833:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6827:2:15"},"nodeType":"YulFunctionCall","src":"6827:13:15"},"nodeType":"YulIf","src":"6824:48:15"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6651:3:15","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6656:3:15","type":""},{"name":"length","nodeType":"YulTypedName","src":"6661:6:15","type":""}],"src":"6620:258:15"},{"body":{"nodeType":"YulBlock","src":"7020:137:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7030:27:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7050:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7044:5:15"},"nodeType":"YulFunctionCall","src":"7044:13:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7034:6:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7092:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7100:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7088:3:15"},"nodeType":"YulFunctionCall","src":"7088:17:15"},{"name":"pos","nodeType":"YulIdentifier","src":"7107:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7112:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7066:21:15"},"nodeType":"YulFunctionCall","src":"7066:53:15"},"nodeType":"YulExpressionStatement","src":"7066:53:15"},{"nodeType":"YulAssignment","src":"7128:23:15","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7139:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7144:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7135:3:15"},"nodeType":"YulFunctionCall","src":"7135:16:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7128:3:15"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6996:3:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7001:6:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7012:3:15","type":""}],"src":"6883:274:15"},{"body":{"nodeType":"YulBlock","src":"7212:267:15","statements":[{"nodeType":"YulVariableDeclaration","src":"7222:26:15","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7242:5:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7236:5:15"},"nodeType":"YulFunctionCall","src":"7236:12:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7226:6:15","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7264:3:15"},{"name":"length","nodeType":"YulIdentifier","src":"7269:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7257:6:15"},"nodeType":"YulFunctionCall","src":"7257:19:15"},"nodeType":"YulExpressionStatement","src":"7257:19:15"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7311:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"7318:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7307:3:15"},"nodeType":"YulFunctionCall","src":"7307:16:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7329:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"7334:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7325:3:15"},"nodeType":"YulFunctionCall","src":"7325:14:15"},{"name":"length","nodeType":"YulIdentifier","src":"7341:6:15"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7285:21:15"},"nodeType":"YulFunctionCall","src":"7285:63:15"},"nodeType":"YulExpressionStatement","src":"7285:63:15"},{"nodeType":"YulAssignment","src":"7357:116:15","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7372:3:15"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7385:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"7393:2:15","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7381:3:15"},"nodeType":"YulFunctionCall","src":"7381:15:15"},{"kind":"number","nodeType":"YulLiteral","src":"7398:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7377:3:15"},"nodeType":"YulFunctionCall","src":"7377:88:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7368:3:15"},"nodeType":"YulFunctionCall","src":"7368:98:15"},{"kind":"number","nodeType":"YulLiteral","src":"7468:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7364:3:15"},"nodeType":"YulFunctionCall","src":"7364:109:15"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7357:3:15"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7189:5:15","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7196:3:15","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7204:3:15","type":""}],"src":"7162:317:15"},{"body":{"nodeType":"YulBlock","src":"7605:99:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7622:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7633:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7615:6:15"},"nodeType":"YulFunctionCall","src":"7615:21:15"},"nodeType":"YulExpressionStatement","src":"7615:21:15"},{"nodeType":"YulAssignment","src":"7645:53:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7671:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7683:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7694:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7679:3:15"},"nodeType":"YulFunctionCall","src":"7679:18:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"7653:17:15"},"nodeType":"YulFunctionCall","src":"7653:45:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7645:4:15"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7574:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7585:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7596:4:15","type":""}],"src":"7484:220:15"},{"body":{"nodeType":"YulBlock","src":"7883:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7900:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7911:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7893:6:15"},"nodeType":"YulFunctionCall","src":"7893:21:15"},"nodeType":"YulExpressionStatement","src":"7893:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7934:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7945:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7930:3:15"},"nodeType":"YulFunctionCall","src":"7930:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"7950:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7923:6:15"},"nodeType":"YulFunctionCall","src":"7923:30:15"},"nodeType":"YulExpressionStatement","src":"7923:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7973:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"7984:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7969:3:15"},"nodeType":"YulFunctionCall","src":"7969:18:15"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7989:34:15","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7962:6:15"},"nodeType":"YulFunctionCall","src":"7962:62:15"},"nodeType":"YulExpressionStatement","src":"7962:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8044:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8055:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8040:3:15"},"nodeType":"YulFunctionCall","src":"8040:18:15"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8060:8:15","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8033:6:15"},"nodeType":"YulFunctionCall","src":"8033:36:15"},"nodeType":"YulExpressionStatement","src":"8033:36:15"},{"nodeType":"YulAssignment","src":"8078:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8090:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8101:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8086:3:15"},"nodeType":"YulFunctionCall","src":"8086:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8078:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7860:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7874:4:15","type":""}],"src":"7709:402:15"},{"body":{"nodeType":"YulBlock","src":"8290:252:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8300:6:15"},"nodeType":"YulFunctionCall","src":"8300:21:15"},"nodeType":"YulExpressionStatement","src":"8300:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8341:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8352:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:15"},"nodeType":"YulFunctionCall","src":"8337:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"8357:2:15","type":"","value":"62"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8330:6:15"},"nodeType":"YulFunctionCall","src":"8330:30:15"},"nodeType":"YulExpressionStatement","src":"8330:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8380:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8391:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8376:3:15"},"nodeType":"YulFunctionCall","src":"8376:18:15"},{"hexValue":"526f75746550726f636573736f722e756e697377617056335377617043616c6c","kind":"string","nodeType":"YulLiteral","src":"8396:34:15","type":"","value":"RouteProcessor.uniswapV3SwapCall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8369:6:15"},"nodeType":"YulFunctionCall","src":"8369:62:15"},"nodeType":"YulExpressionStatement","src":"8369:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8451:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8462:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8447:3:15"},"nodeType":"YulFunctionCall","src":"8447:18:15"},{"hexValue":"6261636b3a2063616c6c2066726f6d20756e6b6e6f776e20736f75726365","kind":"string","nodeType":"YulLiteral","src":"8467:32:15","type":"","value":"back: call from unknown source"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8440:6:15"},"nodeType":"YulFunctionCall","src":"8440:60:15"},"nodeType":"YulExpressionStatement","src":"8440:60:15"},{"nodeType":"YulAssignment","src":"8509:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8521:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"8532:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8517:3:15"},"nodeType":"YulFunctionCall","src":"8517:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8509:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ebc182e7c46fc6349e1408fd903da9c1df4edd533f302c0976acd00016bf545__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8267:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8281:4:15","type":""}],"src":"8116:426:15"},{"body":{"nodeType":"YulBlock","src":"8625:177:15","statements":[{"body":{"nodeType":"YulBlock","src":"8671:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8680:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8683:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8673:6:15"},"nodeType":"YulFunctionCall","src":"8673:12:15"},"nodeType":"YulExpressionStatement","src":"8673:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8646:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"8655:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8642:3:15"},"nodeType":"YulFunctionCall","src":"8642:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"8667:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8638:3:15"},"nodeType":"YulFunctionCall","src":"8638:32:15"},"nodeType":"YulIf","src":"8635:52:15"},{"nodeType":"YulVariableDeclaration","src":"8696:36:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:15"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8709:12:15"},"nodeType":"YulFunctionCall","src":"8709:23:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8700:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8766:5:15"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8741:24:15"},"nodeType":"YulFunctionCall","src":"8741:31:15"},"nodeType":"YulExpressionStatement","src":"8741:31:15"},{"nodeType":"YulAssignment","src":"8781:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"8791:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8781:6:15"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8591:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8602:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8614:6:15","type":""}],"src":"8547:255:15"},{"body":{"nodeType":"YulBlock","src":"8981:247:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8998:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9009:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8991:6:15"},"nodeType":"YulFunctionCall","src":"8991:21:15"},"nodeType":"YulExpressionStatement","src":"8991:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9032:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9043:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9028:3:15"},"nodeType":"YulFunctionCall","src":"9028:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9048:2:15","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9021:6:15"},"nodeType":"YulFunctionCall","src":"9021:30:15"},"nodeType":"YulExpressionStatement","src":"9021:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9071:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9082:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9067:3:15"},"nodeType":"YulFunctionCall","src":"9067:18:15"},{"hexValue":"526f75746550726f636573736f722e756e697377617056335377617043616c6c","kind":"string","nodeType":"YulLiteral","src":"9087:34:15","type":"","value":"RouteProcessor.uniswapV3SwapCall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9060:6:15"},"nodeType":"YulFunctionCall","src":"9060:62:15"},"nodeType":"YulExpressionStatement","src":"9060:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9142:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9153:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9138:3:15"},"nodeType":"YulFunctionCall","src":"9138:18:15"},{"hexValue":"6261636b3a206e6f7420706f73697469766520616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"9158:27:15","type":"","value":"back: not positive amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9131:6:15"},"nodeType":"YulFunctionCall","src":"9131:55:15"},"nodeType":"YulExpressionStatement","src":"9131:55:15"},{"nodeType":"YulAssignment","src":"9195:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9207:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9218:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9203:3:15"},"nodeType":"YulFunctionCall","src":"9203:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9195:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e54319434d3864e8dd7c4cd9cdb6a79d069e029c55c261818cbfc4d729db80b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8958:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8972:4:15","type":""}],"src":"8807:421:15"},{"body":{"nodeType":"YulBlock","src":"9314:103:15","statements":[{"body":{"nodeType":"YulBlock","src":"9360:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9369:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9372:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9362:6:15"},"nodeType":"YulFunctionCall","src":"9362:12:15"},"nodeType":"YulExpressionStatement","src":"9362:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9335:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"9344:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9331:3:15"},"nodeType":"YulFunctionCall","src":"9331:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"9356:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9327:3:15"},"nodeType":"YulFunctionCall","src":"9327:32:15"},"nodeType":"YulIf","src":"9324:52:15"},{"nodeType":"YulAssignment","src":"9385:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9401:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9395:5:15"},"nodeType":"YulFunctionCall","src":"9395:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9385:6:15"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9280:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9291:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9303:6:15","type":""}],"src":"9233:184:15"},{"body":{"nodeType":"YulBlock","src":"9596:226:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9613:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9624:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9606:6:15"},"nodeType":"YulFunctionCall","src":"9606:21:15"},"nodeType":"YulExpressionStatement","src":"9606:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9647:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9643:3:15"},"nodeType":"YulFunctionCall","src":"9643:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:15","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9636:6:15"},"nodeType":"YulFunctionCall","src":"9636:30:15"},"nodeType":"YulExpressionStatement","src":"9636:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9697:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:15"},"nodeType":"YulFunctionCall","src":"9682:18:15"},{"hexValue":"526f75746550726f636573736f723a20556e6b6e6f776e20636f6d6d616e6420","kind":"string","nodeType":"YulLiteral","src":"9702:34:15","type":"","value":"RouteProcessor: Unknown command "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9675:6:15"},"nodeType":"YulFunctionCall","src":"9675:62:15"},"nodeType":"YulExpressionStatement","src":"9675:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9757:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9768:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9753:3:15"},"nodeType":"YulFunctionCall","src":"9753:18:15"},{"hexValue":"636f6465","kind":"string","nodeType":"YulLiteral","src":"9773:6:15","type":"","value":"code"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9746:6:15"},"nodeType":"YulFunctionCall","src":"9746:34:15"},"nodeType":"YulExpressionStatement","src":"9746:34:15"},{"nodeType":"YulAssignment","src":"9789:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9801:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"9812:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9797:3:15"},"nodeType":"YulFunctionCall","src":"9797:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9789:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_0b5b4205be21de03eec6126ff0426ce9ddd0d46725c0dc1f1fbc15f95e7c18d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9573:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9587:4:15","type":""}],"src":"9422:400:15"},{"body":{"nodeType":"YulBlock","src":"9859:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9876:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9879:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9869:6:15"},"nodeType":"YulFunctionCall","src":"9869:88:15"},"nodeType":"YulExpressionStatement","src":"9869:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9973:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9976:4:15","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9966:6:15"},"nodeType":"YulFunctionCall","src":"9966:15:15"},"nodeType":"YulExpressionStatement","src":"9966:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9997:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10000:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9990:6:15"},"nodeType":"YulFunctionCall","src":"9990:15:15"},"nodeType":"YulExpressionStatement","src":"9990:15:15"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9827:184:15"},{"body":{"nodeType":"YulBlock","src":"10064:80:15","statements":[{"body":{"nodeType":"YulBlock","src":"10091:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10093:16:15"},"nodeType":"YulFunctionCall","src":"10093:18:15"},"nodeType":"YulExpressionStatement","src":"10093:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10080:1:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10087:1:15"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10083:3:15"},"nodeType":"YulFunctionCall","src":"10083:6:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10077:2:15"},"nodeType":"YulFunctionCall","src":"10077:13:15"},"nodeType":"YulIf","src":"10074:39:15"},{"nodeType":"YulAssignment","src":"10122:16:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10133:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"10136:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10129:3:15"},"nodeType":"YulFunctionCall","src":"10129:9:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10122:3:15"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10047:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"10050:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10056:3:15","type":""}],"src":"10016:128:15"},{"body":{"nodeType":"YulBlock","src":"10323:237:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10340:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10351:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10333:6:15"},"nodeType":"YulFunctionCall","src":"10333:21:15"},"nodeType":"YulExpressionStatement","src":"10333:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10385:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:15"},"nodeType":"YulFunctionCall","src":"10370:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"10390:2:15","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10363:6:15"},"nodeType":"YulFunctionCall","src":"10363:30:15"},"nodeType":"YulExpressionStatement","src":"10363:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10413:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10424:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10409:3:15"},"nodeType":"YulFunctionCall","src":"10409:18:15"},{"hexValue":"526f75746550726f636573736f723a204d696e696d616c20696d707574206261","kind":"string","nodeType":"YulLiteral","src":"10429:34:15","type":"","value":"RouteProcessor: Minimal imput ba"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10402:6:15"},"nodeType":"YulFunctionCall","src":"10402:62:15"},"nodeType":"YulExpressionStatement","src":"10402:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10484:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10495:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10480:3:15"},"nodeType":"YulFunctionCall","src":"10480:18:15"},{"hexValue":"6c616e63652076696f6c6174696f6e","kind":"string","nodeType":"YulLiteral","src":"10500:17:15","type":"","value":"lance violation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10473:6:15"},"nodeType":"YulFunctionCall","src":"10473:45:15"},"nodeType":"YulExpressionStatement","src":"10473:45:15"},{"nodeType":"YulAssignment","src":"10527:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10539:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10550:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10535:3:15"},"nodeType":"YulFunctionCall","src":"10535:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10527:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_2fd7b2e744765339cba0d4b70781f674fdce5c117f6e5c0ea00c1673e8933f74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10300:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10314:4:15","type":""}],"src":"10149:411:15"},{"body":{"nodeType":"YulBlock","src":"10739:237:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10756:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10767:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10749:6:15"},"nodeType":"YulFunctionCall","src":"10749:21:15"},"nodeType":"YulExpressionStatement","src":"10749:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10790:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10801:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10786:3:15"},"nodeType":"YulFunctionCall","src":"10786:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"10806:2:15","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10779:6:15"},"nodeType":"YulFunctionCall","src":"10779:30:15"},"nodeType":"YulExpressionStatement","src":"10779:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10840:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10825:3:15"},"nodeType":"YulFunctionCall","src":"10825:18:15"},{"hexValue":"526f75746550726f636573736f723a204d696e696d616c206f75707574206261","kind":"string","nodeType":"YulLiteral","src":"10845:34:15","type":"","value":"RouteProcessor: Minimal ouput ba"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10818:6:15"},"nodeType":"YulFunctionCall","src":"10818:62:15"},"nodeType":"YulExpressionStatement","src":"10818:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10900:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10911:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10896:3:15"},"nodeType":"YulFunctionCall","src":"10896:18:15"},{"hexValue":"6c616e63652076696f6c6174696f6e","kind":"string","nodeType":"YulLiteral","src":"10916:17:15","type":"","value":"lance violation"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10889:6:15"},"nodeType":"YulFunctionCall","src":"10889:45:15"},"nodeType":"YulExpressionStatement","src":"10889:45:15"},{"nodeType":"YulAssignment","src":"10943:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10955:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"10966:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10951:3:15"},"nodeType":"YulFunctionCall","src":"10951:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10943:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_98fc47eac89460486ae0b70a66337c2e351938a89c3f85906555a17c179a0256__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10716:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10730:4:15","type":""}],"src":"10565:411:15"},{"body":{"nodeType":"YulBlock","src":"11030:76:15","statements":[{"body":{"nodeType":"YulBlock","src":"11052:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11054:16:15"},"nodeType":"YulFunctionCall","src":"11054:18:15"},"nodeType":"YulExpressionStatement","src":"11054:18:15"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11046:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"11049:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11043:2:15"},"nodeType":"YulFunctionCall","src":"11043:8:15"},"nodeType":"YulIf","src":"11040:34:15"},{"nodeType":"YulAssignment","src":"11083:17:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11095:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"11098:1:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11091:3:15"},"nodeType":"YulFunctionCall","src":"11091:9:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11083:4:15"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11012:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"11015:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11021:4:15","type":""}],"src":"10981:125:15"},{"body":{"nodeType":"YulBlock","src":"11296:255:15","statements":[{"nodeType":"YulAssignment","src":"11306:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11318:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11329:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11314:3:15"},"nodeType":"YulFunctionCall","src":"11314:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11306:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11364:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"11372:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11360:3:15"},"nodeType":"YulFunctionCall","src":"11360:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11342:6:15"},"nodeType":"YulFunctionCall","src":"11342:74:15"},"nodeType":"YulExpressionStatement","src":"11342:74:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11436:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11447:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11432:3:15"},"nodeType":"YulFunctionCall","src":"11432:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"11452:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11425:6:15"},"nodeType":"YulFunctionCall","src":"11425:34:15"},"nodeType":"YulExpressionStatement","src":"11425:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11479:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11490:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:15"},"nodeType":"YulFunctionCall","src":"11475:18:15"},{"name":"value2","nodeType":"YulIdentifier","src":"11495:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11468:6:15"},"nodeType":"YulFunctionCall","src":"11468:34:15"},"nodeType":"YulExpressionStatement","src":"11468:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11522:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11533:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11518:3:15"},"nodeType":"YulFunctionCall","src":"11518:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"11538:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11511:6:15"},"nodeType":"YulFunctionCall","src":"11511:34:15"},"nodeType":"YulExpressionStatement","src":"11511:34:15"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11241:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11252:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11260:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11268:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11276:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11287:4:15","type":""}],"src":"11111:440:15"},{"body":{"nodeType":"YulBlock","src":"11730:182:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11747:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11758:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11740:6:15"},"nodeType":"YulFunctionCall","src":"11740:21:15"},"nodeType":"YulExpressionStatement","src":"11740:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11781:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11792:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11777:3:15"},"nodeType":"YulFunctionCall","src":"11777:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"11797:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:15"},"nodeType":"YulFunctionCall","src":"11770:30:15"},"nodeType":"YulExpressionStatement","src":"11770:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11820:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11831:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:15"},"nodeType":"YulFunctionCall","src":"11816:18:15"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11836:34:15","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11809:6:15"},"nodeType":"YulFunctionCall","src":"11809:62:15"},"nodeType":"YulExpressionStatement","src":"11809:62:15"},{"nodeType":"YulAssignment","src":"11880:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11892:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"11903:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11888:3:15"},"nodeType":"YulFunctionCall","src":"11888:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11880:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11707:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11721:4:15","type":""}],"src":"11556:356:15"},{"body":{"nodeType":"YulBlock","src":"12046:168:15","statements":[{"nodeType":"YulAssignment","src":"12056:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12068:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12079:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12064:3:15"},"nodeType":"YulFunctionCall","src":"12064:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12056:4:15"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12098:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12113:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"12121:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12109:3:15"},"nodeType":"YulFunctionCall","src":"12109:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12091:6:15"},"nodeType":"YulFunctionCall","src":"12091:74:15"},"nodeType":"YulExpressionStatement","src":"12091:74:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12196:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12181:3:15"},"nodeType":"YulFunctionCall","src":"12181:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"12201:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12174:6:15"},"nodeType":"YulFunctionCall","src":"12174:34:15"},"nodeType":"YulExpressionStatement","src":"12174:34:15"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12007:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12018:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12026:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12037:4:15","type":""}],"src":"11917:297:15"},{"body":{"nodeType":"YulBlock","src":"12348:198:15","statements":[{"nodeType":"YulAssignment","src":"12358:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12370:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12381:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12366:3:15"},"nodeType":"YulFunctionCall","src":"12366:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12358:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"12393:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"12403:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12397:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12461:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12476:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"12484:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12472:3:15"},"nodeType":"YulFunctionCall","src":"12472:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12454:6:15"},"nodeType":"YulFunctionCall","src":"12454:34:15"},"nodeType":"YulExpressionStatement","src":"12454:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12508:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"12519:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12504:3:15"},"nodeType":"YulFunctionCall","src":"12504:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12528:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"12536:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12524:3:15"},"nodeType":"YulFunctionCall","src":"12524:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12497:6:15"},"nodeType":"YulFunctionCall","src":"12497:43:15"},"nodeType":"YulExpressionStatement","src":"12497:43:15"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12309:9:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12320:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:15","type":""}],"src":"12219:327:15"},{"body":{"nodeType":"YulBlock","src":"12583:152:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12600:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12603:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12593:6:15"},"nodeType":"YulFunctionCall","src":"12593:88:15"},"nodeType":"YulExpressionStatement","src":"12593:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12697:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12700:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12690:6:15"},"nodeType":"YulFunctionCall","src":"12690:15:15"},"nodeType":"YulExpressionStatement","src":"12690:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12721:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12724:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12714:6:15"},"nodeType":"YulFunctionCall","src":"12714:15:15"},"nodeType":"YulExpressionStatement","src":"12714:15:15"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"12551:184:15"},{"body":{"nodeType":"YulBlock","src":"12818:167:15","statements":[{"body":{"nodeType":"YulBlock","src":"12864:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12873:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12876:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12866:6:15"},"nodeType":"YulFunctionCall","src":"12866:12:15"},"nodeType":"YulExpressionStatement","src":"12866:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12839:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"12848:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12835:3:15"},"nodeType":"YulFunctionCall","src":"12835:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"12860:2:15","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12831:3:15"},"nodeType":"YulFunctionCall","src":"12831:32:15"},"nodeType":"YulIf","src":"12828:52:15"},{"nodeType":"YulVariableDeclaration","src":"12889:29:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12908:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12902:5:15"},"nodeType":"YulFunctionCall","src":"12902:16:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12893:5:15","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12949:5:15"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"12927:21:15"},"nodeType":"YulFunctionCall","src":"12927:28:15"},"nodeType":"YulExpressionStatement","src":"12927:28:15"},{"nodeType":"YulAssignment","src":"12964:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"12974:5:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12964:6:15"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12784:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12795:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12807:6:15","type":""}],"src":"12740:245:15"},{"body":{"nodeType":"YulBlock","src":"13164:232:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13181:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13192:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13174:6:15"},"nodeType":"YulFunctionCall","src":"13174:21:15"},"nodeType":"YulExpressionStatement","src":"13174:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13215:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13226:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13211:3:15"},"nodeType":"YulFunctionCall","src":"13211:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"13231:2:15","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13204:6:15"},"nodeType":"YulFunctionCall","src":"13204:30:15"},"nodeType":"YulExpressionStatement","src":"13204:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13254:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13265:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13250:3:15"},"nodeType":"YulFunctionCall","src":"13250:18:15"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"13270:34:15","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13243:6:15"},"nodeType":"YulFunctionCall","src":"13243:62:15"},"nodeType":"YulExpressionStatement","src":"13243:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13325:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13336:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13321:3:15"},"nodeType":"YulFunctionCall","src":"13321:18:15"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"13341:12:15","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13314:6:15"},"nodeType":"YulFunctionCall","src":"13314:40:15"},"nodeType":"YulExpressionStatement","src":"13314:40:15"},{"nodeType":"YulAssignment","src":"13363:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13375:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13386:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13371:3:15"},"nodeType":"YulFunctionCall","src":"13371:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13363:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13141:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13155:4:15","type":""}],"src":"12990:406:15"},{"body":{"nodeType":"YulBlock","src":"13575:223:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13592:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13585:6:15"},"nodeType":"YulFunctionCall","src":"13585:21:15"},"nodeType":"YulExpressionStatement","src":"13585:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13626:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13637:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13622:3:15"},"nodeType":"YulFunctionCall","src":"13622:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"13642:2:15","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13615:6:15"},"nodeType":"YulFunctionCall","src":"13615:30:15"},"nodeType":"YulExpressionStatement","src":"13615:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13665:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13676:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13661:3:15"},"nodeType":"YulFunctionCall","src":"13661:18:15"},{"hexValue":"526f75746550726f636573736f723a20556e6b6e6f776e20706f6f6c20747970","kind":"string","nodeType":"YulLiteral","src":"13681:34:15","type":"","value":"RouteProcessor: Unknown pool typ"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13654:6:15"},"nodeType":"YulFunctionCall","src":"13654:62:15"},"nodeType":"YulExpressionStatement","src":"13654:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13736:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13747:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13732:3:15"},"nodeType":"YulFunctionCall","src":"13732:18:15"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"13752:3:15","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13725:6:15"},"nodeType":"YulFunctionCall","src":"13725:31:15"},"nodeType":"YulExpressionStatement","src":"13725:31:15"},{"nodeType":"YulAssignment","src":"13765:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13777:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"13788:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13773:3:15"},"nodeType":"YulFunctionCall","src":"13773:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13765:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_109b5fa48dfe29b659aee04f834cca4dcdb7c1a898e22af0dbdba611710e847d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13552:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13566:4:15","type":""}],"src":"13401:397:15"},{"body":{"nodeType":"YulBlock","src":"14068:428:15","statements":[{"nodeType":"YulAssignment","src":"14078:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14090:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14101:3:15","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14086:3:15"},"nodeType":"YulFunctionCall","src":"14086:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14078:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"14114:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"14124:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14118:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14182:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14197:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"14205:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14193:3:15"},"nodeType":"YulFunctionCall","src":"14193:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14175:6:15"},"nodeType":"YulFunctionCall","src":"14175:34:15"},"nodeType":"YulExpressionStatement","src":"14175:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14229:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14240:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14225:3:15"},"nodeType":"YulFunctionCall","src":"14225:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14249:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"14257:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14245:3:15"},"nodeType":"YulFunctionCall","src":"14245:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14218:6:15"},"nodeType":"YulFunctionCall","src":"14218:43:15"},"nodeType":"YulExpressionStatement","src":"14218:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14281:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14292:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14277:3:15"},"nodeType":"YulFunctionCall","src":"14277:18:15"},{"name":"value2","nodeType":"YulIdentifier","src":"14297:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14270:6:15"},"nodeType":"YulFunctionCall","src":"14270:34:15"},"nodeType":"YulExpressionStatement","src":"14270:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14324:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14335:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14320:3:15"},"nodeType":"YulFunctionCall","src":"14320:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"14340:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14313:6:15"},"nodeType":"YulFunctionCall","src":"14313:34:15"},"nodeType":"YulExpressionStatement","src":"14313:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14367:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14378:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14363:3:15"},"nodeType":"YulFunctionCall","src":"14363:19:15"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14388:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"14396:4:15","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14384:3:15"},"nodeType":"YulFunctionCall","src":"14384:17:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14356:6:15"},"nodeType":"YulFunctionCall","src":"14356:46:15"},"nodeType":"YulExpressionStatement","src":"14356:46:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14422:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14433:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:15"},"nodeType":"YulFunctionCall","src":"14418:19:15"},{"name":"value5","nodeType":"YulIdentifier","src":"14439:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14411:6:15"},"nodeType":"YulFunctionCall","src":"14411:35:15"},"nodeType":"YulExpressionStatement","src":"14411:35:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14466:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14477:3:15","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14462:3:15"},"nodeType":"YulFunctionCall","src":"14462:19:15"},{"name":"value6","nodeType":"YulIdentifier","src":"14483:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:15"},"nodeType":"YulFunctionCall","src":"14455:35:15"},"nodeType":"YulExpressionStatement","src":"14455:35:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13989:9:15","type":""},{"name":"value6","nodeType":"YulTypedName","src":"14000:6:15","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14008:6:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14016:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14024:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14032:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14040:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14048:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14059:4:15","type":""}],"src":"13803:693:15"},{"body":{"nodeType":"YulBlock","src":"14675:223:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14692:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14703:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14685:6:15"},"nodeType":"YulFunctionCall","src":"14685:21:15"},"nodeType":"YulExpressionStatement","src":"14685:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14726:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14737:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14722:3:15"},"nodeType":"YulFunctionCall","src":"14722:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"14742:2:15","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14715:6:15"},"nodeType":"YulFunctionCall","src":"14715:30:15"},"nodeType":"YulExpressionStatement","src":"14715:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14765:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14776:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:15"},"nodeType":"YulFunctionCall","src":"14761:18:15"},{"hexValue":"5361666545524332303a207065726d697420646964206e6f7420737563636565","kind":"string","nodeType":"YulLiteral","src":"14781:34:15","type":"","value":"SafeERC20: permit did not succee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:15"},"nodeType":"YulFunctionCall","src":"14754:62:15"},"nodeType":"YulExpressionStatement","src":"14754:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14836:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14847:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14832:3:15"},"nodeType":"YulFunctionCall","src":"14832:18:15"},{"hexValue":"64","kind":"string","nodeType":"YulLiteral","src":"14852:3:15","type":"","value":"d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14825:6:15"},"nodeType":"YulFunctionCall","src":"14825:31:15"},"nodeType":"YulExpressionStatement","src":"14825:31:15"},{"nodeType":"YulAssignment","src":"14865:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14877:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"14888:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14873:3:15"},"nodeType":"YulFunctionCall","src":"14873:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14865:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14652:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14666:4:15","type":""}],"src":"14501:397:15"},{"body":{"nodeType":"YulBlock","src":"14963:128:15","statements":[{"nodeType":"YulAssignment","src":"14973:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14988:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14982:5:15"},"nodeType":"YulFunctionCall","src":"14982:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14973:5:15"}]},{"body":{"nodeType":"YulBlock","src":"15069:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15078:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15081:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15071:6:15"},"nodeType":"YulFunctionCall","src":"15071:12:15"},"nodeType":"YulExpressionStatement","src":"15071:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15017:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15028:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"15035:30:15","type":"","value":"0xffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15024:3:15"},"nodeType":"YulFunctionCall","src":"15024:42:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15014:2:15"},"nodeType":"YulFunctionCall","src":"15014:53:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15007:6:15"},"nodeType":"YulFunctionCall","src":"15007:61:15"},"nodeType":"YulIf","src":"15004:81:15"}]},"name":"abi_decode_uint112_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14942:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14953:5:15","type":""}],"src":"14903:188:15"},{"body":{"nodeType":"YulBlock","src":"15210:336:15","statements":[{"body":{"nodeType":"YulBlock","src":"15256:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15265:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15268:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15258:6:15"},"nodeType":"YulFunctionCall","src":"15258:12:15"},"nodeType":"YulExpressionStatement","src":"15258:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15231:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"15240:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15227:3:15"},"nodeType":"YulFunctionCall","src":"15227:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"15252:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15223:3:15"},"nodeType":"YulFunctionCall","src":"15223:32:15"},"nodeType":"YulIf","src":"15220:52:15"},{"nodeType":"YulAssignment","src":"15281:50:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15321:9:15"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"15291:29:15"},"nodeType":"YulFunctionCall","src":"15291:40:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15281:6:15"}]},{"nodeType":"YulAssignment","src":"15340:59:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15384:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15395:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15380:3:15"},"nodeType":"YulFunctionCall","src":"15380:18:15"}],"functionName":{"name":"abi_decode_uint112_fromMemory","nodeType":"YulIdentifier","src":"15350:29:15"},"nodeType":"YulFunctionCall","src":"15350:49:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15340:6:15"}]},{"nodeType":"YulVariableDeclaration","src":"15408:38:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15431:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15442:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:15"},"nodeType":"YulFunctionCall","src":"15427:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15421:5:15"},"nodeType":"YulFunctionCall","src":"15421:25:15"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15412:5:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"15500:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15509:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15512:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15502:6:15"},"nodeType":"YulFunctionCall","src":"15502:12:15"},"nodeType":"YulExpressionStatement","src":"15502:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15468:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15479:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"15486:10:15","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15475:3:15"},"nodeType":"YulFunctionCall","src":"15475:22:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15465:2:15"},"nodeType":"YulFunctionCall","src":"15465:33:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15458:6:15"},"nodeType":"YulFunctionCall","src":"15458:41:15"},"nodeType":"YulIf","src":"15455:61:15"},{"nodeType":"YulAssignment","src":"15525:15:15","value":{"name":"value","nodeType":"YulIdentifier","src":"15535:5:15"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15525:6:15"}]}]},"name":"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15160:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15171:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15183:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15191:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15199:6:15","type":""}],"src":"15096:450:15"},{"body":{"nodeType":"YulBlock","src":"15725:169:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15742:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15753:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15735:6:15"},"nodeType":"YulFunctionCall","src":"15735:21:15"},"nodeType":"YulExpressionStatement","src":"15735:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15776:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15787:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15772:3:15"},"nodeType":"YulFunctionCall","src":"15772:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"15792:2:15","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15765:6:15"},"nodeType":"YulFunctionCall","src":"15765:30:15"},"nodeType":"YulExpressionStatement","src":"15765:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15815:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15826:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15811:3:15"},"nodeType":"YulFunctionCall","src":"15811:18:15"},{"hexValue":"57726f6e6720706f6f6c207265736572766573","kind":"string","nodeType":"YulLiteral","src":"15831:21:15","type":"","value":"Wrong pool reserves"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15804:6:15"},"nodeType":"YulFunctionCall","src":"15804:49:15"},"nodeType":"YulExpressionStatement","src":"15804:49:15"},{"nodeType":"YulAssignment","src":"15862:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15874:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"15885:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15870:3:15"},"nodeType":"YulFunctionCall","src":"15870:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15862:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15702:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15716:4:15","type":""}],"src":"15551:343:15"},{"body":{"nodeType":"YulBlock","src":"15951:176:15","statements":[{"body":{"nodeType":"YulBlock","src":"16070:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16072:16:15"},"nodeType":"YulFunctionCall","src":"16072:18:15"},"nodeType":"YulExpressionStatement","src":"16072:18:15"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15982:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15975:6:15"},"nodeType":"YulFunctionCall","src":"15975:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15968:6:15"},"nodeType":"YulFunctionCall","src":"15968:17:15"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15990:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15997:66:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"16065:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15993:3:15"},"nodeType":"YulFunctionCall","src":"15993:74:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15987:2:15"},"nodeType":"YulFunctionCall","src":"15987:81:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15964:3:15"},"nodeType":"YulFunctionCall","src":"15964:105:15"},"nodeType":"YulIf","src":"15961:131:15"},{"nodeType":"YulAssignment","src":"16101:20:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16116:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"16119:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16112:3:15"},"nodeType":"YulFunctionCall","src":"16112:9:15"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16101:7:15"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15930:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"15933:1:15","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"15939:7:15","type":""}],"src":"15899:228:15"},{"body":{"nodeType":"YulBlock","src":"16178:228:15","statements":[{"body":{"nodeType":"YulBlock","src":"16209:168:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16230:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16233:77:15","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16223:6:15"},"nodeType":"YulFunctionCall","src":"16223:88:15"},"nodeType":"YulExpressionStatement","src":"16223:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16331:1:15","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16334:4:15","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16324:6:15"},"nodeType":"YulFunctionCall","src":"16324:15:15"},"nodeType":"YulExpressionStatement","src":"16324:15:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16359:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16362:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16352:6:15"},"nodeType":"YulFunctionCall","src":"16352:15:15"},"nodeType":"YulExpressionStatement","src":"16352:15:15"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16198:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16191:6:15"},"nodeType":"YulFunctionCall","src":"16191:9:15"},"nodeType":"YulIf","src":"16188:189:15"},{"nodeType":"YulAssignment","src":"16386:14:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16395:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"16398:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16391:3:15"},"nodeType":"YulFunctionCall","src":"16391:9:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16386:1:15"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16163:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"16166:1:15","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16172:1:15","type":""}],"src":"16132:274:15"},{"body":{"nodeType":"YulBlock","src":"16614:279:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16631:9:15"},{"name":"value0","nodeType":"YulIdentifier","src":"16642:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16624:6:15"},"nodeType":"YulFunctionCall","src":"16624:25:15"},"nodeType":"YulExpressionStatement","src":"16624:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16669:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16680:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:15"},"nodeType":"YulFunctionCall","src":"16665:18:15"},{"name":"value1","nodeType":"YulIdentifier","src":"16685:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16658:6:15"},"nodeType":"YulFunctionCall","src":"16658:34:15"},"nodeType":"YulExpressionStatement","src":"16658:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16712:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16723:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16708:3:15"},"nodeType":"YulFunctionCall","src":"16708:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16732:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"16740:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16728:3:15"},"nodeType":"YulFunctionCall","src":"16728:55:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16701:6:15"},"nodeType":"YulFunctionCall","src":"16701:83:15"},"nodeType":"YulExpressionStatement","src":"16701:83:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16804:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16815:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16800:3:15"},"nodeType":"YulFunctionCall","src":"16800:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"16820:3:15","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16793:6:15"},"nodeType":"YulFunctionCall","src":"16793:31:15"},"nodeType":"YulExpressionStatement","src":"16793:31:15"},{"nodeType":"YulAssignment","src":"16833:54:15","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16859:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16871:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"16882:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16867:3:15"},"nodeType":"YulFunctionCall","src":"16867:19:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16841:17:15"},"nodeType":"YulFunctionCall","src":"16841:46:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16833:4:15"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16559:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16570:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16578:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16586:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16594:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16605:4:15","type":""}],"src":"16411:482:15"},{"body":{"nodeType":"YulBlock","src":"17072:224:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17089:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17100:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17082:6:15"},"nodeType":"YulFunctionCall","src":"17082:21:15"},"nodeType":"YulExpressionStatement","src":"17082:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17123:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17134:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17119:3:15"},"nodeType":"YulFunctionCall","src":"17119:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"17139:2:15","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17112:6:15"},"nodeType":"YulFunctionCall","src":"17112:30:15"},"nodeType":"YulExpressionStatement","src":"17112:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17162:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17173:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17158:3:15"},"nodeType":"YulFunctionCall","src":"17158:18:15"},{"hexValue":"73776170556e6956333a20756e65787065637465642066726f6d206164647265","kind":"string","nodeType":"YulLiteral","src":"17178:34:15","type":"","value":"swapUniV3: unexpected from addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17151:6:15"},"nodeType":"YulFunctionCall","src":"17151:62:15"},"nodeType":"YulExpressionStatement","src":"17151:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17233:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17244:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17229:3:15"},"nodeType":"YulFunctionCall","src":"17229:18:15"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"17249:4:15","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17222:6:15"},"nodeType":"YulFunctionCall","src":"17222:32:15"},"nodeType":"YulExpressionStatement","src":"17222:32:15"},{"nodeType":"YulAssignment","src":"17263:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17275:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"17286:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17271:3:15"},"nodeType":"YulFunctionCall","src":"17271:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17263:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_52366735308a5c07bd0e6762eb3c371a1df692a70693d51f6c7b4f1dff080a40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17049:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17063:4:15","type":""}],"src":"16898:398:15"},{"body":{"nodeType":"YulBlock","src":"17350:205:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17360:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"17370:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17364:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17421:21:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17436:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"17439:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17432:3:15"},"nodeType":"YulFunctionCall","src":"17432:10:15"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"17425:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17451:21:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17466:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"17469:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17462:3:15"},"nodeType":"YulFunctionCall","src":"17462:10:15"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"17455:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"17497:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17499:16:15"},"nodeType":"YulFunctionCall","src":"17499:18:15"},"nodeType":"YulExpressionStatement","src":"17499:18:15"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"17487:3:15"},{"name":"y_1","nodeType":"YulIdentifier","src":"17492:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17484:2:15"},"nodeType":"YulFunctionCall","src":"17484:12:15"},"nodeType":"YulIf","src":"17481:38:15"},{"nodeType":"YulAssignment","src":"17528:21:15","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"17540:3:15"},{"name":"y_1","nodeType":"YulIdentifier","src":"17545:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17536:3:15"},"nodeType":"YulFunctionCall","src":"17536:13:15"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17528:4:15"}]}]},"name":"checked_sub_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17332:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17335:1:15","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17341:4:15","type":""}],"src":"17301:254:15"},{"body":{"nodeType":"YulBlock","src":"17608:213:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17618:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"17628:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17622:2:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17679:21:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17694:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"17697:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17690:3:15"},"nodeType":"YulFunctionCall","src":"17690:10:15"},"variables":[{"name":"x_1","nodeType":"YulTypedName","src":"17683:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17709:21:15","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17724:1:15"},{"name":"_1","nodeType":"YulIdentifier","src":"17727:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17720:3:15"},"nodeType":"YulFunctionCall","src":"17720:10:15"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"17713:3:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"17764:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17766:16:15"},"nodeType":"YulFunctionCall","src":"17766:18:15"},"nodeType":"YulExpressionStatement","src":"17766:18:15"}]},"condition":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"17745:3:15"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17754:2:15"},{"name":"y_1","nodeType":"YulIdentifier","src":"17758:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17750:3:15"},"nodeType":"YulFunctionCall","src":"17750:12:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17742:2:15"},"nodeType":"YulFunctionCall","src":"17742:21:15"},"nodeType":"YulIf","src":"17739:47:15"},{"nodeType":"YulAssignment","src":"17795:20:15","value":{"arguments":[{"name":"x_1","nodeType":"YulIdentifier","src":"17806:3:15"},{"name":"y_1","nodeType":"YulIdentifier","src":"17811:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17802:3:15"},"nodeType":"YulFunctionCall","src":"17802:13:15"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17795:3:15"}]}]},"name":"checked_add_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17591:1:15","type":""},{"name":"y","nodeType":"YulTypedName","src":"17594:1:15","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17600:3:15","type":""}],"src":"17560:261:15"},{"body":{"nodeType":"YulBlock","src":"18049:369:15","statements":[{"nodeType":"YulVariableDeclaration","src":"18059:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"18069:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18063:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18127:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18142:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"18150:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18138:3:15"},"nodeType":"YulFunctionCall","src":"18138:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18120:6:15"},"nodeType":"YulFunctionCall","src":"18120:34:15"},"nodeType":"YulExpressionStatement","src":"18120:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18174:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18185:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18170:3:15"},"nodeType":"YulFunctionCall","src":"18170:18:15"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18204:6:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18197:6:15"},"nodeType":"YulFunctionCall","src":"18197:14:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18190:6:15"},"nodeType":"YulFunctionCall","src":"18190:22:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18163:6:15"},"nodeType":"YulFunctionCall","src":"18163:50:15"},"nodeType":"YulExpressionStatement","src":"18163:50:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18233:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18244:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18229:3:15"},"nodeType":"YulFunctionCall","src":"18229:18:15"},{"name":"value2","nodeType":"YulIdentifier","src":"18249:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18222:6:15"},"nodeType":"YulFunctionCall","src":"18222:34:15"},"nodeType":"YulExpressionStatement","src":"18222:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18276:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18287:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:15"},"nodeType":"YulFunctionCall","src":"18272:18:15"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18296:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"18304:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18292:3:15"},"nodeType":"YulFunctionCall","src":"18292:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:15"},"nodeType":"YulFunctionCall","src":"18265:43:15"},"nodeType":"YulExpressionStatement","src":"18265:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18328:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18339:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18324:3:15"},"nodeType":"YulFunctionCall","src":"18324:19:15"},{"kind":"number","nodeType":"YulLiteral","src":"18345:3:15","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18317:6:15"},"nodeType":"YulFunctionCall","src":"18317:32:15"},"nodeType":"YulExpressionStatement","src":"18317:32:15"},{"nodeType":"YulAssignment","src":"18358:54:15","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18384:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18396:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18407:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18392:3:15"},"nodeType":"YulFunctionCall","src":"18392:19:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"18366:17:15"},"nodeType":"YulFunctionCall","src":"18366:46:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18358:4:15"}]}]},"name":"abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17986:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17997:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18005:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18013:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18021:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18029:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18040:4:15","type":""}],"src":"17826:592:15"},{"body":{"nodeType":"YulBlock","src":"18519:147:15","statements":[{"body":{"nodeType":"YulBlock","src":"18565:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18574:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18577:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18567:6:15"},"nodeType":"YulFunctionCall","src":"18567:12:15"},"nodeType":"YulExpressionStatement","src":"18567:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18540:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"18549:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18536:3:15"},"nodeType":"YulFunctionCall","src":"18536:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"18561:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18532:3:15"},"nodeType":"YulFunctionCall","src":"18532:32:15"},"nodeType":"YulIf","src":"18529:52:15"},{"nodeType":"YulAssignment","src":"18590:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18606:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18600:5:15"},"nodeType":"YulFunctionCall","src":"18600:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18590:6:15"}]},{"nodeType":"YulAssignment","src":"18625:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18645:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18656:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18641:3:15"},"nodeType":"YulFunctionCall","src":"18641:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18635:5:15"},"nodeType":"YulFunctionCall","src":"18635:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18625:6:15"}]}]},"name":"abi_decode_tuple_t_int256t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18477:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18488:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18500:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18508:6:15","type":""}],"src":"18423:243:15"},{"body":{"nodeType":"YulBlock","src":"18845:226:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18862:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18873:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18855:6:15"},"nodeType":"YulFunctionCall","src":"18855:21:15"},"nodeType":"YulExpressionStatement","src":"18855:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18896:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18907:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18892:3:15"},"nodeType":"YulFunctionCall","src":"18892:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"18912:2:15","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18885:6:15"},"nodeType":"YulFunctionCall","src":"18885:30:15"},"nodeType":"YulExpressionStatement","src":"18885:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18935:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"18946:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18931:3:15"},"nodeType":"YulFunctionCall","src":"18931:18:15"},{"hexValue":"526f75746550726f636573736f722e73776170556e6956333a20756e65787065","kind":"string","nodeType":"YulLiteral","src":"18951:34:15","type":"","value":"RouteProcessor.swapUniV3: unexpe"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18924:6:15"},"nodeType":"YulFunctionCall","src":"18924:62:15"},"nodeType":"YulExpressionStatement","src":"18924:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19006:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19017:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19002:3:15"},"nodeType":"YulFunctionCall","src":"19002:18:15"},{"hexValue":"63746564","kind":"string","nodeType":"YulLiteral","src":"19022:6:15","type":"","value":"cted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18995:6:15"},"nodeType":"YulFunctionCall","src":"18995:34:15"},"nodeType":"YulExpressionStatement","src":"18995:34:15"},{"nodeType":"YulAssignment","src":"19038:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19050:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19061:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19046:3:15"},"nodeType":"YulFunctionCall","src":"19046:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19038:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_42a80a7be8a33858f4be3424bda19c8de91fa9a2d1474de6a845eae9c001c5f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18822:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18836:4:15","type":""}],"src":"18671:400:15"},{"body":{"nodeType":"YulBlock","src":"19136:132:15","statements":[{"nodeType":"YulAssignment","src":"19146:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19161:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19155:5:15"},"nodeType":"YulFunctionCall","src":"19155:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19146:5:15"}]},{"body":{"nodeType":"YulBlock","src":"19246:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19255:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19258:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19248:6:15"},"nodeType":"YulFunctionCall","src":"19248:12:15"},"nodeType":"YulExpressionStatement","src":"19248:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19190:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19201:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19208:34:15","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19197:3:15"},"nodeType":"YulFunctionCall","src":"19197:46:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19187:2:15"},"nodeType":"YulFunctionCall","src":"19187:57:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19180:6:15"},"nodeType":"YulFunctionCall","src":"19180:65:15"},"nodeType":"YulIf","src":"19177:85:15"}]},"name":"abi_decode_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19115:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19126:5:15","type":""}],"src":"19076:192:15"},{"body":{"nodeType":"YulBlock","src":"19378:443:15","statements":[{"body":{"nodeType":"YulBlock","src":"19424:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19433:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19436:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19426:6:15"},"nodeType":"YulFunctionCall","src":"19426:12:15"},"nodeType":"YulExpressionStatement","src":"19426:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19399:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"19408:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19395:3:15"},"nodeType":"YulFunctionCall","src":"19395:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"19420:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19391:3:15"},"nodeType":"YulFunctionCall","src":"19391:32:15"},"nodeType":"YulIf","src":"19388:52:15"},{"nodeType":"YulVariableDeclaration","src":"19449:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19469:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19463:5:15"},"nodeType":"YulFunctionCall","src":"19463:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"19453:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19481:33:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19503:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19511:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19499:3:15"},"nodeType":"YulFunctionCall","src":"19499:15:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19485:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"19589:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19591:16:15"},"nodeType":"YulFunctionCall","src":"19591:18:15"},"nodeType":"YulExpressionStatement","src":"19591:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19532:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"19544:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19529:2:15"},"nodeType":"YulFunctionCall","src":"19529:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19568:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19580:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19565:2:15"},"nodeType":"YulFunctionCall","src":"19565:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19526:2:15"},"nodeType":"YulFunctionCall","src":"19526:62:15"},"nodeType":"YulIf","src":"19523:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19627:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19631:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19620:6:15"},"nodeType":"YulFunctionCall","src":"19620:22:15"},"nodeType":"YulExpressionStatement","src":"19620:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19658:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19696:9:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"19666:29:15"},"nodeType":"YulFunctionCall","src":"19666:40:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19651:6:15"},"nodeType":"YulFunctionCall","src":"19651:56:15"},"nodeType":"YulExpressionStatement","src":"19651:56:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19727:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19735:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:15"},"nodeType":"YulFunctionCall","src":"19723:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19774:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"19785:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19770:3:15"},"nodeType":"YulFunctionCall","src":"19770:18:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"19740:29:15"},"nodeType":"YulFunctionCall","src":"19740:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19716:6:15"},"nodeType":"YulFunctionCall","src":"19716:74:15"},"nodeType":"YulExpressionStatement","src":"19716:74:15"},{"nodeType":"YulAssignment","src":"19799:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"19809:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19799:6:15"}]}]},"name":"abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19344:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19355:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19367:6:15","type":""}],"src":"19273:548:15"},{"body":{"nodeType":"YulBlock","src":"19885:116:15","statements":[{"nodeType":"YulAssignment","src":"19895:22:15","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19910:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19904:5:15"},"nodeType":"YulFunctionCall","src":"19904:13:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19895:5:15"}]},{"body":{"nodeType":"YulBlock","src":"19979:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19988:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19991:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19981:6:15"},"nodeType":"YulFunctionCall","src":"19981:12:15"},"nodeType":"YulExpressionStatement","src":"19981:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19939:5:15"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19950:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19957:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19946:3:15"},"nodeType":"YulFunctionCall","src":"19946:30:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19936:2:15"},"nodeType":"YulFunctionCall","src":"19936:41:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19929:6:15"},"nodeType":"YulFunctionCall","src":"19929:49:15"},"nodeType":"YulIf","src":"19926:69:15"}]},"name":"abi_decode_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19864:6:15","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19875:5:15","type":""}],"src":"19826:175:15"},{"body":{"nodeType":"YulBlock","src":"20117:524:15","statements":[{"body":{"nodeType":"YulBlock","src":"20163:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20172:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20175:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20165:6:15"},"nodeType":"YulFunctionCall","src":"20165:12:15"},"nodeType":"YulExpressionStatement","src":"20165:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20138:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"20147:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20134:3:15"},"nodeType":"YulFunctionCall","src":"20134:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"20159:2:15","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20130:3:15"},"nodeType":"YulFunctionCall","src":"20130:32:15"},"nodeType":"YulIf","src":"20127:52:15"},{"nodeType":"YulVariableDeclaration","src":"20188:23:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20208:2:15","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20202:5:15"},"nodeType":"YulFunctionCall","src":"20202:9:15"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"20192:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20220:33:15","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20242:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20250:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20238:3:15"},"nodeType":"YulFunctionCall","src":"20238:15:15"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"20224:10:15","type":""}]},{"body":{"nodeType":"YulBlock","src":"20328:22:15","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20330:16:15"},"nodeType":"YulFunctionCall","src":"20330:18:15"},"nodeType":"YulExpressionStatement","src":"20330:18:15"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20271:10:15"},{"kind":"number","nodeType":"YulLiteral","src":"20283:18:15","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20268:2:15"},"nodeType":"YulFunctionCall","src":"20268:34:15"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20307:10:15"},{"name":"memPtr","nodeType":"YulIdentifier","src":"20319:6:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20304:2:15"},"nodeType":"YulFunctionCall","src":"20304:22:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20265:2:15"},"nodeType":"YulFunctionCall","src":"20265:62:15"},"nodeType":"YulIf","src":"20262:88:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20366:2:15","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"20370:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20359:6:15"},"nodeType":"YulFunctionCall","src":"20359:22:15"},"nodeType":"YulExpressionStatement","src":"20359:22:15"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20397:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20434:9:15"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"20405:28:15"},"nodeType":"YulFunctionCall","src":"20405:39:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20390:6:15"},"nodeType":"YulFunctionCall","src":"20390:55:15"},"nodeType":"YulExpressionStatement","src":"20390:55:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20465:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20473:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20461:3:15"},"nodeType":"YulFunctionCall","src":"20461:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20511:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"20522:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20507:3:15"},"nodeType":"YulFunctionCall","src":"20507:18:15"}],"functionName":{"name":"abi_decode_uint64_fromMemory","nodeType":"YulIdentifier","src":"20478:28:15"},"nodeType":"YulFunctionCall","src":"20478:48:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20454:6:15"},"nodeType":"YulFunctionCall","src":"20454:73:15"},"nodeType":"YulExpressionStatement","src":"20454:73:15"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20547:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"20555:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20543:3:15"},"nodeType":"YulFunctionCall","src":"20543:15:15"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20594:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"20605:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20590:3:15"},"nodeType":"YulFunctionCall","src":"20590:18:15"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"20560:29:15"},"nodeType":"YulFunctionCall","src":"20560:49:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20536:6:15"},"nodeType":"YulFunctionCall","src":"20536:74:15"},"nodeType":"YulExpressionStatement","src":"20536:74:15"},{"nodeType":"YulAssignment","src":"20619:16:15","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"20629:6:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20619:6:15"}]}]},"name":"abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20083:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20094:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20106:6:15","type":""}],"src":"20006:635:15"},{"body":{"nodeType":"YulBlock","src":"20867:338:15","statements":[{"nodeType":"YulAssignment","src":"20877:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20889:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"20900:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20885:3:15"},"nodeType":"YulFunctionCall","src":"20885:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20877:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"20913:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"20923:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20917:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20981:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20996:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21004:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20992:3:15"},"nodeType":"YulFunctionCall","src":"20992:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20974:6:15"},"nodeType":"YulFunctionCall","src":"20974:34:15"},"nodeType":"YulExpressionStatement","src":"20974:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21028:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21039:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21024:3:15"},"nodeType":"YulFunctionCall","src":"21024:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21048:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21056:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21044:3:15"},"nodeType":"YulFunctionCall","src":"21044:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21017:6:15"},"nodeType":"YulFunctionCall","src":"21017:43:15"},"nodeType":"YulExpressionStatement","src":"21017:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21080:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21091:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21076:3:15"},"nodeType":"YulFunctionCall","src":"21076:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21100:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21108:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21096:3:15"},"nodeType":"YulFunctionCall","src":"21096:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21069:6:15"},"nodeType":"YulFunctionCall","src":"21069:43:15"},"nodeType":"YulExpressionStatement","src":"21069:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21132:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21143:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21128:3:15"},"nodeType":"YulFunctionCall","src":"21128:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"21148:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21121:6:15"},"nodeType":"YulFunctionCall","src":"21121:34:15"},"nodeType":"YulExpressionStatement","src":"21121:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21175:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21186:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21171:3:15"},"nodeType":"YulFunctionCall","src":"21171:19:15"},{"name":"value4","nodeType":"YulIdentifier","src":"21192:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21164:6:15"},"nodeType":"YulFunctionCall","src":"21164:35:15"},"nodeType":"YulExpressionStatement","src":"21164:35:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20804:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20815:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20823:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20831:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20839:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20847:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20858:4:15","type":""}],"src":"20646:559:15"},{"body":{"nodeType":"YulBlock","src":"21308:147:15","statements":[{"body":{"nodeType":"YulBlock","src":"21354:16:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21363:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21366:1:15","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21356:6:15"},"nodeType":"YulFunctionCall","src":"21356:12:15"},"nodeType":"YulExpressionStatement","src":"21356:12:15"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21329:7:15"},{"name":"headStart","nodeType":"YulIdentifier","src":"21338:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21325:3:15"},"nodeType":"YulFunctionCall","src":"21325:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"21350:2:15","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21321:3:15"},"nodeType":"YulFunctionCall","src":"21321:32:15"},"nodeType":"YulIf","src":"21318:52:15"},{"nodeType":"YulAssignment","src":"21379:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21395:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21389:5:15"},"nodeType":"YulFunctionCall","src":"21389:16:15"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21379:6:15"}]},{"nodeType":"YulAssignment","src":"21414:35:15","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21434:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21445:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21430:3:15"},"nodeType":"YulFunctionCall","src":"21430:18:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21424:5:15"},"nodeType":"YulFunctionCall","src":"21424:25:15"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21414:6:15"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21266:9:15","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21277:7:15","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21289:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21297:6:15","type":""}],"src":"21210:245:15"},{"body":{"nodeType":"YulBlock","src":"21645:294:15","statements":[{"nodeType":"YulAssignment","src":"21655:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21667:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21678:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21663:3:15"},"nodeType":"YulFunctionCall","src":"21663:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21655:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"21691:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"21701:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21695:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21759:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21774:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21782:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21770:3:15"},"nodeType":"YulFunctionCall","src":"21770:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21752:6:15"},"nodeType":"YulFunctionCall","src":"21752:34:15"},"nodeType":"YulExpressionStatement","src":"21752:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21806:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21817:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21802:3:15"},"nodeType":"YulFunctionCall","src":"21802:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21826:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21834:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21822:3:15"},"nodeType":"YulFunctionCall","src":"21822:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21795:6:15"},"nodeType":"YulFunctionCall","src":"21795:43:15"},"nodeType":"YulExpressionStatement","src":"21795:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21858:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21869:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21854:3:15"},"nodeType":"YulFunctionCall","src":"21854:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21878:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"21886:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21874:3:15"},"nodeType":"YulFunctionCall","src":"21874:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21847:6:15"},"nodeType":"YulFunctionCall","src":"21847:43:15"},"nodeType":"YulExpressionStatement","src":"21847:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21910:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"21921:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21906:3:15"},"nodeType":"YulFunctionCall","src":"21906:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"21926:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21899:6:15"},"nodeType":"YulFunctionCall","src":"21899:34:15"},"nodeType":"YulExpressionStatement","src":"21899:34:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21590:9:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21601:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21609:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21617:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21625:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21636:4:15","type":""}],"src":"21460:479:15"},{"body":{"nodeType":"YulBlock","src":"22165:338:15","statements":[{"nodeType":"YulAssignment","src":"22175:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22187:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22198:3:15","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22183:3:15"},"nodeType":"YulFunctionCall","src":"22183:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22175:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"22211:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"22221:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22215:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22279:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22294:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"22302:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22290:3:15"},"nodeType":"YulFunctionCall","src":"22290:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22272:6:15"},"nodeType":"YulFunctionCall","src":"22272:34:15"},"nodeType":"YulExpressionStatement","src":"22272:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22326:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22337:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22322:3:15"},"nodeType":"YulFunctionCall","src":"22322:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22346:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"22354:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22342:3:15"},"nodeType":"YulFunctionCall","src":"22342:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22315:6:15"},"nodeType":"YulFunctionCall","src":"22315:43:15"},"nodeType":"YulExpressionStatement","src":"22315:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22378:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22389:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22374:3:15"},"nodeType":"YulFunctionCall","src":"22374:18:15"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22398:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"22406:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22394:3:15"},"nodeType":"YulFunctionCall","src":"22394:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22367:6:15"},"nodeType":"YulFunctionCall","src":"22367:43:15"},"nodeType":"YulExpressionStatement","src":"22367:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22430:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22441:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22426:3:15"},"nodeType":"YulFunctionCall","src":"22426:18:15"},{"name":"value3","nodeType":"YulIdentifier","src":"22446:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22419:6:15"},"nodeType":"YulFunctionCall","src":"22419:34:15"},"nodeType":"YulExpressionStatement","src":"22419:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22473:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22484:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22469:3:15"},"nodeType":"YulFunctionCall","src":"22469:19:15"},{"name":"value4","nodeType":"YulIdentifier","src":"22490:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22462:6:15"},"nodeType":"YulFunctionCall","src":"22462:35:15"},"nodeType":"YulExpressionStatement","src":"22462:35:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22102:9:15","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22113:6:15","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22121:6:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22129:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22137:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22145:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22156:4:15","type":""}],"src":"21944:559:15"},{"body":{"nodeType":"YulBlock","src":"22627:99:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22644:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22655:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22637:6:15"},"nodeType":"YulFunctionCall","src":"22637:21:15"},"nodeType":"YulExpressionStatement","src":"22637:21:15"},{"nodeType":"YulAssignment","src":"22667:53:15","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22693:6:15"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22705:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22716:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22701:3:15"},"nodeType":"YulFunctionCall","src":"22701:18:15"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22675:17:15"},"nodeType":"YulFunctionCall","src":"22675:45:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22667:4:15"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22596:9:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22607:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22618:4:15","type":""}],"src":"22508:218:15"},{"body":{"nodeType":"YulBlock","src":"22905:228:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22922:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22933:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22915:6:15"},"nodeType":"YulFunctionCall","src":"22915:21:15"},"nodeType":"YulExpressionStatement","src":"22915:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22956:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"22967:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22952:3:15"},"nodeType":"YulFunctionCall","src":"22952:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"22972:2:15","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22945:6:15"},"nodeType":"YulFunctionCall","src":"22945:30:15"},"nodeType":"YulExpressionStatement","src":"22945:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22995:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23006:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22991:3:15"},"nodeType":"YulFunctionCall","src":"22991:18:15"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"23011:34:15","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22984:6:15"},"nodeType":"YulFunctionCall","src":"22984:62:15"},"nodeType":"YulExpressionStatement","src":"22984:62:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23066:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23077:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23062:3:15"},"nodeType":"YulFunctionCall","src":"23062:18:15"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"23082:8:15","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23055:6:15"},"nodeType":"YulFunctionCall","src":"23055:36:15"},"nodeType":"YulExpressionStatement","src":"23055:36:15"},{"nodeType":"YulAssignment","src":"23100:27:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23112:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23123:3:15","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23108:3:15"},"nodeType":"YulFunctionCall","src":"23108:19:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23100:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22882:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22896:4:15","type":""}],"src":"22731:402:15"},{"body":{"nodeType":"YulBlock","src":"23295:241:15","statements":[{"nodeType":"YulAssignment","src":"23305:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23317:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23328:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23313:3:15"},"nodeType":"YulFunctionCall","src":"23313:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23305:4:15"}]},{"nodeType":"YulVariableDeclaration","src":"23340:52:15","value":{"kind":"number","nodeType":"YulLiteral","src":"23350:42:15","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23344:2:15","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23408:9:15"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23423:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"23431:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23419:3:15"},"nodeType":"YulFunctionCall","src":"23419:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23401:6:15"},"nodeType":"YulFunctionCall","src":"23401:34:15"},"nodeType":"YulExpressionStatement","src":"23401:34:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23455:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23466:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23451:3:15"},"nodeType":"YulFunctionCall","src":"23451:18:15"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23475:6:15"},{"name":"_1","nodeType":"YulIdentifier","src":"23483:2:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23471:3:15"},"nodeType":"YulFunctionCall","src":"23471:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23444:6:15"},"nodeType":"YulFunctionCall","src":"23444:43:15"},"nodeType":"YulExpressionStatement","src":"23444:43:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23507:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23518:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23503:3:15"},"nodeType":"YulFunctionCall","src":"23503:18:15"},{"name":"value2","nodeType":"YulIdentifier","src":"23523:6:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23496:6:15"},"nodeType":"YulFunctionCall","src":"23496:34:15"},"nodeType":"YulExpressionStatement","src":"23496:34:15"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23248:9:15","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23259:6:15","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23267:6:15","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23275:6:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23286:4:15","type":""}],"src":"23138:398:15"},{"body":{"nodeType":"YulBlock","src":"23715:179:15","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23732:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23743:2:15","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23725:6:15"},"nodeType":"YulFunctionCall","src":"23725:21:15"},"nodeType":"YulExpressionStatement","src":"23725:21:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23766:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23777:2:15","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23762:3:15"},"nodeType":"YulFunctionCall","src":"23762:18:15"},{"kind":"number","nodeType":"YulLiteral","src":"23782:2:15","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23755:6:15"},"nodeType":"YulFunctionCall","src":"23755:30:15"},"nodeType":"YulExpressionStatement","src":"23755:30:15"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23805:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23816:2:15","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23801:3:15"},"nodeType":"YulFunctionCall","src":"23801:18:15"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"23821:31:15","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23794:6:15"},"nodeType":"YulFunctionCall","src":"23794:59:15"},"nodeType":"YulExpressionStatement","src":"23794:59:15"},{"nodeType":"YulAssignment","src":"23862:26:15","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23874:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"23885:2:15","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23870:3:15"},"nodeType":"YulFunctionCall","src":"23870:18:15"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23862:4:15"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23692:9:15","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23706:4:15","type":""}],"src":"23541:353:15"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value5 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBentoBoxMinimal_$3842__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payablet_uint256t_addresst_uint256t_addresst_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        let value_3 := calldataload(add(headStart, 192))\n        validator_revert_address(value_3)\n        value6 := value_3\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_int256t_int256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_stringliteral_d4d063a9d0e76bbc10089bd8d53d485ba0d69dcf634aebb1459c19fb7eb67be9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"RP: caller is not the owner or a\")\n        mstore(add(headStart, 96), \" priviledged user\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_80118bce9d7f9fadd16f13aed7daead723668aa58a7f19a8007dce306baac1a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"RouteProcessor is locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ae490f2240c03b2196588ec720ea6bf1857f74b857b3d5f1d6ebac9f7aaeb8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"RouteProcessor is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ebc182e7c46fc6349e1408fd903da9c1df4edd533f302c0976acd00016bf545__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"RouteProcessor.uniswapV3SwapCall\")\n        mstore(add(headStart, 96), \"back: call from unknown source\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8e54319434d3864e8dd7c4cd9cdb6a79d069e029c55c261818cbfc4d729db80b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"RouteProcessor.uniswapV3SwapCall\")\n        mstore(add(headStart, 96), \"back: not positive amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_0b5b4205be21de03eec6126ff0426ce9ddd0d46725c0dc1f1fbc15f95e7c18d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"RouteProcessor: Unknown command \")\n        mstore(add(headStart, 96), \"code\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2fd7b2e744765339cba0d4b70781f674fdce5c117f6e5c0ea00c1673e8933f74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"RouteProcessor: Minimal imput ba\")\n        mstore(add(headStart, 96), \"lance violation\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_98fc47eac89460486ae0b70a66337c2e351938a89c3f85906555a17c179a0256__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"RouteProcessor: Minimal ouput ba\")\n        mstore(add(headStart, 96), \"lance violation\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_109b5fa48dfe29b659aee04f834cca4dcdb7c1a898e22af0dbdba611710e847d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"RouteProcessor: Unknown pool typ\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeERC20: permit did not succee\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5bdf1a41efbedfaae45b78a443705cdd298f60b49c19d62ccee03c7093b0dec4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Wrong pool reserves\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_52366735308a5c07bd0e6762eb3c371a1df692a70693d51f6c7b4f1dff080a40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"swapUniV3: unexpected from addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint160(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_add_t_uint160(x, y) -> sum\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_42a80a7be8a33858f4be3424bda19c8de91fa9a2d1474de6a845eae9c001c5f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"RouteProcessor.swapUniV3: unexpe\")\n        mstore(add(headStart, 96), \"cted\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Rebase_$3635_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint128_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint128_fromMemory(add(headStart, 32)))\n        value0 := memPtr\n    }\n    function abi_decode_uint64_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_StrategyData_$3642_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint64_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint64_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_uint128_fromMemory(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_rational_0_by_1__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":15,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2190":[{"length":32,"start":272},{"length":32,"start":5385},{"length":32,"start":9312},{"length":32,"start":9383},{"length":32,"start":9489},{"length":32,"start":9686},{"length":32,"start":9859},{"length":32,"start":10087},{"length":32,"start":10328},{"length":32,"start":10500},{"length":32,"start":10707},{"length":32,"start":10959}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x69 JUMPI DUP1 PUSH4 0x9A1F3406 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9A1F3406 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x93B3774C EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6B2ACE87 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x6B2ACE87 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x46F7DA2 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x2646478B EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xBC JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F16 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x4EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x5F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3050 JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3089 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x975 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x25A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52503A2063616C6C6572206973206E6F7420746865206F776E6572206F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726976696C65646765642075736572000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973207061757365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x20000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH2 0x48C DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4DF PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x4E9 PUSH1 0x0 PUSH2 0x1201 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x526 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52503A2063616C6C6572206973206E6F7420746865206F776E6572206F722061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2070726976696C65646765642075736572000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH22 0x2000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973206C6F636B65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F72206973207061757365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x20000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 DUP12 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x31BF JUMP JUMPDEST POP PUSH2 0x811 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0xB23 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x868 PUSH2 0x1180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8C6 PUSH2 0x1180 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0x1201 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E756E697377617056335377617043616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6261636B3A2063616C6C2066726F6D20756E6B6E6F776E20736F757263650000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0xA55 DUP3 DUP5 ADD DUP5 PUSH2 0x3089 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP7 SGT PUSH2 0xA66 JUMPI DUP5 PUSH2 0xA68 JUMP JUMPDEST DUP6 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E756E697377617056335377617043616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6261636B3A206E6F7420706F73697469766520616D6F756E7400000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xB1B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND CALLER DUP4 PUSH2 0x1276 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xBEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP6 DUP2 MSTORE DUP6 MLOAD DUP7 ADD PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 POP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD GT ISZERO PUSH2 0xE1C JUMPI PUSH1 0x0 PUSH2 0xD08 DUP3 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xD3A JUMPI PUSH2 0xD1F DUP3 DUP12 PUSH2 0x142C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD1F DUP3 PUSH2 0x144C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0xD64 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x1471 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x5 EQ ISZERO PUSH2 0xD79 JUMPI PUSH2 0xD1F DUP3 PUSH2 0x1492 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x6 EQ ISZERO PUSH2 0xD8F JUMPI PUSH2 0xD1F DUP12 DUP4 PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20556E6B6E6F776E20636F6D6D616E6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F646500000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST POP PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST SELFBALANCE JUMPDEST SWAP1 POP DUP4 PUSH2 0xEF1 DUP12 DUP4 PUSH2 0x321A JUMP JUMPDEST LT ISZERO PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A204D696E696D616C20696D707574206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C616E63652076696F6C6174696F6E0000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x101E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1042 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE JUMPDEST SWAP1 POP PUSH2 0x106C DUP10 DUP6 PUSH2 0x321A JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A204D696E696D616C206F75707574206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C616E63652076696F6C6174696F6E0000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x1105 DUP5 DUP3 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP16 SWAP1 MSTORE SWAP2 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 POP DUP1 DUP13 AND SWAP2 SWAP1 DUP15 AND SWAP1 CALLER SWAP1 PUSH32 0x2DB5DDD0B42BDBCA0D69EA16F234A870A485854AE0D91F16643D6F317D8B8994 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x134A SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1680 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1361 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1420 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD JUMPDEST PUSH2 0x134A DUP4 ADDRESS DUP5 DUP5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143E DUP4 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x134A DUP4 CALLER DUP4 DUP6 PUSH2 0x178C JUMP JUMPDEST SELFBALANCE PUSH2 0x146D DUP3 ADDRESS PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 PUSH2 0x178C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1483 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x146D DUP3 ADDRESS DUP4 PUSH1 0x0 PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A4 DUP3 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14B8 DUP4 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1550 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1574 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x159F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x15E6 JUMPI PUSH1 0x0 PUSH2 0x15BF DUP7 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP6 MUL DIV SWAP4 DUP5 SWAP1 SUB SWAP4 SWAP1 SWAP2 POP PUSH2 0x15DC DUP8 ADDRESS DUP9 DUP5 PUSH2 0x17E7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x15A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FF DUP3 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1613 DUP4 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1627 DUP5 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163B DUP6 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164F DUP7 DUP1 MLOAD PUSH1 0x20 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1677 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x18FC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x134A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3249 JUMP JUMPDEST PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179E DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 PUSH2 0x17C0 DUP8 DUP1 MLOAD PUSH1 0x2 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP1 DUP3 AND DUP7 MUL DIV SWAP5 DUP6 SWAP1 SUB SWAP5 SWAP1 SWAP2 POP PUSH2 0x17DD DUP9 DUP9 DUP9 DUP5 PUSH2 0x17E7 JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP2 AND PUSH2 0x1814 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x15E6 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x182C JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x1F0C JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1844 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x21F0 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x3 EQ ISZERO PUSH2 0x185C JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x4 EQ ISZERO PUSH2 0x1874 JUMPI PUSH2 0x180F DUP6 DUP6 DUP6 DUP6 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F723A20556E6B6E6F776E20706F6F6C20747970 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7ECEBE0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP11 AND SWAP1 PUSH4 0x7ECEBE00 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xC4 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP11 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0x7ECEBE0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP4 POP DUP13 AND SWAP2 POP PUSH4 0x7ECEBE00 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AE2 DUP3 PUSH1 0x1 PUSH2 0x321A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A207065726D697420646964206E6F7420737563636565 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B8B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2BC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BB9 DUP7 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BCD DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x3289 JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1C76 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x1CDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57726F6E6720706F6F6C20726573657276657300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1CF1 JUMPI DUP3 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST DUP4 DUP4 JUMPDEST SWAP2 POP SWAP2 POP DUP8 PUSH1 0x0 EQ PUSH2 0x1D66 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND ADDRESS EQ ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D3F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP9 DUP11 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x1E06 JUMP JUMPDEST PUSH2 0x1D3F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP12 DUP10 DUP12 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 SWAP2 SWAP1 DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF9 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x1E03 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH1 0x0 PUSH2 0x1E14 DUP10 PUSH2 0x3E5 PUSH2 0x32D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x1E25 DUP6 PUSH2 0x3E8 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x1E2F SWAP2 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x1E39 DUP5 DUP5 PUSH2 0x32D9 JUMP JUMPDEST PUSH2 0x1E43 SWAP2 SWAP1 PUSH2 0x3316 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP10 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x1E5B JUMPI DUP3 PUSH1 0x0 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH32 0x22C0D9F00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x1EC9 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP15 SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x3351 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1E DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1F33 DUP8 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xFF AND GT SWAP1 POP PUSH1 0x0 PUSH2 0x1F4B DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND ADDRESS EQ PUSH2 0x2031 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND CALLER EQ PUSH2 0x200F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170556E6956333A20756E65787065637465642066726F6D206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x2031 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND CALLER ADDRESS DUP8 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH4 0x128ACB08 DUP3 DUP5 DUP8 DUP2 PUSH2 0x20A5 JUMPI PUSH2 0x20A0 PUSH1 0x1 PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x20B5 PUSH5 0x1000276A3 PUSH1 0x1 PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2105 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2123 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ PUSH2 0x1677 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x526F75746550726F636573736F722E73776170556E6956333A20756E65787065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2216 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 DUP4 AND EQ ISZERO PUSH2 0x22E5 JUMPI PUSH1 0x0 PUSH2 0x2235 DUP8 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 AND PUSH2 0x22A1 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x229B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ADDRESS EQ PUSH2 0x22DF JUMPI PUSH2 0x22DF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 DUP7 PUSH2 0x1276 JUMP JUMPDEST POP PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x2 DUP3 AND PUSH2 0x23AD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ PUSH2 0x232C JUMPI PUSH2 0x232C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP7 ADDRESS DUP7 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1677 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP6 DUP1 MLOAD PUSH1 0x1 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2415 DUP7 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x27F8 JUMPI DUP3 ISZERO PUSH2 0x24CC JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND ADDRESS EQ ISZERO PUSH2 0x248A JUMPI PUSH2 0x2485 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH32 0x0 DUP6 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x2722 JUMP JUMPDEST PUSH2 0x2485 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP7 PUSH32 0x0 DUP7 PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4FFE34DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x4FFE34DB SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2557 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x257B SWAP2 SWAP1 PUSH2 0x348E JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0xDF23B45B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xDF23B45B SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x3501 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x270B SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH2 0x2715 SWAP2 SWAP1 PUSH2 0x321A JUMP JUMPDEST PUSH2 0x271F SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2B9446C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 DUP4 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x84 DUP4 ADD MSTORE SWAP1 PUSH4 0x2B9446C SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F1 SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP PUSH2 0xB1B JUMP JUMPDEST DUP3 ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x289C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF7888AEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF7888AEC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x294B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x296F SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x97DA6D3000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE DUP3 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x97DA6D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3F SWAP2 SWAP1 PUSH2 0x344A JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5B DUP6 DUP1 MLOAD PUSH1 0x14 ADD DUP1 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD SWAP1 SWAP3 ADD ADD DUP8 MSTORE SWAP1 SWAP2 POP DUP3 ISZERO PUSH2 0x2B2C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF18D03CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF18D03CC SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x627DD56A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x627DD56A SWAP1 PUSH2 0x2B7E SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x31BF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1677 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2C7C SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2CB9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2CCF DUP8 DUP4 DUP4 DUP8 PUSH2 0x2D3E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2D38 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD PUSH2 0x12C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2DD1 JUMPI DUP3 MLOAD PUSH2 0x2DCA JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x2DCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E2 JUMP JUMPDEST POP DUP2 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1B8B DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2DE6 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x31BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2E7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E97 JUMPI PUSH2 0x2E97 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2EDD JUMPI PUSH2 0x2EDD PUSH2 0x2E3C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2F3A DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2F51 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x2F68 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F90 DUP10 DUP3 DUP11 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2FC5 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x2FDC DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH2 0x2FF3 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH2 0x300A DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3032 DUP12 DUP3 DUP13 ADD PUSH2 0x2E6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x306E DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x307E DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x30A6 DUP2 PUSH2 0x2E1A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x310C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x311E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3148 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3130 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D38 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x316B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x312D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x318D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x312D JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x30A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x322D JUMPI PUSH2 0x322D PUSH2 0x31EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3244 JUMPI PUSH2 0x3244 PUSH2 0x31EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x325B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x30A6 DUP2 PUSH2 0x3042 JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x329E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32A7 DUP5 PUSH2 0x3266 JUMP JUMPDEST SWAP3 POP PUSH2 0x32B5 PUSH1 0x20 DUP6 ADD PUSH2 0x3266 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x32CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3311 JUMPI PUSH2 0x3311 PUSH2 0x31EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x334C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x338C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x33C3 JUMPI PUSH2 0x33C3 PUSH2 0x31EB JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x33FA JUMPI PUSH2 0x33FA PUSH2 0x31EB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP7 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP6 PUSH1 0x40 DUP5 ADD MSTORE DUP1 DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2CCF PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x345D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x34C3 JUMPI PUSH2 0x34C3 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x34CF DUP4 PUSH2 0x346E JUMP JUMPDEST DUP2 MSTORE PUSH2 0x34DD PUSH1 0x20 DUP5 ADD PUSH2 0x346E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3536 JUMPI PUSH2 0x3536 PUSH2 0x2E3C JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x3542 DUP4 PUSH2 0x34E9 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3550 PUSH1 0x20 DUP5 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3561 PUSH1 0x40 DUP5 ADD PUSH2 0x346E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DIFFICULTY JUMP LOG1 0xD8 0xBD 0xD3 0xDD SWAP7 0xDE 0xC0 0xAF 0xD1 PUSH1 0x2B 0x5F 0xDE SWAP2 CREATE 0xD 0xA7 0xBB 0x5F 0x2C 0xCF DUP11 0xF6 DUP8 0xB2 EQ EQ 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"1106:16421:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2532:77;;;;;;;;;;;;;:::i;:::-;;3024:308;;;;;;:::i;:::-;;:::i;:::-;;;2171:25:15;;;2159:2;2144:18;3024:308:8;;;;;;;;1449:42;;;;;;;;;;;;;;;;;;2408::15;2396:55;;;2378:74;;2366:2;2351:18;1449:42:8;2207:251:15;1831:101:0;;;;;;;;;;;;;:::i;2450:76:8:-;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;;;1201:85;;3831:560:8;;;;;;:::i;:::-;;:::i;2323:121::-;;;;;;;;;;-1:-1:-1;2323:121:8;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;16788:734:8:-;;;;;;;;;;-1:-1:-1;16788:734:8;;;;;:::i;:::-;;:::i;2532:77::-;1247:7:0;1273:6;;;1889:10:8;:21;;:61;;-1:-1:-1;1931:10:8;1914:28;;;;:16;:28;;;;;;;;;;;:36;;;1889:61;1881:123;;;;;;;5488:2:15;1881:123:8;;;5470:21:15;5527:2;5507:18;;;5500:30;5566:34;5546:18;;;5539:62;5637:19;5617:18;;;5610:47;5674:19;;1881:123:8;;;;;;;;;2593:6:::1;:10:::0;;;::::1;::::0;::::1;::::0;;2532:77::o;3024:308::-;1673:8;;3219:17;;1673:8;;;;;1685:1;1673:13;1665:50;;;;;;;5906:2:15;1665:50:8;;;5888:21:15;5945:2;5925:18;;;5918:30;5984:26;5964:18;;;5957:54;6028:18;;1665:50:8;5704:348:15;1665:50:8;1732:6;;;;;;;1742:1;1732:11;1724:48;;;;;;;6259:2:15;1724:48:8;;;6241:21:15;6298:2;6278:18;;;6271:30;6337:26;6317:18;;;6310:54;6381:18;;1724:48:8;6057:348:15;1724:48:8;1792:1;1781:12;;;;;;;;3252:74:::1;3273:7:::0;3282:8;3292;3302:12;3316:2;3320:5;3252:20:::1;:74::i;:::-;3245:81;;1812:8:::0;:12;;;;;;;;3024:308;;-1:-1:-1;;;;;;3024:308:8:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2450:76:8:-;1247:7:0;1273:6;;;1889:10:8;:21;;:61;;-1:-1:-1;1931:10:8;1914:28;;;;:16;:28;;;;;;;;;;;:36;;;1889:61;1881:123;;;;;;;5488:2:15;1881:123:8;;;5470:21:15;5527:2;5507:18;;;5500:30;5566:34;5546:18;;;5539:62;5637:19;5617:18;;;5610:47;5674:19;;1881:123:8;5286:413:15;1881:123:8;2519:1:::1;2510:10:::0;;;::::1;::::0;::::1;::::0;;2450:76::o;3831:560::-;1673:8;;4114:17;;1673:8;;;;;1685:1;1673:13;1665:50;;;;;;;5906:2:15;1665:50:8;;;5888:21:15;5945:2;5925:18;;;5918:30;5984:26;5964:18;;;5957:54;6028:18;;1665:50:8;5704:348:15;1665:50:8;1732:6;;;;;;;1742:1;1732:11;1724:48;;;;;;;6259:2:15;1724:48:8;;;6241:21:15;6298:2;6278:18;;;6271:30;6337:26;6317:18;;;6310:54;6381:18;;1724:48:8;6057:348:15;1724:48:8;1792:1;1781:12;;;;;;;;4183:52:::1;::::0;-1:-1:-1;;;;4183:20:8::1;::::0;::::1;::::0;4211:19;;-1:-1:-1;4183:52:8;-1:-1:-1;4183:52:8;4211:19;4183:20;:52:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:95;;;;4250:7;4283:11;4266:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;4242:55;;;;;;;;;;;;;;:::i;:::-;;4311:74;4332:7;4341:8;4351;4361:12;4375:2;4379:5;4311:20;:74::i;:::-;4304:81;;;;1812:8:::0;:12;;;;;;;;3831:560;;-1:-1:-1;;;;;;;;3831:560:8:o;2323:121::-;1094:13:0;:11;:13::i;:::-;2403:22:8::1;::::0;;;::::1;;::::0;;;:16:::1;:22;::::0;;;;:35;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;2323:121::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;7911:2:15;2161:73:0::1;::::0;::::1;7893:21:15::0;7950:2;7930:18;;;7923:30;7989:34;7969:18;;;7962:62;8060:8;8040:18;;;8033:36;8086:19;;2161:73:0::1;7709:402:15::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;16788:734:8:-;16940:14;;;;16926:10;:28;16918:103;;;;;;;8318:2:15;16918:103:8;;;8300:21:15;8357:2;8337:18;;;8330:30;8396:34;8376:18;;;8369:62;8467:32;8447:18;;;8440:60;8517:19;;16918:103:8;8116:426:15;16918:103:8;17028:14;:40;;;;591:42;17028:40;;;:14;17095:27;;;;17106:4;17095:27;:::i;:::-;17075:47;;17129:13;17160:1;17145:12;:16;:46;;17179:12;17145:46;;;17164:12;17145:46;17129:62;;17215:1;17206:6;:10;17198:80;;;;;;;9009:2:15;17198:80:8;;;8991:21:15;9048:2;9028:18;;;9021:30;9087:34;9067:18;;;9060:62;9158:27;9138:18;;;9131:55;9203:19;;17198:80:8;8807:421:15;17198:80:8;17459:57;:28;;;17488:10;17508:6;17459:28;:57::i;:::-;16911:611;;16788:734;;;;:::o;4722:1637::-;4911:17;;4964:25;;;503:42;4964:25;:89;;5016:37;;;;;5042:10;5016:37;;;2378:74:15;5016:25:8;;;;;;2351:18:15;;5016:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4964:89;;;4992:21;4964:89;4937:116;-1:-1:-1;5060:25:8;5088:26;;;503:42;5088:26;:81;;5139:30;;;;;:26;2396:55:15;;;5139:30:8;;;2378:74:15;5139:26:8;;;;;2351:18:15;;5139:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5088:81;;;5125:2;5117:19;;;5088:81;215:4:6;209:11;;241:15;;;228:29;;;265:20;;;307:11;;350:17;;345:2;333:15;;326:42;5060:109:8;;-1:-1:-1;5233:507:8;522:13:6;;571:2;559:15;;553:22;-1:-1:-1;5233:507:8;;;5270:17;5290:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;5290:18:8;5270:38;;5321:11;:16;;5336:1;5321:16;5317:415;;;5339:22;5354:6;5339:14;:22::i;:::-;5317:415;;;5379:11;:16;;5394:1;5379:16;5375:357;;;5397:34;5414:6;5422:8;5397:16;:34::i;5375:357::-;5449:11;:16;;5464:1;5449:16;5445:287;;;5467:21;5481:6;5467:13;:21::i;5445:287::-;5506:11;:16;;5521:1;5506:16;5502:230;;;5524:22;5539:6;5524:14;:22::i;5502:230::-;5564:11;:16;;5579:1;5564:16;5560:172;;;5582:26;5601:6;5582:18;:26::i;5560:172::-;5626:11;:16;;5641:1;5626:16;5622:110;;;5644:28;5656:7;5665:6;5644:11;:28::i;5622:110::-;5686:46;;;;;9624:2:15;5686:46:8;;;9606:21:15;9663:2;9643:18;;;9636:30;9702:34;9682:18;;;9675:62;9773:6;9753:18;;;9746:34;9797:19;;5686:46:8;9422:400:15;5622:110:8;5261:479;5233:507;;;5748:22;5773:25;;;503:42;5773:25;:89;;5825:37;;;;;5851:10;5825:37;;;2378:74:15;5825:25:8;;;;;;2351:18:15;;5825:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5773:89;;;5801:21;5773:89;5748:114;-1:-1:-1;5906:16:8;5877:25;5894:8;5748:114;5877:25;:::i;:::-;:45;;5869:105;;;;;;;10351:2:15;5869:105:8;;;10333:21:15;10390:2;10370:18;;;10363:30;10429:34;10409:18;;;10402:62;10500:17;10480:18;;;10473:45;10535:19;;5869:105:8;10149:411:15;5869:105:8;5983:23;6009:26;;;503:42;6009:26;:81;;6060:30;;;;;:26;2396:55:15;;;6060:30:8;;;2378:74:15;6060:26:8;;;;;2351:18:15;;6060:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6009:81;;;6046:2;6038:19;;;6009:81;5983:107;-1:-1:-1;6124:32:8;6144:12;6124:17;:32;:::i;:::-;6105:15;:51;;6097:111;;;;;;;10767:2:15;6097:111:8;;;10749:21:15;10806:2;10786:18;;;10779:30;10845:34;10825:18;;;10818:62;10916:17;10896:18;;;10889:45;10951:19;;6097:111:8;10565:411:15;6097:111:8;6229:35;6247:17;6229:15;:35;:::i;:::-;6278:75;;;;11360:55:15;;;11342:74;;11447:2;11432:18;;11425:34;;;11475:18;;;11468:34;;;11533:2;11518:18;;11511:34;;;6217:47:8;;-1:-1:-1;6278:75:8;;;;;;;;6284:10;;6278:75;;11329:3:15;11314:19;6278:75:8;;;;;;;4930:1429;;;;;4722:1637;;;;;;;;:::o;1359:130:0:-;1247:7;1273:6;1422:23;1273:6;719:10:5;1422:23:0;1414:68;;;;;;;11758:2:15;1414:68:0;;;11740:21:15;;;11777:18;;;11770:30;11836:34;11816:18;;;11809:62;11888:18;;1414:68:0;11556:356:15;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;763:205:3:-;902:58;;12121:42:15;12109:55;;902:58:3;;;12091:74:15;12181:18;;;12174:34;;;875:86:3;;895:5;;925:23;;12064:18:15;;902:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;7320:332:8:-;7375:13;7391:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7391:20:8;7440:38;;;;;7472:4;7440:38;;;2378:74:15;7375:36:8;;-1:-1:-1;7418:19:8;;7440:23;;;;;;2351:18:15;;7440:38:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7418:60;-1:-1:-1;7508:15:8;;7504:37;;7525:16;;7504:37;7586:60;7604:6;7620:4;7627:5;7634:11;7586:17;:60::i;7900:184::-;7978:13;7994:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;7994:20:8;7978:36;;8021:57;8039:6;8047:10;8059:5;8066:11;8021:17;:57::i;6959:179::-;7035:21;7063:69;7081:6;7097:4;503:42;7035:21;7063:17;:69::i;:::-;7006:132;6959:179;:::o;9090:141::-;9145:13;9161:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;9161:20:8;9145:36;;9188:37;9193:6;9209:4;9216:5;9223:1;9188:4;:37::i;9387:549::-;9446:13;9462:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;9462:20:8;9446:36;;9489:9;9501:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;9501:18:8;9550:40;;;;;:18;12472:15:15;;;9550:40:8;;;12454:34:15;9584:4:8;12504:18:15;;;12497:43;9489:30:8;;-1:-1:-1;9528:19:8;;9550:8;:18;;;;12366::15;;9550:40:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9528:62;-1:-1:-1;9620:15:8;;9616:37;;9637:16;;9616:37;9698:9;9693:231;9717:3;9713:7;;:1;:7;9693:231;;;9738:12;9753:19;:6;940:13:6;;977:1;968:11;994:10;;1012:19;;994:10;833:210;9753:19:8;9824:5;9801:19;;;;;9800:29;9840:21;;;;;9738:34;;-1:-1:-1;9872:42:8;9877:6;9893:4;9900:5;9800:29;9872:4;:42::i;:::-;-1:-1:-1;;9722:3:8;;9693:231;;;;9439:497;;;9387:549;:::o;6365:453::-;6531:13;6547:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;6547:17:8;6531:33;;6571:16;6590:17;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;6590:17:8;6571:36;;6614:7;6624:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;6624:18:8;6614:28;;6649:9;6661:20;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;6661:20:8;6649:32;;6688:9;6700:20;:6;1371:13:6;;1408:2;1399:12;1426:10;;1444:19;;1426:10;1265:210;6700:20:8;6688:32;-1:-1:-1;6727:85:8;:32;;;6760:10;6780:4;6787:5;6794:8;6804:1;6807;6688:32;6727;:85::i;:::-;6427:391;;;;;6365:453;;:::o;3747:706:3:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:3;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;13192:2:15;4351:85:3;;;13174:21:15;13231:2;13211:18;;;13204:30;13270:34;13250:18;;;13243:62;13341:12;13321:18;;;13314:40;13371:19;;4351:85:3;12990:406:15;8394:402:8;8504:9;8516:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;8516:18:8;8504:30;;8565:9;8560:224;8584:3;8580:7;;:1;:7;8560:224;;;8605:12;8620:19;:6;940:13:6;;977:1;968:11;994:10;;1012:19;;994:10;833:210;8620:19:8;8691:5;8668:19;;;;;8667:29;8707:21;;;;;8605:34;;-1:-1:-1;8739:35:8;8744:6;8752:4;8758:7;8667:29;8739:4;:35::i;:::-;-1:-1:-1;;8589:3:8;;8560:224;;10158:555;10252:14;10269:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;10269:18:8;10252:35;-1:-1:-1;10298:13:8;;;10294:413;;10313:42;10323:6;10331:4;10337:7;10346:8;10313:9;:42::i;:::-;10294:413;;;10371:8;:13;;10383:1;10371:13;10367:340;;;10386:42;10396:6;10404:4;10410:7;10419:8;10386:9;:42::i;10367:340::-;10444:8;:13;;10456:1;10444:13;10440:267;;;10459:43;10470:6;10478:4;10484:7;10493:8;10459:10;:43::i;10440:267::-;10518:8;:13;;10530:1;10518:13;10514:193;;;10533:44;10545:6;10553:4;10559:7;10568:8;10533:11;:44::i;10514:193::-;10593:8;:13;;10605:1;10593:13;10589:118;;;10608:44;10620:6;10628:4;10634:7;10643:8;10608:11;:44::i;10589:118::-;10664:43;;;;;13603:2:15;10664:43:8;;;13585:21:15;13642:2;13622:18;;;13615:30;13681:34;13661:18;;;13654:62;13752:3;13732:18;;;13725:31;13773:19;;10664:43:8;13401:397:15;2892:472:3;3139:19;;;;;:12;2396:55:15;;;3139:19:3;;;2378:74:15;3117:19:3;;3139:12;;;;;;2351:18:15;;3139:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3168:54;;;;;:12;14193:15:15;;;3168:54:3;;;14175:34:15;14245:15;;;14225:18;;;14218:43;14277:18;;;14270:34;;;14320:18;;;14313:34;;;14396:4;14384:17;;14363:19;;;14356:46;14418:19;;;14411:35;;;14462:19;;;14455:35;;;3117:41:3;;-1:-1:-1;3168:12:3;;;;;;14086:19:15;;3168:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3253:19:3;;;;;:12;2396:55:15;;;3253:19:3;;;2378:74:15;3232:18:3;;-1:-1:-1;3253:12:3;;;-1:-1:-1;3253:12:3;;2351:18:15;;3253:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3232:40;-1:-1:-1;3304:15:3;:11;3318:1;3304:15;:::i;:::-;3290:10;:29;3282:75;;;;;;;14703:2:15;3282:75:3;;;14685:21:15;14742:2;14722:18;;;14715:30;14781:34;14761:18;;;14754:62;14852:3;14832:18;;;14825:31;14873:19;;3282:75:3;14501:397:15;3282:75:3;3107:257;;2892:472;;;;;;;;:::o;3873:223:4:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:4:o;13286:1050:8:-;13385:12;13400:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;13400:20:8;13385:35;;13427:15;13445:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;13445:18:8;13427:36;;13470:10;13483:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;13483:20:8;13470:33;;13513:10;13525;13556:4;13541:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13512:63;;;;;;;;;13595:1;13590:2;:6;:16;;;;;13605:1;13600:2;:6;13590:16;13582:48;;;;;;;15753:2:15;13582:48:8;;;15735:21:15;15792:2;15772:18;;;15765:30;15831:21;15811:18;;;15804:49;15870:18;;13582:48:8;15551:343:15;13582:48:8;13638:17;13657:18;13679:9;:14;;13692:1;13679:14;:36;;13708:2;13712;13679:36;;;13697:2;13701;13679:36;13637:78;;;;13728:8;13740:1;13728:13;13724:235;;13756:21;;;13772:4;13756:21;13752:139;;;13779:44;:28;;;13808:4;13814:8;13779:28;:44::i;:::-;13724:235;;13752:139;13837:54;:32;;;13870:4;13876;13882:8;13837:32;:54::i;13724:235::-;13916:31;;;;;:25;2396:55:15;;;13916:31:8;;;2378:74:15;13950:9:8;;13916:25;;;;;;2351:18:15;;13916:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;13905:54;;13724:235;14004:23;14030:14;:8;14041:3;14030:14;:::i;:::-;14004:40;-1:-1:-1;14051:17:8;14004:40;14105:16;:9;14117:4;14105:16;:::i;:::-;:34;;;;:::i;:::-;14072:28;14090:10;14072:15;:28;:::i;:::-;14071:69;;;;:::i;:::-;14051:89;;14148:18;14168;14190:9;:14;;14203:1;14190:14;:66;;14234:9;14253:1;14190:66;;;14216:1;14220:9;14190:66;14317:12;;;14327:1;14317:12;;;;;;;;;14263:67;;;;14147:109;;-1:-1:-1;14147:109:8;-1:-1:-1;14263:25:8;;;;;;:67;;14147:109;;;;14313:2;;14263:67;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13378:958;;;;;;;;;;;13286:1050;;;;:::o;15114:774::-;15213:12;15228:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;15228:20:8;15213:35;;15255:15;15294:1;15273:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;15273:18:8;:22;;;15255:40;;15302:17;15322:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;15322:20:8;15302:40;-1:-1:-1;15355:21:8;;;15371:4;15355:21;15351:196;;15395:18;;;15403:10;15395:18;15387:65;;;;;;;17100:2:15;15387:65:8;;;17082:21:15;17139:2;17119:18;;;17112:30;17178:34;17158:18;;;17151:62;17249:4;17229:18;;;17222:32;17271:19;;15387:65:8;16898:398:15;15387:65:8;15461:78;:32;;;15494:10;15514:4;15529:8;15461:32;:78::i;:::-;15555:14;:21;;;;;;;;;;;;;15583:25;15617:9;15635:10;15661:8;15635:10;15679:52;;15713:18;15730:1;955:49;15713:18;:::i;:::-;15679:52;;;15692:18;790:10;15709:1;15692:18;:::i;:::-;15740:19;;;2408:42:15;2396:55;;15740:19:8;;;2378:74:15;2351:18;15740:19:8;;;;;;;;;;;;15583:183;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;15781:14:8;;:41;:14;591:42;15781:41;15773:90;;;;;;;18873:2:15;15773:90:8;;;18855:21:15;18912:2;18892:18;;;18885:30;18951:34;18931:18;;;18924:62;19022:6;19002:18;;;18995:34;19046:19;;15773:90:8;18671:400:15;10968:739:8;11068:22;11093:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;11093:18:8;11068:43;;11118:10;11131:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;11131:20:8;11118:33;-1:-1:-1;11183:1:8;11164:20;;;:25;11160:542;;;11216:17;11236:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;11236:20:8;11216:40;-1:-1:-1;11288:1:8;11269:20;;11265:74;;11302:9;11296:24;;;11328:8;11296:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11265:74;11352:19;;;11366:4;11352:19;11348:69;;11373:44;:30;;;11404:2;11408:8;11373:30;:44::i;:::-;11191:234;11160:542;;;11480:1;11461:20;;11457:186;;11503:21;;;11519:4;11503:21;11499:90;;11526:63;:32;;;11559:4;11573;11580:8;11526:32;:63::i;:::-;11600:33;;;;;;;;2171:25:15;;;11600:23:8;;;;;;2144:18:15;;11600:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11457:186;11651:43;;:20;;;;11672:21;11651:43;;;;;;;;;11672:21;11651:20;:43;;;;;;;;;;;;;;;;;;;11953:1098;12054:15;12072:18;:6;724:13:6;;761:1;752:11;778:10;;796:19;;778:10;619:208;12072:18:8;12054:36;;12097:10;12110:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;12110:20:8;12097:33;-1:-1:-1;12143:13:8;;;;12139:907;;12273:13;;12269:435;;12303:21;;;12319:4;12303:21;12299:167;;;12326:57;:28;;;12363:8;12374;12326:28;:57::i;:::-;12269:435;;12299:167;12399:67;:32;;;12432:4;12446:8;12457;12399:32;:67::i;12269:435::-;12662:24;;;;;:15;2396:55:15;;;12662:24:8;;;2378:74:15;12662:8:8;:15;;;;2351:18:15;;12662:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;12612:30;;;;;:21;2396:55:15;;;12612:30:8;;;2378:74:15;12556:138:8;;;;;12612:8;:21;;;;2351:18:15;;12612:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;;12556:44;;;;;:25;12590:8;2396:55:15;;12556:44:8;;;2378:74:15;12556:94:8;;;;;:25;;;;;2351:18:15;;12556:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:94;;;;:::i;:::-;:138;;;;:::i;:::-;12545:149;;12269:435;12712:61;;;;;:16;20992:15:15;;;12712:61:8;;;20974:34:15;12712:8:8;:16;;21024:18:15;;;21017:43;;;21096:15;;;21076:18;;;21069:43;21128:18;;;21121:34;;;12771:1:8;21171:19:15;;;21164:35;12712:16:8;;;20885:19:15;;12712:61:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12139:907;;;12820:12;;12816:155;;12845:57;;;;;:17;21770:15:15;;;12845:57:8;;;21752:34:15;21822:15;;;21802:18;;;21795:43;12886:4:8;21854:18:15;;;21847:43;21906:18;;;21899:34;;;12845:8:8;:17;;;;21663:19:15;;12845:57:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12816:155;;;12929:42;;;;;:18;12472:15:15;;;12929:42:8;;;12454:34:15;12965:4:8;12504:18:15;;;12497:43;12929:8:8;:18;;;;12366::15;;12929:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12918:53;;12816:155;12980:58;;;;;:17;20992:15:15;;;12980:58:8;;;20974:34:15;13015:4:8;21024:18:15;;;21017:43;21096:15;;;21076:18;;;21069:43;13026:1:8;21128:18:15;;;21121:34;21171:19;;;21164:35;;;12980:8:8;:17;;;;20885:19:15;;12980:58:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12047:1004;;11953:1098;;;;:::o;14557:322::-;14658:12;14673:20;:6;1809:13:6;;1846:2;1837:12;1864:10;;1882:19;;1864:10;1700:213;14673:20:8;2031:13:6;;2068:2;2059:12;;;2093:10;;2126:16;;;;2111:32;;14658:35:8;;-1:-1:-1;14755:13:8;;14751:84;;14779:48;;;;;:17;21770:15:15;;;14779:48:8;;;21752:34:15;21822:15;;;21802:18;;;21795:43;21874:15;;;21854:18;;;21847:43;21906:18;;;21899:34;;;14779:8:8;:17;;;;21663:19:15;;14779:48:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14751:84;14847:26;;;;;:16;;;;;;:26;;14864:8;;14847:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4960:446:4:-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;22933:2:15;5149:81:4;;;22915:21:15;22972:2;22952:18;;;22945:30;23011:34;22991:18;;;22984:62;23082:8;23062:18;;;23055:36;23108:19;;5149:81:4;22731:402:15;5149:81:4;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:4:o;974:241:3:-;1139:68;;23350:42:15;23419:15;;;1139:68:3;;;23401:34:15;23471:15;;23451:18;;;23444:43;23503:18;;;23496:34;;;1112:96:3;;1132:5;;1162:27;;23313:18:15;;1139:68:3;23138:398:15;1112:96:3;974:241;;;;:::o;7466:628:4:-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;1465:19;;;;7908:60;;;;;;;23743:2:15;7908:60:4;;;23725:21:15;23782:2;23762:18;;;23755:30;23821:31;23801:18;;;23794:59;23870:18;;7908:60:4;23541:353:15;7908:60:4;-1:-1:-1;8003:10:4;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;14:154:15:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:184;225:77;222:1;215:88;322:4;319:1;312:15;346:4;343:1;336:15;362:777;404:5;457:3;450:4;442:6;438:17;434:27;424:55;;475:1;472;465:12;424:55;511:6;498:20;537:18;574:2;570;567:10;564:36;;;580:18;;:::i;:::-;714:2;708:9;776:4;768:13;;619:66;764:22;;;788:2;760:31;756:40;744:53;;;812:18;;;832:22;;;809:46;806:72;;;858:18;;:::i;:::-;898:10;894:2;887:22;933:2;925:6;918:18;979:3;972:4;967:2;959:6;955:15;951:26;948:35;945:55;;;996:1;993;986:12;945:55;1060:2;1053:4;1045:6;1041:17;1034:4;1026:6;1022:17;1009:54;1107:1;1100:4;1095:2;1087:6;1083:15;1079:26;1072:37;1127:6;1118:15;;;;;;362:777;;;;:::o;1144:876::-;1257:6;1265;1273;1281;1289;1297;1350:3;1338:9;1329:7;1325:23;1321:33;1318:53;;;1367:1;1364;1357:12;1318:53;1406:9;1393:23;1425:31;1450:5;1425:31;:::i;:::-;1475:5;-1:-1:-1;1527:2:15;1512:18;;1499:32;;-1:-1:-1;1583:2:15;1568:18;;1555:32;1596:33;1555:32;1596:33;:::i;:::-;1648:7;-1:-1:-1;1702:2:15;1687:18;;1674:32;;-1:-1:-1;1758:3:15;1743:19;;1730:33;1772;1730;1772;:::i;:::-;1824:7;-1:-1:-1;1882:3:15;1867:19;;1854:33;1910:18;1899:30;;1896:50;;;1942:1;1939;1932:12;1896:50;1965:49;2006:7;1997:6;1986:9;1982:22;1965:49;:::i;:::-;1955:59;;;1144:876;;;;;;;;:::o;2694:1095::-;2833:6;2841;2849;2857;2865;2873;2881;2889;2942:3;2930:9;2921:7;2917:23;2913:33;2910:53;;;2959:1;2956;2949:12;2910:53;2998:9;2985:23;3017:31;3042:5;3017:31;:::i;:::-;3067:5;-1:-1:-1;3119:2:15;3104:18;;3091:32;;-1:-1:-1;3175:2:15;3160:18;;3147:32;3188:33;3147:32;3188:33;:::i;:::-;3240:7;-1:-1:-1;3294:2:15;3279:18;;3266:32;;-1:-1:-1;3350:3:15;3335:19;;3322:33;3364;3322;3364;:::i;:::-;3416:7;-1:-1:-1;3470:3:15;3455:19;;3442:33;;-1:-1:-1;3527:3:15;3512:19;;3499:33;3541;3499;3541;:::i;:::-;3593:7;-1:-1:-1;3651:3:15;3636:19;;3623:33;3679:18;3668:30;;3665:50;;;3711:1;3708;3701:12;3665:50;3734:49;3775:7;3766:6;3755:9;3751:22;3734:49;:::i;:::-;3724:59;;;2694:1095;;;;;;;;;;;:::o;3794:118::-;3880:5;3873:13;3866:21;3859:5;3856:32;3846:60;;3902:1;3899;3892:12;3917:382;3982:6;3990;4043:2;4031:9;4022:7;4018:23;4014:32;4011:52;;;4059:1;4056;4049:12;4011:52;4098:9;4085:23;4117:31;4142:5;4117:31;:::i;:::-;4167:5;-1:-1:-1;4224:2:15;4209:18;;4196:32;4237:30;4196:32;4237:30;:::i;:::-;4286:7;4276:17;;;3917:382;;;;;:::o;4304:247::-;4363:6;4416:2;4404:9;4395:7;4391:23;4387:32;4384:52;;;4432:1;4429;4422:12;4384:52;4471:9;4458:23;4490:31;4515:5;4490:31;:::i;:::-;4540:5;4304:247;-1:-1:-1;;;4304:247:15:o;4556:725::-;4642:6;4650;4658;4666;4719:2;4707:9;4698:7;4694:23;4690:32;4687:52;;;4735:1;4732;4725:12;4687:52;4771:9;4758:23;4748:33;;4828:2;4817:9;4813:18;4800:32;4790:42;;4883:2;4872:9;4868:18;4855:32;4906:18;4947:2;4939:6;4936:14;4933:34;;;4963:1;4960;4953:12;4933:34;5001:6;4990:9;4986:22;4976:32;;5046:7;5039:4;5035:2;5031:13;5027:27;5017:55;;5068:1;5065;5058:12;5017:55;5108:2;5095:16;5134:2;5126:6;5123:14;5120:34;;;5150:1;5147;5140:12;5120:34;5195:7;5190:2;5181:6;5177:2;5173:15;5169:24;5166:37;5163:57;;;5216:1;5213;5206:12;5163:57;4556:725;;;;-1:-1:-1;;5247:2:15;5239:11;;-1:-1:-1;;;4556:725:15:o;6620:258::-;6692:1;6702:113;6716:6;6713:1;6710:13;6702:113;;;6792:11;;;6786:18;6773:11;;;6766:39;6738:2;6731:10;6702:113;;;6833:6;6830:1;6827:13;6824:48;;;-1:-1:-1;;6868:1:15;6850:16;;6843:27;6620:258::o;6883:274::-;7012:3;7050:6;7044:13;7066:53;7112:6;7107:3;7100:4;7092:6;7088:17;7066:53;:::i;:::-;7135:16;;;;;6883:274;-1:-1:-1;;6883:274:15:o;7162:317::-;7204:3;7242:5;7236:12;7269:6;7264:3;7257:19;7285:63;7341:6;7334:4;7329:3;7325:14;7318:4;7311:5;7307:16;7285:63;:::i;:::-;7393:2;7381:15;7398:66;7377:88;7368:98;;;;7468:4;7364:109;;7162:317;-1:-1:-1;;7162:317:15:o;7484:220::-;7633:2;7622:9;7615:21;7596:4;7653:45;7694:2;7683:9;7679:18;7671:6;7653:45;:::i;9233:184::-;9303:6;9356:2;9344:9;9335:7;9331:23;9327:32;9324:52;;;9372:1;9369;9362:12;9324:52;-1:-1:-1;9395:16:15;;9233:184;-1:-1:-1;9233:184:15:o;9827:::-;9879:77;9876:1;9869:88;9976:4;9973:1;9966:15;10000:4;9997:1;9990:15;10016:128;10056:3;10087:1;10083:6;10080:1;10077:13;10074:39;;;10093:18;;:::i;:::-;-1:-1:-1;10129:9:15;;10016:128::o;10981:125::-;11021:4;11049:1;11046;11043:8;11040:34;;;11054:18;;:::i;:::-;-1:-1:-1;11091:9:15;;10981:125::o;12740:245::-;12807:6;12860:2;12848:9;12839:7;12835:23;12831:32;12828:52;;;12876:1;12873;12866:12;12828:52;12908:9;12902:16;12927:28;12949:5;12927:28;:::i;14903:188::-;14982:13;;15035:30;15024:42;;15014:53;;15004:81;;15081:1;15078;15071:12;15004:81;14903:188;;;:::o;15096:450::-;15183:6;15191;15199;15252:2;15240:9;15231:7;15227:23;15223:32;15220:52;;;15268:1;15265;15258:12;15220:52;15291:40;15321:9;15291:40;:::i;:::-;15281:50;;15350:49;15395:2;15384:9;15380:18;15350:49;:::i;:::-;15340:59;;15442:2;15431:9;15427:18;15421:25;15486:10;15479:5;15475:22;15468:5;15465:33;15455:61;;15512:1;15509;15502:12;15455:61;15535:5;15525:15;;;15096:450;;;;;:::o;15899:228::-;15939:7;16065:1;15997:66;15993:74;15990:1;15987:81;15982:1;15975:9;15968:17;15964:105;15961:131;;;16072:18;;:::i;:::-;-1:-1:-1;16112:9:15;;15899:228::o;16132:274::-;16172:1;16198;16188:189;;16233:77;16230:1;16223:88;16334:4;16331:1;16324:15;16362:4;16359:1;16352:15;16188:189;-1:-1:-1;16391:9:15;;16132:274::o;16411:482::-;16642:6;16631:9;16624:25;16685:6;16680:2;16669:9;16665:18;16658:34;16740:42;16732:6;16728:55;16723:2;16712:9;16708:18;16701:83;16820:3;16815:2;16804:9;16800:18;16793:31;16605:4;16841:46;16882:3;16871:9;16867:19;16859:6;16841:46;:::i;:::-;16833:54;16411:482;-1:-1:-1;;;;;;16411:482:15:o;17301:254::-;17341:4;17370:42;17462:10;;;;17432;;17484:12;;;17481:38;;;17499:18;;:::i;:::-;17536:13;;17301:254;-1:-1:-1;;;17301:254:15:o;17560:261::-;17600:3;17628:42;17697:2;17694:1;17690:10;17727:2;17724:1;17720:10;17758:3;17754:2;17750:12;17745:3;17742:21;17739:47;;;17766:18;;:::i;:::-;17802:13;;17560:261;-1:-1:-1;;;;17560:261:15:o;17826:592::-;18040:4;18069:42;18150:2;18142:6;18138:15;18127:9;18120:34;18204:6;18197:14;18190:22;18185:2;18174:9;18170:18;18163:50;18249:6;18244:2;18233:9;18229:18;18222:34;18304:2;18296:6;18292:15;18287:2;18276:9;18272:18;18265:43;;18345:3;18339;18328:9;18324:19;18317:32;18366:46;18407:3;18396:9;18392:19;18384:6;18366:46;:::i;18423:243::-;18500:6;18508;18561:2;18549:9;18540:7;18536:23;18532:32;18529:52;;;18577:1;18574;18567:12;18529:52;-1:-1:-1;;18600:16:15;;18656:2;18641:18;;;18635:25;18600:16;;18635:25;;-1:-1:-1;18423:243:15:o;19076:192::-;19155:13;;19208:34;19197:46;;19187:57;;19177:85;;19258:1;19255;19248:12;19273:548;19367:6;19420:2;19408:9;19399:7;19395:23;19391:32;19388:52;;;19436:1;19433;19426:12;19388:52;19469:2;19463:9;19511:2;19503:6;19499:15;19580:6;19568:10;19565:22;19544:18;19532:10;19529:34;19526:62;19523:88;;;19591:18;;:::i;:::-;19627:2;19620:22;19666:40;19696:9;19666:40;:::i;:::-;19658:6;19651:56;19740:49;19785:2;19774:9;19770:18;19740:49;:::i;:::-;19735:2;19723:15;;19716:74;19727:6;19273:548;-1:-1:-1;;;19273:548:15:o;19826:175::-;19904:13;;19957:18;19946:30;;19936:41;;19926:69;;19991:1;19988;19981:12;20006:635;20106:6;20159:2;20147:9;20138:7;20134:23;20130:32;20127:52;;;20175:1;20172;20165:12;20127:52;20208:2;20202:9;20250:2;20242:6;20238:15;20319:6;20307:10;20304:22;20283:18;20271:10;20268:34;20265:62;20262:88;;;20330:18;;:::i;:::-;20366:2;20359:22;20405:39;20434:9;20405:39;:::i;:::-;20397:6;20390:55;20478:48;20522:2;20511:9;20507:18;20478:48;:::i;:::-;20473:2;20465:6;20461:15;20454:73;20560:49;20605:2;20594:9;20590:18;20560:49;:::i;:::-;20555:2;20543:15;;20536:74;20547:6;20006:635;-1:-1:-1;;;20006:635:15:o"},"gasEstimates":{"creation":{"codeDepositCost":"2746200","executionCost":"infinite","totalCost":"infinite"},"external":{"bentoBox()":"infinite","owner()":"2330","pause()":"28774","processRoute(address,uint256,address,uint256,address,bytes)":"infinite","renounceOwnership()":"infinite","resume()":"28731","setPriviledge(address,bool)":"infinite","transferOwnership(address)":"infinite","transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":"infinite","uniswapV3SwapCallback(int256,int256,bytes)":"infinite"},"internal":{"applyPermit(address,uint256)":"infinite","bentoBridge(uint256,address,address,uint256)":"infinite","distributeAndSwap(uint256,address,address,uint256)":"infinite","processInsideBento(uint256)":"infinite","processMyERC20(uint256)":"infinite","processNative(uint256)":"infinite","processOnePool(uint256)":"infinite","processRouteInternal(address,uint256,address,uint256,address,bytes memory)":"infinite","processUserERC20(uint256,uint256)":"infinite","swap(uint256,address,address,uint256)":"infinite","swapTrident(uint256,address,address,uint256)":"infinite","swapUniV2(uint256,address,address,uint256)":"infinite","swapUniV3(uint256,address,address,uint256)":"infinite","wrapNative(uint256,address,address,uint256)":"infinite"}},"methodIdentifiers":{"bentoBox()":"6b2ace87","owner()":"8da5cb5b","pause()":"8456cb59","processRoute(address,uint256,address,uint256,address,bytes)":"2646478b","renounceOwnership()":"715018a6","resume()":"046f7da2","setPriviledge(address,bool)":"9a1f3406","transferOwnership(address)":"f2fde38b","transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":"93b3774c","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bentoBox\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"priviledgedUserList\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Route\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bentoBox\",\"outputs\":[{\"internalType\":\"contract IBentoBoxMinimal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"route\",\"type\":\"bytes\"}],\"name\":\"processRoute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"priviledge\",\"type\":\"bool\"}],\"name\":\"setPriviledge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"transferValueTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountValueTransfer\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"route\",\"type\":\"bytes\"}],\"name\":\"transferValueAndprocessRoute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ilya Lyalin version 2.1\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"processRoute(address,uint256,address,uint256,address,bytes)\":{\"params\":{\"amountIn\":\"Amount of the input token\",\"amountOutMin\":\"Minimum amount of the output token\",\"tokenIn\":\"Address of the input token\",\"tokenOut\":\"Address of the output token\"},\"returns\":{\"amountOut\":\"Actual amount of the output token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)\":{\"params\":{\"amountIn\":\"Amount of the input token\",\"amountOutMin\":\"Minimum amount of the output token\",\"amountValueTransfer\":\"How much value to transfer\",\"tokenIn\":\"Address of the input token\",\"tokenOut\":\"Address of the output token\",\"transferValueTo\":\"Address where the value should be transferred\"},\"returns\":{\"amountOut\":\"Actual amount of the output token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"A route processor for the Sushi Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processRoute(address,uint256,address,uint256,address,bytes)\":{\"notice\":\"Processes the route generated off-chain. Has a lock\"},\"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)\":{\"notice\":\"Transfers some value to <transferValueTo> and then processes the route\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RouteProcessor3.sol\":\"RouteProcessor3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/InputStream.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nlibrary InputStream {\\r\\n  function createStream(bytes memory data) internal pure returns (uint256 stream) {\\r\\n    assembly {\\r\\n      stream := mload(0x40)\\r\\n      mstore(0x40, add(stream, 64))\\r\\n      mstore(stream, data)\\r\\n      let length := mload(data)\\r\\n      mstore(add(stream, 32), add(data, length))\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function isNotEmpty(uint256 stream) internal pure returns (bool) {\\r\\n    uint256 pos;\\r\\n    uint256 finish;\\r\\n    assembly {\\r\\n      pos := mload(stream)\\r\\n      finish := mload(add(stream, 32))\\r\\n    }\\r\\n    return pos < finish;\\r\\n  }\\r\\n\\r\\n  function readUint8(uint256 stream) internal pure returns (uint8 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 1)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint16(uint256 stream) internal pure returns (uint16 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 2)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint32(uint256 stream) internal pure returns (uint32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 4)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readUint(uint256 stream) internal pure returns (uint256 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes32(uint256 stream) internal pure returns (bytes32 res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 32)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readAddress(uint256 stream) internal pure returns (address res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      pos := add(pos, 20)\\r\\n      res := mload(pos)\\r\\n      mstore(stream, pos)\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function readBytes(uint256 stream) internal pure returns (bytes memory res) {\\r\\n    assembly {\\r\\n      let pos := mload(stream)\\r\\n      res := add(pos, 32)\\r\\n      let length := mload(res)\\r\\n      mstore(stream, add(res, length))\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x84844b6c074e12ef158213777119a6456f4ed97b30d36207a5f2bf0d45b3bc4a\",\"license\":\"UNLICENSED\"},\"contracts/RouteProcessor3.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport '../interfaces/IUniswapV2Pair.sol';\\r\\nimport '../interfaces/IUniswapV3Pool.sol';\\r\\nimport '../interfaces/ITridentCLPool.sol';\\r\\nimport '../interfaces/IBentoBoxMinimal.sol';\\r\\nimport '../interfaces/IPool.sol';\\r\\nimport '../interfaces/IWETH.sol';\\r\\nimport './InputStream.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\naddress constant NATIVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\naddress constant IMPOSSIBLE_POOL_ADDRESS = 0x0000000000000000000000000000000000000001;\\r\\n\\r\\n/// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\\r\\nuint160 constant MIN_SQRT_RATIO = 4295128739;\\r\\n/// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\\r\\nuint160 constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\\r\\n\\r\\n/// @title A route processor for the Sushi Aggregator\\r\\n/// @author Ilya Lyalin\\r\\n/// version 2.1\\r\\ncontract RouteProcessor3 is Ownable {\\r\\n  using SafeERC20 for IERC20;\\r\\n  using SafeERC20 for IERC20Permit;\\r\\n  using InputStream for uint256;\\r\\n\\r\\n  event Route(\\r\\n    address indexed from, \\r\\n    address to, \\r\\n    address indexed tokenIn, \\r\\n    address indexed tokenOut, \\r\\n    uint amountIn, \\r\\n    uint amountOutMin,\\r\\n    uint amountOut\\r\\n  );\\r\\n\\r\\n  IBentoBoxMinimal public immutable bentoBox;\\r\\n  mapping (address => bool) priviledgedUsers;\\r\\n  address private lastCalledPool;\\r\\n\\r\\n  uint8 private unlocked = 1;\\r\\n  uint8 private paused = 1;\\r\\n  modifier lock() {\\r\\n      require(unlocked == 1, 'RouteProcessor is locked');\\r\\n      require(paused == 1, 'RouteProcessor is paused');\\r\\n      unlocked = 2;\\r\\n      _;\\r\\n      unlocked = 1;\\r\\n  }\\r\\n\\r\\n  modifier onlyOwnerOrPriviledgedUser() {\\r\\n    require(msg.sender == owner() || priviledgedUsers[msg.sender] == true, \\\"RP: caller is not the owner or a priviledged user\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  constructor(address _bentoBox, address[] memory priviledgedUserList) {\\r\\n    bentoBox = IBentoBoxMinimal(_bentoBox);\\r\\n    lastCalledPool = IMPOSSIBLE_POOL_ADDRESS;\\r\\n\\r\\n    for (uint i = 0; i < priviledgedUserList.length; i++) {\\r\\n      priviledgedUsers[priviledgedUserList[i]] = true;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function setPriviledge(address user, bool priviledge) external onlyOwner {\\r\\n    priviledgedUsers[user] = priviledge;\\r\\n  }\\r\\n\\r\\n  function pause() external onlyOwnerOrPriviledgedUser {\\r\\n    paused = 2;\\r\\n  }\\r\\n\\r\\n  function resume() external onlyOwnerOrPriviledgedUser {\\r\\n    paused = 1;\\r\\n  }\\r\\n\\r\\n  /// @notice For native unwrapping\\r\\n  receive() external payable {}\\r\\n\\r\\n  /// @notice Processes the route generated off-chain. Has a lock\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function processRoute(\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) external payable lock returns (uint256 amountOut) {\\r\\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\\r\\n  }\\r\\n\\r\\n  /// @notice Transfers some value to <transferValueTo> and then processes the route\\r\\n  /// @param transferValueTo Address where the value should be transferred\\r\\n  /// @param amountValueTransfer How much value to transfer\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function transferValueAndprocessRoute(\\r\\n    address payable transferValueTo,\\r\\n    uint256 amountValueTransfer,\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) external payable lock returns (uint256 amountOut) {\\r\\n    (bool success, bytes memory returnBytes) = transferValueTo.call{value: amountValueTransfer}('');\\r\\n    require(success, string(abi.encodePacked(returnBytes)));\\r\\n    return processRouteInternal(tokenIn, amountIn, tokenOut, amountOutMin, to, route);\\r\\n  }\\r\\n\\r\\n  /// @notice Processes the route generated off-chain\\r\\n  /// @param tokenIn Address of the input token\\r\\n  /// @param amountIn Amount of the input token\\r\\n  /// @param tokenOut Address of the output token\\r\\n  /// @param amountOutMin Minimum amount of the output token\\r\\n  /// @return amountOut Actual amount of the output token\\r\\n  function processRouteInternal(\\r\\n    address tokenIn,\\r\\n    uint256 amountIn,\\r\\n    address tokenOut,\\r\\n    uint256 amountOutMin,\\r\\n    address to,\\r\\n    bytes memory route\\r\\n  ) private returns (uint256 amountOut) {\\r\\n    uint256 balanceInInitial = tokenIn == NATIVE_ADDRESS ? address(this).balance : IERC20(tokenIn).balanceOf(msg.sender);\\r\\n    uint256 balanceOutInitial = tokenOut == NATIVE_ADDRESS ? address(to).balance : IERC20(tokenOut).balanceOf(to);\\r\\n\\r\\n    uint256 stream = InputStream.createStream(route);\\r\\n    while (stream.isNotEmpty()) {\\r\\n      uint8 commandCode = stream.readUint8();\\r\\n      if (commandCode == 1) processMyERC20(stream);\\r\\n      else if (commandCode == 2) processUserERC20(stream, amountIn);\\r\\n      else if (commandCode == 3) processNative(stream);\\r\\n      else if (commandCode == 4) processOnePool(stream);\\r\\n      else if (commandCode == 5) processInsideBento(stream);\\r\\n      else if (commandCode == 6) applyPermit(tokenIn, stream);\\r\\n      else revert('RouteProcessor: Unknown command code');\\r\\n    }\\r\\n\\r\\n    uint256 balanceInFinal = tokenIn == NATIVE_ADDRESS ? address(this).balance : IERC20(tokenIn).balanceOf(msg.sender);\\r\\n    require(balanceInFinal + amountIn >= balanceInInitial, 'RouteProcessor: Minimal imput balance violation');\\r\\n\\r\\n    uint256 balanceOutFinal = tokenOut == NATIVE_ADDRESS ? address(to).balance : IERC20(tokenOut).balanceOf(to);\\r\\n    require(balanceOutFinal >= balanceOutInitial + amountOutMin, 'RouteProcessor: Minimal ouput balance violation');\\r\\n\\r\\n    amountOut = balanceOutFinal - balanceOutInitial;\\r\\n\\r\\n    emit Route(msg.sender, to, tokenIn, tokenOut, amountIn, amountOutMin, amountOut);\\r\\n  }\\r\\n\\r\\n  function applyPermit(address tokenIn, uint256 stream) private {\\r\\n    //address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s)\\r\\n    uint256 value = stream.readUint();\\r\\n    uint256 deadline = stream.readUint();\\r\\n    uint8 v = stream.readUint8();\\r\\n    bytes32 r = stream.readBytes32();\\r\\n    bytes32 s = stream.readBytes32();\\r\\n    IERC20Permit(tokenIn).safePermit(msg.sender, address(this), value, deadline, v, r, s);\\r\\n  }\\r\\n\\r\\n  /// @notice Processes native coin: call swap for all pools that swap from native coin\\r\\n  /// @param stream Streamed process program\\r\\n  function processNative(uint256 stream) private {\\r\\n    uint256 amountTotal = address(this).balance;\\r\\n    distributeAndSwap(stream, address(this), NATIVE_ADDRESS, amountTotal);\\r\\n  }\\r\\n\\r\\n  /// @notice Processes ERC20 token from this contract balance:\\r\\n  /// @notice Call swap for all pools that swap from this token\\r\\n  /// @param stream Streamed process program\\r\\n  function processMyERC20(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    uint256 amountTotal = IERC20(token).balanceOf(address(this));\\r\\n    unchecked {\\r\\n      if (amountTotal > 0) amountTotal -= 1;     // slot undrain protection\\r\\n    }\\r\\n    distributeAndSwap(stream, address(this), token, amountTotal);\\r\\n  }\\r\\n  \\r\\n  /// @notice Processes ERC20 token from msg.sender balance:\\r\\n  /// @notice Call swap for all pools that swap from this token\\r\\n  /// @param stream Streamed process program\\r\\n  /// @param amountTotal Amount of tokens to take from msg.sender\\r\\n  function processUserERC20(uint256 stream, uint256 amountTotal) private {\\r\\n    address token = stream.readAddress();\\r\\n    distributeAndSwap(stream, msg.sender, token, amountTotal);\\r\\n  }\\r\\n\\r\\n  /// @notice Distributes amountTotal to several pools according to their shares and calls swap for each pool\\r\\n  /// @param stream Streamed process program\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountTotal Total amount of tokenIn for swaps \\r\\n  function distributeAndSwap(uint256 stream, address from, address tokenIn, uint256 amountTotal) private {\\r\\n    uint8 num = stream.readUint8();\\r\\n    unchecked {\\r\\n      for (uint256 i = 0; i < num; ++i) {\\r\\n        uint16 share = stream.readUint16();\\r\\n        uint256 amount = (amountTotal * share) / 65535;\\r\\n        amountTotal -= amount;\\r\\n        swap(stream, from, tokenIn, amount);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Processes ERC20 token for cases when the token has only one output pool\\r\\n  /// @notice In this case liquidity is already at pool balance. This is an optimization\\r\\n  /// @notice Call swap for all pools that swap from this token\\r\\n  /// @param stream Streamed process program\\r\\n  function processOnePool(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    swap(stream, address(this), token, 0);\\r\\n  }\\r\\n\\r\\n  /// @notice Processes Bento tokens \\r\\n  /// @notice Call swap for all pools that swap from this token\\r\\n  /// @param stream Streamed process program\\r\\n  function processInsideBento(uint256 stream) private {\\r\\n    address token = stream.readAddress();\\r\\n    uint8 num = stream.readUint8();\\r\\n\\r\\n    uint256 amountTotal = bentoBox.balanceOf(token, address(this));\\r\\n    unchecked {\\r\\n      if (amountTotal > 0) amountTotal -= 1;     // slot undrain protection\\r\\n      for (uint256 i = 0; i < num; ++i) {\\r\\n        uint16 share = stream.readUint16();\\r\\n        uint256 amount = (amountTotal * share) / 65535;\\r\\n        amountTotal -= amount;\\r\\n        swap(stream, address(this), token, amount);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Makes swap\\r\\n  /// @param stream Streamed process program\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function swap(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    uint8 poolType = stream.readUint8();\\r\\n    if (poolType == 0) swapUniV2(stream, from, tokenIn, amountIn);\\r\\n    else if (poolType == 1) swapUniV3(stream, from, tokenIn, amountIn);\\r\\n    else if (poolType == 2) wrapNative(stream, from, tokenIn, amountIn);\\r\\n    else if (poolType == 3) bentoBridge(stream, from, tokenIn, amountIn);\\r\\n    else if (poolType == 4) swapTrident(stream, from, tokenIn, amountIn);\\r\\n    else revert('RouteProcessor: Unknown pool type');\\r\\n  }\\r\\n\\r\\n  /// @notice Wraps/unwraps native token\\r\\n  /// @param stream [direction & fake, recipient, wrapToken?]\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function wrapNative(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    uint8 directionAndFake = stream.readUint8();\\r\\n    address to = stream.readAddress();\\r\\n\\r\\n    if (directionAndFake & 1 == 1) {  // wrap native\\r\\n      address wrapToken = stream.readAddress();\\r\\n      if (directionAndFake & 2 == 0) IWETH(wrapToken).deposit{value: amountIn}();\\r\\n      if (to != address(this)) IERC20(wrapToken).safeTransfer(to, amountIn);\\r\\n    } else { // unwrap native\\r\\n      if (directionAndFake & 2 == 0) {\\r\\n        if (from != address(this)) IERC20(tokenIn).safeTransferFrom(from, address(this), amountIn);\\r\\n        IWETH(tokenIn).withdraw(amountIn);\\r\\n      }\\r\\n      payable(to).transfer(address(this).balance);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Bridge/unbridge tokens to/from Bento\\r\\n  /// @param stream [direction, recipient]\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function bentoBridge(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    uint8 direction = stream.readUint8();\\r\\n    address to = stream.readAddress();\\r\\n\\r\\n    if (direction > 0) {  // outside to Bento\\r\\n      // deposit to arbitrary recipient is possible only from address(bentoBox)\\r\\n      if (amountIn != 0) {\\r\\n        if (from == address(this)) IERC20(tokenIn).safeTransfer(address(bentoBox), amountIn);\\r\\n        else IERC20(tokenIn).safeTransferFrom(from, address(bentoBox), amountIn);\\r\\n      } else {\\r\\n        // tokens already are at address(bentoBox)\\r\\n        amountIn = IERC20(tokenIn).balanceOf(address(bentoBox)) +\\r\\n        bentoBox.strategyData(tokenIn).balance -\\r\\n        bentoBox.totals(tokenIn).elastic;\\r\\n      }\\r\\n      bentoBox.deposit(tokenIn, address(bentoBox), to, amountIn, 0);\\r\\n    } else { // Bento to outside\\r\\n      if (amountIn > 0) {\\r\\n        bentoBox.transfer(tokenIn, from, address(this), amountIn);\\r\\n      } else amountIn = bentoBox.balanceOf(tokenIn, address(this));\\r\\n      bentoBox.withdraw(tokenIn, address(this), to, 0, amountIn);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice UniswapV2 pool swap\\r\\n  /// @param stream [pool, direction, recipient]\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function swapUniV2(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    address pool = stream.readAddress();\\r\\n    uint8 direction = stream.readUint8();\\r\\n    address to = stream.readAddress();\\r\\n\\r\\n    (uint256 r0, uint256 r1, ) = IUniswapV2Pair(pool).getReserves();\\r\\n    require(r0 > 0 && r1 > 0, 'Wrong pool reserves');\\r\\n    (uint256 reserveIn, uint256 reserveOut) = direction == 1 ? (r0, r1) : (r1, r0);\\r\\n\\r\\n    if (amountIn != 0) {\\r\\n      if (from == address(this)) IERC20(tokenIn).safeTransfer(pool, amountIn);\\r\\n      else IERC20(tokenIn).safeTransferFrom(from, pool, amountIn);\\r\\n    } else amountIn = IERC20(tokenIn).balanceOf(pool) - reserveIn;  // tokens already were transferred\\r\\n\\r\\n    uint256 amountInWithFee = amountIn * 997;\\r\\n    uint256 amountOut = (amountInWithFee * reserveOut) / (reserveIn * 1000 + amountInWithFee);\\r\\n    (uint256 amount0Out, uint256 amount1Out) = direction == 1 ? (uint256(0), amountOut) : (amountOut, uint256(0));\\r\\n    IUniswapV2Pair(pool).swap(amount0Out, amount1Out, to, new bytes(0));\\r\\n  }\\r\\n\\r\\n  /// @notice Trident pool swap\\r\\n  /// @param stream [pool, swapData]\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function swapTrident(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    address pool = stream.readAddress();\\r\\n    bytes memory swapData = stream.readBytes();\\r\\n\\r\\n    if (amountIn != 0) {\\r\\n      bentoBox.transfer(tokenIn, from, pool, amountIn);\\r\\n    }\\r\\n    \\r\\n    IPool(pool).swap(swapData);\\r\\n  }\\r\\n\\r\\n  /// @notice UniswapV3 pool swap\\r\\n  /// @param stream [pool, direction, recipient]\\r\\n  /// @param from Where to take liquidity for swap\\r\\n  /// @param tokenIn Input token\\r\\n  /// @param amountIn Amount of tokenIn to take for swap\\r\\n  function swapUniV3(uint256 stream, address from, address tokenIn, uint256 amountIn) private {\\r\\n    address pool = stream.readAddress();\\r\\n    bool zeroForOne = stream.readUint8() > 0;\\r\\n    address recipient = stream.readAddress();\\r\\n\\r\\n    if (from != address(this)) {\\r\\n      require(from == msg.sender, 'swapUniV3: unexpected from address');\\r\\n      IERC20(tokenIn).safeTransferFrom(msg.sender, address(this), uint256(amountIn));\\r\\n    }\\r\\n\\r\\n    lastCalledPool = pool;\\r\\n    IUniswapV3Pool(pool).swap(\\r\\n      recipient,\\r\\n      zeroForOne,\\r\\n      int256(amountIn),\\r\\n      zeroForOne ? MIN_SQRT_RATIO + 1 : MAX_SQRT_RATIO - 1,\\r\\n      abi.encode(tokenIn)\\r\\n    );\\r\\n    require(lastCalledPool == IMPOSSIBLE_POOL_ADDRESS, 'RouteProcessor.swapUniV3: unexpected'); // Just to be sure\\r\\n  }\\r\\n\\r\\n  /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\r\\n  /// @dev In the implementation you must pay the pool tokens owed for the swap.\\r\\n  /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\r\\n  /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\r\\n  /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\r\\n  /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\r\\n  /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\r\\n  /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\r\\n  /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\r\\n  function uniswapV3SwapCallback(\\r\\n    int256 amount0Delta,\\r\\n    int256 amount1Delta,\\r\\n    bytes calldata data\\r\\n  ) external {\\r\\n    require(msg.sender == lastCalledPool, 'RouteProcessor.uniswapV3SwapCallback: call from unknown source');\\r\\n    lastCalledPool = IMPOSSIBLE_POOL_ADDRESS;\\r\\n    (address tokenIn) = abi.decode(data, (address));\\r\\n    int256 amount = amount0Delta > 0 ? amount0Delta : amount1Delta;\\r\\n    require(amount > 0, 'RouteProcessor.uniswapV3SwapCallback: not positive amount');\\r\\n\\r\\n    // Normally, RouteProcessor shouldn't have any liquidity on board\\r\\n    // If some liquidity exists, it is sweept by the next user that makes swap through these tokens\\r\\n    IERC20(tokenIn).safeTransfer(msg.sender, uint256(amount));\\r\\n  }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xe79d3820daf7bbe0cce5c36b4a4c48a3b45c358db6b16159f590d706af5588ef\",\"license\":\"UNLICENSED\"},\"interfaces/IBentoBoxMinimal.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct StrategyData {\\r\\n    uint64 strategyStartDate;\\r\\n    uint64 targetPercentage;\\r\\n    uint128 balance; // the balance of the strategy that BentoBox thinks is in there\\r\\n}\\r\\n\\r\\n/// @notice A rebasing library\\r\\nlibrary RebaseLibrary {\\r\\n    /// @notice Calculates the base value in relationship to `elastic` and `total`.\\r\\n    function toBase(Rebase memory total, uint256 elastic) internal pure returns (uint256 base) {\\r\\n        if (total.elastic == 0) {\\r\\n            base = elastic;\\r\\n        } else {\\r\\n            base = (elastic * total.base) / total.elastic;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Calculates the elastic value in relationship to `base` and `total`.\\r\\n    function toElastic(Rebase memory total, uint256 base) internal pure returns (uint256 elastic) {\\r\\n        if (total.base == 0) {\\r\\n            elastic = base;\\r\\n        } else {\\r\\n            elastic = (base * total.elastic) / total.base;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @notice Minimal BentoBox vault interface.\\r\\n/// @dev `token` is aliased as `address` from `IERC20` for simplicity.\\r\\ninterface IBentoBoxMinimal {\\r\\n    /// @notice Balance per ERC-20 token per account in shares.\\r\\n    function balanceOf(address, address) external view returns (uint256);\\r\\n\\r\\n    /// @dev Helper function to represent an `amount` of `token` in shares.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param amount The `token` amount.\\r\\n    /// @param roundUp If the result `share` should be rounded up.\\r\\n    /// @return share The token amount represented in shares.\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    /// @dev Helper function to represent shares back into the `token` amount.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param share The amount of shares.\\r\\n    /// @param roundUp If the result should be rounded up.\\r\\n    /// @return amount The share amount back into native representation.\\r\\n    function toAmount(\\r\\n        address token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    /// @notice Registers this contract so that users can approve it for BentoBox.\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    /// @notice Deposit an amount of `token` represented in either `amount` or `share`.\\r\\n    /// @param token The ERC-20 token to deposit.\\r\\n    /// @param from which account to pull the tokens.\\r\\n    /// @param to which account to push the tokens.\\r\\n    /// @param amount Token amount in native representation to deposit.\\r\\n    /// @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\\r\\n    /// @return amountOut The amount deposited.\\r\\n    /// @return shareOut The deposited amount represented in shares.\\r\\n    function deposit(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Withdraws an amount of `token` from a user account.\\r\\n    /// @param token_ The ERC-20 token to withdraw.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\\r\\n    /// @param share Like above, but `share` takes precedence over `amount`.\\r\\n    function withdraw(\\r\\n        address token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Transfer shares from a user account to another one.\\r\\n    /// @param token The ERC-20 token to transfer.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param share The amount of `token` in shares.\\r\\n    function transfer(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Reads the Rebase `totals`from storage for a given token\\r\\n    function totals(address token) external view returns (Rebase memory total);\\r\\n\\r\\n    function strategyData(address token) external view returns (StrategyData memory total);\\r\\n\\r\\n    /// @dev Approves users' BentoBox assets to a \\\"master\\\" contract.\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function harvest(\\r\\n        address token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa98bae923a99df0fda840a022e30fa4a2d0ea91d392714438cf5031e4e3d41c5\",\"license\":\"UNLICENSED\"},\"interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n/// @notice Trident pool interface.\\r\\ninterface IPool {\\r\\n    /// @notice Executes a swap from one token to another.\\r\\n    /// @dev The input tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function swap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Executes a swap from one token to another with a callback.\\r\\n    /// @dev This function allows borrowing the output tokens and sending the input tokens in the callback.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function flashSwap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Mints liquidity tokens.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return liquidity The amount of liquidity tokens that were minted for the user.\\r\\n    function mint(bytes calldata data) external returns (uint256 liquidity);\\r\\n\\r\\n    /// @notice Burns liquidity tokens.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return withdrawnAmounts The amount of various output tokens that were sent to the user.\\r\\n    function burn(bytes calldata data) external returns (TokenAmount[] memory withdrawnAmounts);\\r\\n\\r\\n    /// @notice Burns liquidity tokens for a single output token.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return amountOut The amount of output tokens that were sent to the user.\\r\\n    function burnSingle(bytes calldata data) external returns (uint256 amountOut);\\r\\n\\r\\n    /// @return A unique identifier for the pool type.\\r\\n    function poolIdentifier() external pure returns (bytes32);\\r\\n\\r\\n    /// @return An array of tokens supported by the pool.\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that will be sent to the user if the trade is executed.\\r\\n    function getAmountOut(bytes calldata data) external view returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountIn The amount of input tokens that are required from the user if the trade is executed.\\r\\n    function getAmountIn(bytes calldata data) external view returns (uint256 finalAmountIn);\\r\\n\\r\\n    /// @dev This event must be emitted on all swaps.\\r\\n    event Swap(address indexed recipient, address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\\r\\n\\r\\n    /// @dev This struct frames output tokens for burns.\\r\\n    struct TokenAmount {\\r\\n        address token;\\r\\n        uint256 amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x08f304fc6f4f982075e21c206a78741f9b0f8b1fbf51752acff87776c5f57b7d\",\"license\":\"GPL-3.0-or-later\"},\"interfaces/ITridentCLPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface ITridentCLPool {\\r\\n  function token0() external returns (address);\\r\\n  function token1() external returns (address);\\r\\n\\r\\n  function swap(\\r\\n    address recipient,\\r\\n    bool zeroForOne,\\r\\n    int256 amountSpecified,\\r\\n    uint160 sqrtPriceLimitX96,\\r\\n    bool unwrapBento,\\r\\n    bytes calldata data\\r\\n  ) external returns (int256 amount0, int256 amount1);\\r\\n}\\r\\n\",\"keccak256\":\"0x67e4f06691a63f6e8ae63e92a8565759b5badff77557d9c1ab6cb5e39b33bf79\",\"license\":\"GPL-3.0-or-later\"},\"interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\",\"keccak256\":\"0x20b5466d7f02c91eae6c79bc7acf6270e5483650af5d34fb265549c4b8c9718f\",\"license\":\"GPL-3.0\"},\"interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IUniswapV3Pool {\\r\\n  function token0() external returns (address);\\r\\n  function token1() external returns (address);\\r\\n\\r\\n  function swap(\\r\\n    address recipient,\\r\\n    bool zeroForOne,\\r\\n    int256 amountSpecified,\\r\\n    uint160 sqrtPriceLimitX96,\\r\\n    bytes calldata data\\r\\n  ) external returns (int256 amount0, int256 amount1);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fcc63152da94801bf1d2a5501a5d72c59cdad594f3be3420cff16626e416e78\",\"license\":\"GPL-3.0-or-later\"},\"interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IWETH {\\r\\n  function deposit() external payable;\\r\\n\\r\\n  function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n  function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x7c3ac71ea1bda67a50642cb86bb77d9b71360df4a5da1de9403ad7d69ecdfa3e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/RouteProcessor3.sol:RouteProcessor3","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2194,"contract":"contracts/RouteProcessor3.sol:RouteProcessor3","label":"priviledgedUsers","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":2196,"contract":"contracts/RouteProcessor3.sol:RouteProcessor3","label":"lastCalledPool","offset":0,"slot":"2","type":"t_address"},{"astId":2199,"contract":"contracts/RouteProcessor3.sol:RouteProcessor3","label":"unlocked","offset":20,"slot":"2","type":"t_uint8"},{"astId":2202,"contract":"contracts/RouteProcessor3.sol:RouteProcessor3","label":"paused","offset":21,"slot":"2","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"processRoute(address,uint256,address,uint256,address,bytes)":{"notice":"Processes the route generated off-chain. Has a lock"},"transferValueAndprocessRoute(address,uint256,address,uint256,address,uint256,address,bytes)":{"notice":"Transfers some value to <transferValueTo> and then processes the route"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"version":1}}},"interfaces/IBentoBoxMinimal.sol":{"IBentoBoxMinimal":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"balance","type":"bool"},{"internalType":"uint256","name":"maxChangeAmount","type":"uint256"}],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registerProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"masterContract","type":"address"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"setMasterContractApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"strategyData","outputs":[{"components":[{"internalType":"uint64","name":"strategyStartDate","type":"uint64"},{"internalType":"uint64","name":"targetPercentage","type":"uint64"},{"internalType":"uint128","name":"balance","type":"uint128"}],"internalType":"struct StrategyData","name":"total","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"name":"toAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"name":"toShare","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"totals","outputs":[{"components":[{"internalType":"uint128","name":"elastic","type":"uint128"},{"internalType":"uint128","name":"base","type":"uint128"}],"internalType":"struct Rebase","name":"total","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"`token` is aliased as `address` from `IERC20` for simplicity.","kind":"dev","methods":{"deposit(address,address,address,uint256,uint256)":{"params":{"amount":"Token amount in native representation to deposit.","from":"which account to pull the tokens.","share":"Token amount represented in shares to deposit. Takes precedence over `amount`.","to":"which account to push the tokens.","token":"The ERC-20 token to deposit."},"returns":{"amountOut":"The amount deposited.","shareOut":"The deposited amount represented in shares."}},"setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)":{"details":"Approves users' BentoBox assets to a \"master\" contract."},"toAmount(address,uint256,bool)":{"details":"Helper function to represent shares back into the `token` amount.","params":{"roundUp":"If the result should be rounded up.","share":"The amount of shares.","token":"The ERC-20 token."},"returns":{"amount":"The share amount back into native representation."}},"toShare(address,uint256,bool)":{"details":"Helper function to represent an `amount` of `token` in shares.","params":{"amount":"The `token` amount.","roundUp":"If the result `share` should be rounded up.","token":"The ERC-20 token."},"returns":{"share":"The token amount represented in shares."}},"totals(address)":{"details":"Reads the Rebase `totals`from storage for a given token"},"transfer(address,address,address,uint256)":{"params":{"from":"which user to pull the tokens.","share":"The amount of `token` in shares.","to":"which user to push the tokens.","token":"The ERC-20 token to transfer."}},"withdraw(address,address,address,uint256,uint256)":{"params":{"amount":"of tokens. Either one of `amount` or `share` needs to be supplied.","from":"which user to pull the tokens.","share":"Like above, but `share` takes precedence over `amount`.","to":"which user to push the tokens.","token_":"The ERC-20 token to withdraw."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,address)":"f7888aec","deposit(address,address,address,uint256,uint256)":"02b9446c","harvest(address,bool,uint256)":"66c6bb0b","registerProtocol()":"aee4d1b2","setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)":"c0a47c93","strategyData(address)":"df23b45b","toAmount(address,uint256,bool)":"56623118","toShare(address,uint256,bool)":"da5139ca","totals(address)":"4ffe34db","transfer(address,address,address,uint256)":"f18d03cc","withdraw(address,address,address,uint256,uint256)":"97da6d30"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"balance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxChangeAmount\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMasterContractApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"strategyData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"strategyStartDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"internalType\":\"struct StrategyData\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"elastic\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"base\",\"type\":\"uint128\"}],\"internalType\":\"struct Rebase\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"`token` is aliased as `address` from `IERC20` for simplicity.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Token amount in native representation to deposit.\",\"from\":\"which account to pull the tokens.\",\"share\":\"Token amount represented in shares to deposit. Takes precedence over `amount`.\",\"to\":\"which account to push the tokens.\",\"token\":\"The ERC-20 token to deposit.\"},\"returns\":{\"amountOut\":\"The amount deposited.\",\"shareOut\":\"The deposited amount represented in shares.\"}},\"setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)\":{\"details\":\"Approves users' BentoBox assets to a \\\"master\\\" contract.\"},\"toAmount(address,uint256,bool)\":{\"details\":\"Helper function to represent shares back into the `token` amount.\",\"params\":{\"roundUp\":\"If the result should be rounded up.\",\"share\":\"The amount of shares.\",\"token\":\"The ERC-20 token.\"},\"returns\":{\"amount\":\"The share amount back into native representation.\"}},\"toShare(address,uint256,bool)\":{\"details\":\"Helper function to represent an `amount` of `token` in shares.\",\"params\":{\"amount\":\"The `token` amount.\",\"roundUp\":\"If the result `share` should be rounded up.\",\"token\":\"The ERC-20 token.\"},\"returns\":{\"share\":\"The token amount represented in shares.\"}},\"totals(address)\":{\"details\":\"Reads the Rebase `totals`from storage for a given token\"},\"transfer(address,address,address,uint256)\":{\"params\":{\"from\":\"which user to pull the tokens.\",\"share\":\"The amount of `token` in shares.\",\"to\":\"which user to push the tokens.\",\"token\":\"The ERC-20 token to transfer.\"}},\"withdraw(address,address,address,uint256,uint256)\":{\"params\":{\"amount\":\"of tokens. Either one of `amount` or `share` needs to be supplied.\",\"from\":\"which user to pull the tokens.\",\"share\":\"Like above, but `share` takes precedence over `amount`.\",\"to\":\"which user to push the tokens.\",\"token_\":\"The ERC-20 token to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,address)\":{\"notice\":\"Balance per ERC-20 token per account in shares.\"},\"deposit(address,address,address,uint256,uint256)\":{\"notice\":\"Deposit an amount of `token` represented in either `amount` or `share`.\"},\"registerProtocol()\":{\"notice\":\"Registers this contract so that users can approve it for BentoBox.\"},\"transfer(address,address,address,uint256)\":{\"notice\":\"Transfer shares from a user account to another one.\"},\"withdraw(address,address,address,uint256,uint256)\":{\"notice\":\"Withdraws an amount of `token` from a user account.\"}},\"notice\":\"Minimal BentoBox vault interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBentoBoxMinimal.sol\":\"IBentoBoxMinimal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IBentoBoxMinimal.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct StrategyData {\\r\\n    uint64 strategyStartDate;\\r\\n    uint64 targetPercentage;\\r\\n    uint128 balance; // the balance of the strategy that BentoBox thinks is in there\\r\\n}\\r\\n\\r\\n/// @notice A rebasing library\\r\\nlibrary RebaseLibrary {\\r\\n    /// @notice Calculates the base value in relationship to `elastic` and `total`.\\r\\n    function toBase(Rebase memory total, uint256 elastic) internal pure returns (uint256 base) {\\r\\n        if (total.elastic == 0) {\\r\\n            base = elastic;\\r\\n        } else {\\r\\n            base = (elastic * total.base) / total.elastic;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Calculates the elastic value in relationship to `base` and `total`.\\r\\n    function toElastic(Rebase memory total, uint256 base) internal pure returns (uint256 elastic) {\\r\\n        if (total.base == 0) {\\r\\n            elastic = base;\\r\\n        } else {\\r\\n            elastic = (base * total.elastic) / total.base;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @notice Minimal BentoBox vault interface.\\r\\n/// @dev `token` is aliased as `address` from `IERC20` for simplicity.\\r\\ninterface IBentoBoxMinimal {\\r\\n    /// @notice Balance per ERC-20 token per account in shares.\\r\\n    function balanceOf(address, address) external view returns (uint256);\\r\\n\\r\\n    /// @dev Helper function to represent an `amount` of `token` in shares.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param amount The `token` amount.\\r\\n    /// @param roundUp If the result `share` should be rounded up.\\r\\n    /// @return share The token amount represented in shares.\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    /// @dev Helper function to represent shares back into the `token` amount.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param share The amount of shares.\\r\\n    /// @param roundUp If the result should be rounded up.\\r\\n    /// @return amount The share amount back into native representation.\\r\\n    function toAmount(\\r\\n        address token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    /// @notice Registers this contract so that users can approve it for BentoBox.\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    /// @notice Deposit an amount of `token` represented in either `amount` or `share`.\\r\\n    /// @param token The ERC-20 token to deposit.\\r\\n    /// @param from which account to pull the tokens.\\r\\n    /// @param to which account to push the tokens.\\r\\n    /// @param amount Token amount in native representation to deposit.\\r\\n    /// @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\\r\\n    /// @return amountOut The amount deposited.\\r\\n    /// @return shareOut The deposited amount represented in shares.\\r\\n    function deposit(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Withdraws an amount of `token` from a user account.\\r\\n    /// @param token_ The ERC-20 token to withdraw.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\\r\\n    /// @param share Like above, but `share` takes precedence over `amount`.\\r\\n    function withdraw(\\r\\n        address token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Transfer shares from a user account to another one.\\r\\n    /// @param token The ERC-20 token to transfer.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param share The amount of `token` in shares.\\r\\n    function transfer(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Reads the Rebase `totals`from storage for a given token\\r\\n    function totals(address token) external view returns (Rebase memory total);\\r\\n\\r\\n    function strategyData(address token) external view returns (StrategyData memory total);\\r\\n\\r\\n    /// @dev Approves users' BentoBox assets to a \\\"master\\\" contract.\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function harvest(\\r\\n        address token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa98bae923a99df0fda840a022e30fa4a2d0ea91d392714438cf5031e4e3d41c5\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"balanceOf(address,address)":{"notice":"Balance per ERC-20 token per account in shares."},"deposit(address,address,address,uint256,uint256)":{"notice":"Deposit an amount of `token` represented in either `amount` or `share`."},"registerProtocol()":{"notice":"Registers this contract so that users can approve it for BentoBox."},"transfer(address,address,address,uint256)":{"notice":"Transfer shares from a user account to another one."},"withdraw(address,address,address,uint256,uint256)":{"notice":"Withdraws an amount of `token` from a user account."}},"notice":"Minimal BentoBox vault interface.","version":1}},"RebaseLibrary":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df3db09b8419623d906f3a1f4360fd9d6e022d2bb64584eab9923470733e8d2f64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF RETURNDATASIZE 0xB0 SWAP12 DUP5 NOT PUSH3 0x3D906F GASPRICE 0x1F NUMBER PUSH1 0xFD SWAP14 PUSH15 0x22D2BB64584EAB9923470733E8D2F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"340:714:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;340:714:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df3db09b8419623d906f3a1f4360fd9d6e022d2bb64584eab9923470733e8d2f64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF RETURNDATASIZE 0xB0 SWAP12 DUP5 NOT PUSH3 0x3D906F GASPRICE 0x1F NUMBER PUSH1 0xFD SWAP14 PUSH15 0x22D2BB64584EAB9923470733E8D2F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"340:714:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toBase(struct Rebase memory,uint256)":"infinite","toElastic(struct Rebase memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A rebasing library\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IBentoBoxMinimal.sol\":\"RebaseLibrary\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IBentoBoxMinimal.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity >=0.8.0;\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 elastic;\\r\\n    uint128 base;\\r\\n}\\r\\n\\r\\nstruct StrategyData {\\r\\n    uint64 strategyStartDate;\\r\\n    uint64 targetPercentage;\\r\\n    uint128 balance; // the balance of the strategy that BentoBox thinks is in there\\r\\n}\\r\\n\\r\\n/// @notice A rebasing library\\r\\nlibrary RebaseLibrary {\\r\\n    /// @notice Calculates the base value in relationship to `elastic` and `total`.\\r\\n    function toBase(Rebase memory total, uint256 elastic) internal pure returns (uint256 base) {\\r\\n        if (total.elastic == 0) {\\r\\n            base = elastic;\\r\\n        } else {\\r\\n            base = (elastic * total.base) / total.elastic;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @notice Calculates the elastic value in relationship to `base` and `total`.\\r\\n    function toElastic(Rebase memory total, uint256 base) internal pure returns (uint256 elastic) {\\r\\n        if (total.base == 0) {\\r\\n            elastic = base;\\r\\n        } else {\\r\\n            elastic = (base * total.elastic) / total.base;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/// @notice Minimal BentoBox vault interface.\\r\\n/// @dev `token` is aliased as `address` from `IERC20` for simplicity.\\r\\ninterface IBentoBoxMinimal {\\r\\n    /// @notice Balance per ERC-20 token per account in shares.\\r\\n    function balanceOf(address, address) external view returns (uint256);\\r\\n\\r\\n    /// @dev Helper function to represent an `amount` of `token` in shares.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param amount The `token` amount.\\r\\n    /// @param roundUp If the result `share` should be rounded up.\\r\\n    /// @return share The token amount represented in shares.\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n\\r\\n    /// @dev Helper function to represent shares back into the `token` amount.\\r\\n    /// @param token The ERC-20 token.\\r\\n    /// @param share The amount of shares.\\r\\n    /// @param roundUp If the result should be rounded up.\\r\\n    /// @return amount The share amount back into native representation.\\r\\n    function toAmount(\\r\\n        address token,\\r\\n        uint256 share,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 amount);\\r\\n\\r\\n    /// @notice Registers this contract so that users can approve it for BentoBox.\\r\\n    function registerProtocol() external;\\r\\n\\r\\n    /// @notice Deposit an amount of `token` represented in either `amount` or `share`.\\r\\n    /// @param token The ERC-20 token to deposit.\\r\\n    /// @param from which account to pull the tokens.\\r\\n    /// @param to which account to push the tokens.\\r\\n    /// @param amount Token amount in native representation to deposit.\\r\\n    /// @param share Token amount represented in shares to deposit. Takes precedence over `amount`.\\r\\n    /// @return amountOut The amount deposited.\\r\\n    /// @return shareOut The deposited amount represented in shares.\\r\\n    function deposit(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Withdraws an amount of `token` from a user account.\\r\\n    /// @param token_ The ERC-20 token to withdraw.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param amount of tokens. Either one of `amount` or `share` needs to be supplied.\\r\\n    /// @param share Like above, but `share` takes precedence over `amount`.\\r\\n    function withdraw(\\r\\n        address token_,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256 amountOut, uint256 shareOut);\\r\\n\\r\\n    /// @notice Transfer shares from a user account to another one.\\r\\n    /// @param token The ERC-20 token to transfer.\\r\\n    /// @param from which user to pull the tokens.\\r\\n    /// @param to which user to push the tokens.\\r\\n    /// @param share The amount of `token` in shares.\\r\\n    function transfer(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 share\\r\\n    ) external;\\r\\n\\r\\n    /// @dev Reads the Rebase `totals`from storage for a given token\\r\\n    function totals(address token) external view returns (Rebase memory total);\\r\\n\\r\\n    function strategyData(address token) external view returns (StrategyData memory total);\\r\\n\\r\\n    /// @dev Approves users' BentoBox assets to a \\\"master\\\" contract.\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function harvest(\\r\\n        address token,\\r\\n        bool balance,\\r\\n        uint256 maxChangeAmount\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xa98bae923a99df0fda840a022e30fa4a2d0ea91d392714438cf5031e4e3d41c5\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A rebasing library","version":1}}},"interfaces/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IPool.TokenAmount[]","name":"withdrawnAmounts","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burnSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flashSwap","outputs":[{"internalType":"uint256","name":"finalAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"finalAmountIn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"finalAmountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolIdentifier","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"uint256","name":"finalAmountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Swap(address,address,address,uint256,uint256)":{"details":"This event must be emitted on all swaps."}},"kind":"dev","methods":{"burn(bytes)":{"details":"The input LP tokens must've already been sent to the pool.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"withdrawnAmounts":"The amount of various output tokens that were sent to the user."}},"burnSingle(bytes)":{"details":"The input LP tokens must've already been sent to the pool.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"amountOut":"The amount of output tokens that were sent to the user."}},"flashSwap(bytes)":{"details":"This function allows borrowing the output tokens and sending the input tokens in the callback.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"finalAmountOut":"The amount of output tokens that were sent to the user."}},"getAmountIn(bytes)":{"details":"The pool does not need to include a trade simulator directly in itself - it can use a library.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"finalAmountIn":"The amount of input tokens that are required from the user if the trade is executed."}},"getAmountOut(bytes)":{"details":"The pool does not need to include a trade simulator directly in itself - it can use a library.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"finalAmountOut":"The amount of output tokens that will be sent to the user if the trade is executed."}},"getAssets()":{"returns":{"_0":"An array of tokens supported by the pool."}},"mint(bytes)":{"params":{"data":"ABI-encoded params that the pool requires."},"returns":{"liquidity":"The amount of liquidity tokens that were minted for the user."}},"poolIdentifier()":{"returns":{"_0":"A unique identifier for the pool type."}},"swap(bytes)":{"details":"The input tokens must've already been sent to the pool.","params":{"data":"ABI-encoded params that the pool requires."},"returns":{"finalAmountOut":"The amount of output tokens that were sent to the user."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(bytes)":"2a07b6c7","burnSingle(bytes)":"af8c09bf","flashSwap(bytes)":"053da1c8","getAmountIn(bytes)":"499a3c50","getAmountOut(bytes)":"a8f1f52e","getAssets()":"67e4ac2c","mint(bytes)":"7ba0e2e7","poolIdentifier()":"a69840a8","swap(bytes)":"627dd56a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPool.TokenAmount[]\",\"name\":\"withdrawnAmounts\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burnSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalAmountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Swap(address,address,address,uint256,uint256)\":{\"details\":\"This event must be emitted on all swaps.\"}},\"kind\":\"dev\",\"methods\":{\"burn(bytes)\":{\"details\":\"The input LP tokens must've already been sent to the pool.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"withdrawnAmounts\":\"The amount of various output tokens that were sent to the user.\"}},\"burnSingle(bytes)\":{\"details\":\"The input LP tokens must've already been sent to the pool.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"amountOut\":\"The amount of output tokens that were sent to the user.\"}},\"flashSwap(bytes)\":{\"details\":\"This function allows borrowing the output tokens and sending the input tokens in the callback.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"finalAmountOut\":\"The amount of output tokens that were sent to the user.\"}},\"getAmountIn(bytes)\":{\"details\":\"The pool does not need to include a trade simulator directly in itself - it can use a library.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"finalAmountIn\":\"The amount of input tokens that are required from the user if the trade is executed.\"}},\"getAmountOut(bytes)\":{\"details\":\"The pool does not need to include a trade simulator directly in itself - it can use a library.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"finalAmountOut\":\"The amount of output tokens that will be sent to the user if the trade is executed.\"}},\"getAssets()\":{\"returns\":{\"_0\":\"An array of tokens supported by the pool.\"}},\"mint(bytes)\":{\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"liquidity\":\"The amount of liquidity tokens that were minted for the user.\"}},\"poolIdentifier()\":{\"returns\":{\"_0\":\"A unique identifier for the pool type.\"}},\"swap(bytes)\":{\"details\":\"The input tokens must've already been sent to the pool.\",\"params\":{\"data\":\"ABI-encoded params that the pool requires.\"},\"returns\":{\"finalAmountOut\":\"The amount of output tokens that were sent to the user.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(bytes)\":{\"notice\":\"Burns liquidity tokens.\"},\"burnSingle(bytes)\":{\"notice\":\"Burns liquidity tokens for a single output token.\"},\"flashSwap(bytes)\":{\"notice\":\"Executes a swap from one token to another with a callback.\"},\"getAmountIn(bytes)\":{\"notice\":\"Simulates a trade and returns the expected output.\"},\"getAmountOut(bytes)\":{\"notice\":\"Simulates a trade and returns the expected output.\"},\"mint(bytes)\":{\"notice\":\"Mints liquidity tokens.\"},\"swap(bytes)\":{\"notice\":\"Executes a swap from one token to another.\"}},\"notice\":\"Trident pool interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\n/// @notice Trident pool interface.\\r\\ninterface IPool {\\r\\n    /// @notice Executes a swap from one token to another.\\r\\n    /// @dev The input tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function swap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Executes a swap from one token to another with a callback.\\r\\n    /// @dev This function allows borrowing the output tokens and sending the input tokens in the callback.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that were sent to the user.\\r\\n    function flashSwap(bytes calldata data) external returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Mints liquidity tokens.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return liquidity The amount of liquidity tokens that were minted for the user.\\r\\n    function mint(bytes calldata data) external returns (uint256 liquidity);\\r\\n\\r\\n    /// @notice Burns liquidity tokens.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return withdrawnAmounts The amount of various output tokens that were sent to the user.\\r\\n    function burn(bytes calldata data) external returns (TokenAmount[] memory withdrawnAmounts);\\r\\n\\r\\n    /// @notice Burns liquidity tokens for a single output token.\\r\\n    /// @dev The input LP tokens must've already been sent to the pool.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return amountOut The amount of output tokens that were sent to the user.\\r\\n    function burnSingle(bytes calldata data) external returns (uint256 amountOut);\\r\\n\\r\\n    /// @return A unique identifier for the pool type.\\r\\n    function poolIdentifier() external pure returns (bytes32);\\r\\n\\r\\n    /// @return An array of tokens supported by the pool.\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountOut The amount of output tokens that will be sent to the user if the trade is executed.\\r\\n    function getAmountOut(bytes calldata data) external view returns (uint256 finalAmountOut);\\r\\n\\r\\n    /// @notice Simulates a trade and returns the expected output.\\r\\n    /// @dev The pool does not need to include a trade simulator directly in itself - it can use a library.\\r\\n    /// @param data ABI-encoded params that the pool requires.\\r\\n    /// @return finalAmountIn The amount of input tokens that are required from the user if the trade is executed.\\r\\n    function getAmountIn(bytes calldata data) external view returns (uint256 finalAmountIn);\\r\\n\\r\\n    /// @dev This event must be emitted on all swaps.\\r\\n    event Swap(address indexed recipient, address indexed tokenIn, address indexed tokenOut, uint256 amountIn, uint256 amountOut);\\r\\n\\r\\n    /// @dev This struct frames output tokens for burns.\\r\\n    struct TokenAmount {\\r\\n        address token;\\r\\n        uint256 amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x08f304fc6f4f982075e21c206a78741f9b0f8b1fbf51752acff87776c5f57b7d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"burn(bytes)":{"notice":"Burns liquidity tokens."},"burnSingle(bytes)":{"notice":"Burns liquidity tokens for a single output token."},"flashSwap(bytes)":{"notice":"Executes a swap from one token to another with a callback."},"getAmountIn(bytes)":{"notice":"Simulates a trade and returns the expected output."},"getAmountOut(bytes)":{"notice":"Simulates a trade and returns the expected output."},"mint(bytes)":{"notice":"Mints liquidity tokens."},"swap(bytes)":{"notice":"Executes a swap from one token to another."}},"notice":"Trident pool interface.","version":1}}},"interfaces/ITridentCLPool.sol":{"ITridentCLPool":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bool","name":"unwrapBento","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"swap(address,bool,int256,uint160,bool,bytes)":"21a76118","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"unwrapBento\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ITridentCLPool.sol\":\"ITridentCLPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/ITridentCLPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface ITridentCLPool {\\r\\n  function token0() external returns (address);\\r\\n  function token1() external returns (address);\\r\\n\\r\\n  function swap(\\r\\n    address recipient,\\r\\n    bool zeroForOne,\\r\\n    int256 amountSpecified,\\r\\n    uint160 sqrtPriceLimitX96,\\r\\n    bool unwrapBento,\\r\\n    bytes calldata data\\r\\n  ) external returns (int256 amount0, int256 amount1);\\r\\n}\\r\\n\",\"keccak256\":\"0x67e4f06691a63f6e8ae63e92a8565759b5badff77557d9c1ab6cb5e39b33bf79\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interfaces/IUniswapV2Pair.sol":{"IUniswapV2Pair":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"reserve0","type":"uint112"},{"internalType":"uint112","name":"reserve1","type":"uint112"},{"internalType":"uint32","name":"blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MINIMUM_LIQUIDITY()":"ba9a7a56","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address)":"89afcb44","decimals()":"313ce567","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\",\"keccak256\":\"0x20b5466d7f02c91eae6c79bc7acf6270e5483650af5d34fb265549c4b8c9718f\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"swap(address,bool,int256,uint160,bytes)":"128acb08","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IUniswapV3Pool {\\r\\n  function token0() external returns (address);\\r\\n  function token1() external returns (address);\\r\\n\\r\\n  function swap(\\r\\n    address recipient,\\r\\n    bool zeroForOne,\\r\\n    int256 amountSpecified,\\r\\n    uint160 sqrtPriceLimitX96,\\r\\n    bytes calldata data\\r\\n  ) external returns (int256 amount0, int256 amount1);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fcc63152da94801bf1d2a5501a5d72c59cdad594f3be3420cff16626e416e78\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IWETH {\\r\\n  function deposit() external payable;\\r\\n\\r\\n  function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n  function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x7c3ac71ea1bda67a50642cb86bb77d9b71360df4a5da1de9403ad7d69ecdfa3e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}