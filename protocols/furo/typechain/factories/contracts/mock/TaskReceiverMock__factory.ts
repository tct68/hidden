/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TaskReceiverMock,
  TaskReceiverMockInterface,
} from "../../../contracts/mock/TaskReceiverMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "taskData",
        type: "bytes",
      },
    ],
    name: "onTaskReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610177806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063330df28214610030575b600080fd5b61004161003e366004610072565b50565b005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561008457600080fd5b813567ffffffffffffffff8082111561009c57600080fd5b818401915084601f8301126100b057600080fd5b8135818111156100c2576100c2610043565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561010857610108610043565b8160405282815287602084870101111561012157600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220e638a7f5b3fbca9c383300569bf63527fc80c13713d738020282ca061458a52f64736f6c634300080a0033";

type TaskReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TaskReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TaskReceiverMock__factory extends ContractFactory {
  constructor(...args: TaskReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TaskReceiverMock> {
    return super.deploy(overrides || {}) as Promise<TaskReceiverMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TaskReceiverMock {
    return super.attach(address) as TaskReceiverMock;
  }
  override connect(signer: Signer): TaskReceiverMock__factory {
    return super.connect(signer) as TaskReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TaskReceiverMockInterface {
    return new utils.Interface(_abi) as TaskReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TaskReceiverMock {
    return new Contract(address, _abi, signerOrProvider) as TaskReceiverMock;
  }
}
