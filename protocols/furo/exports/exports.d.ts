import type { NumberStringToNumber } from "../../../packages/types";
export declare const furoStreamExports: {
    readonly "1": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "5": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "10": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "56": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "100": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "137": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "199": {
        readonly address: "0x3DB923FBaB372ab8c796Fef9bb8341CdB37cB9eC";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "250": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1284": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1285": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "42161": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "43114": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1666600000": {
        readonly address: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidEndTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStartTime";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidWithdrawTooMuch";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSender";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotSenderOrRecipient";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "Overflow";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly indexed: true;
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "UpdateStream";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "cancelStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "getStream";
            readonly outputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "sender";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "depositedShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "withdrawnShares";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "startTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "endTime";
                    readonly type: "uint64";
                }];
                readonly internalType: "struct IFuroStream.Stream";
                readonly name: "";
                readonly type: "tuple";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }];
            readonly name: "streamBalanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "senderBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "streamIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "streams";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }];
            readonly name: "updateSender";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "topUpAmount";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "extendTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "updateStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "sharesToWithdraw";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "withdrawTo";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }];
            readonly name: "withdrawFromStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "recipientBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
};
export type FuroStreamExports = typeof furoStreamExports;
export type FuroStreamChainId = NumberStringToNumber<keyof FuroStreamExports>;
export declare const isFuroStreamChainId: (chainId: number) => chainId is FuroStreamChainId;
export declare const furoStreamAddress: {
    readonly 1: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 5: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 10: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 56: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 100: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 137: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 199: "0x3DB923FBaB372ab8c796Fef9bb8341CdB37cB9eC";
    readonly 250: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 1284: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 1285: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 42161: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 43114: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
    readonly 1666600000: "0x4ab2FC6e258a0cA7175D05fF10C5cF798A672cAE";
};
export declare const furoStreamAbi: {
    readonly 1: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 5: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 10: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 56: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 100: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 137: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 199: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 250: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1284: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1285: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 42161: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 43114: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1666600000: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEndTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStartTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWithdrawTooMuch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotSenderOrRecipient";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Overflow";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "startTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "endTime";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "UpdateStream";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "cancelStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "getStream";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint128";
                readonly name: "depositedShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "withdrawnShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }];
            readonly internalType: "struct IFuroStream.Stream";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }];
        readonly name: "streamBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "senderBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "streamIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "streams";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "depositedShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "withdrawnShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "updateSender";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "topUpAmount";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint64";
            readonly name: "extendTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "updateStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "sharesToWithdraw";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "withdrawTo";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawFromStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "recipientBalance";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
};
export declare const furoStreamChainIds: FuroStreamChainId[];
export declare const furoStreamRouterExports: {
    readonly "1": {
        readonly address: "0x95bd909A9cB3002992E2993846b035545F15ff37";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "5": {
        readonly address: "0x4947754676098B1D06dE1C602D0086e406154e89";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "10": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "56": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "100": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "137": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "199": {
        readonly address: "0xc5017BE80b4446988e8686168396289a9A62668E";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "250": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "1284": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "1285": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "42161": {
        readonly address: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "43114": {
        readonly address: "0x4947754676098B1D06dE1C602D0086e406154e89";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroStream";
                readonly name: "_furoStream";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "startTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "endTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createStream";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "streamId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoStream";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroStream";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
};
export type FuroStreamRouterExports = typeof furoStreamRouterExports;
export type FuroStreamRouterChainId = NumberStringToNumber<keyof FuroStreamRouterExports>;
export declare const isFuroStreamRouterChainId: (chainId: number) => chainId is FuroStreamRouterChainId;
export declare const furoStreamRouterAddress: {
    readonly 1: "0x95bd909A9cB3002992E2993846b035545F15ff37";
    readonly 5: "0x4947754676098B1D06dE1C602D0086e406154e89";
    readonly 10: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 56: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 100: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 137: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 199: "0xc5017BE80b4446988e8686168396289a9A62668E";
    readonly 250: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 1284: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 1285: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 42161: "0xf30CF8D373D78D7964A2F7793b730BF7ae0970a8";
    readonly 43114: "0x4947754676098B1D06dE1C602D0086e406154e89";
};
export declare const furoStreamRouterAbi: {
    readonly 1: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 5: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 10: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 56: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 100: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 137: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 199: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 250: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 1284: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 1285: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 42161: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 43114: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroStream";
            readonly name: "_furoStream";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "startTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "endTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createStream";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "streamId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoStream";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroStream";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
};
export declare const furoStreamRouterChainIds: FuroStreamRouterChainId[];
export declare const furoVestingExports: {
    readonly "1": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "5": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "10": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "56": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "100": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "137": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "199": {
        readonly address: "0x5629CE74DdCAD7Cc72b3Ea30444dA7172AD851D9";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "250": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1284": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1285": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "42161": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "43114": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
    readonly "1666600000": {
        readonly address: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStart";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "InvalidStepSetting";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotOwner";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "NotVestReceiver";
            readonly type: "error";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Approval";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "ApprovalForAll";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "ownerAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "recipientAmount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CancelVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly name: "CreateVesting";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "LogUpdateOwner";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "previousOwner";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "OwnershipTransferred";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "Transfer";
            readonly type: "event";
        }, {
            readonly anonymous: false;
            readonly inputs: readonly [{
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly indexed: true;
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly indexed: true;
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly indexed: false;
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "Withdraw";
            readonly type: "event";
        }, {
            readonly inputs: readonly [];
            readonly name: "PERCENTAGE_PRECISION";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "spender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "approve";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "balanceOf";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "claimOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "getApproved";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly name: "isApprovedForAll";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "name";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "owner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "ownerOf";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "pendingOwner";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly name: "safeTransferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "operator";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }];
            readonly name: "setApprovalForAll";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "_fetcher";
                readonly type: "address";
            }];
            readonly name: "setTokenURIFetcher";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "stopVesting";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes4";
                readonly name: "interfaceId";
                readonly type: "bytes4";
            }];
            readonly name: "supportsInterface";
            readonly outputs: readonly [{
                readonly internalType: "bool";
                readonly name: "";
                readonly type: "bool";
            }];
            readonly stateMutability: "pure";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "symbol";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "tokenURI";
            readonly outputs: readonly [{
                readonly internalType: "string";
                readonly name: "";
                readonly type: "string";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "tokenURIFetcher";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "to";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "id";
                readonly type: "uint256";
            }];
            readonly name: "transferFrom";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "direct";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "renounce";
                readonly type: "bool";
            }];
            readonly name: "transferOwnership";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "newOwner";
                readonly type: "address";
            }];
            readonly name: "updateOwner";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }];
            readonly name: "vestBalance";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "vestIds";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "";
                readonly type: "uint256";
            }];
            readonly name: "vests";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "claimed";
                readonly type: "uint128";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "taskData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bool";
                readonly name: "toBentoBox";
                readonly type: "bool";
            }];
            readonly name: "withdraw";
            readonly outputs: readonly [];
            readonly stateMutability: "nonpayable";
            readonly type: "function";
        }];
    };
};
export type FuroVestingExports = typeof furoVestingExports;
export type FuroVestingChainId = NumberStringToNumber<keyof FuroVestingExports>;
export declare const isFuroVestingChainId: (chainId: number) => chainId is FuroVestingChainId;
export declare const furoVestingAddress: {
    readonly 1: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 5: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 10: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 56: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 100: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 137: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 199: "0x5629CE74DdCAD7Cc72b3Ea30444dA7172AD851D9";
    readonly 250: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 1284: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 1285: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 42161: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 43114: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
    readonly 1666600000: "0x0689640d190b10765f09310fCfE9C670eDe4E25B";
};
export declare const furoVestingAbi: {
    readonly 1: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 5: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 10: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 56: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 100: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 137: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 199: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 250: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1284: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1285: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 42161: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 43114: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly 1666600000: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStart";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidStepSetting";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotVestReceiver";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "ownerAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "recipientAmount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CancelVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "recipient";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "fromBentoBox";
            readonly type: "bool";
        }];
        readonly name: "CreateVesting";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "LogUpdateOwner";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "Withdraw";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERCENTAGE_PRECISION";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "claimOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_fetcher";
            readonly type: "address";
        }];
        readonly name: "setTokenURIFetcher";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "stopVesting";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenURIFetcher";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "id";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "direct";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "renounce";
            readonly type: "bool";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "updateOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }];
        readonly name: "vestBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vestIds";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "vests";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "start";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "cliffDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "stepDuration";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "steps";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "claimed";
            readonly type: "uint128";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "taskData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bool";
            readonly name: "toBentoBox";
            readonly type: "bool";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
};
export declare const furoVestingChainIds: FuroVestingChainId[];
export declare const furoVestingRouterExports: {
    readonly "1": {
        readonly address: "0x8E190A2173334c67734119791CF63299A7570877";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "5": {
        readonly address: "0x134C28E1aA0b5F339e498951bAEA9165c4Dbea90";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "10": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "56": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "100": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "137": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "199": {
        readonly address: "0xBD87Bef520f8CEC45d73B0413B6cBb8b061736d9";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "250": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "1284": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "1285": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "42161": {
        readonly address: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
    readonly "43114": {
        readonly address: "0x134C28E1aA0b5F339e498951bAEA9165c4Dbea90";
        readonly abi: readonly [{
            readonly inputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "_bentoBox";
                readonly type: "address";
            }, {
                readonly internalType: "contract IFuroVesting";
                readonly name: "_furoVesting";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "_wETH";
                readonly type: "address";
            }];
            readonly stateMutability: "nonpayable";
            readonly type: "constructor";
        }, {
            readonly inputs: readonly [];
            readonly name: "InsufficientShares";
            readonly type: "error";
        }, {
            readonly inputs: readonly [];
            readonly name: "bentoBox";
            readonly outputs: readonly [{
                readonly internalType: "contract IBentoBoxMinimal";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly components: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "start";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "cliffDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "stepDuration";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "steps";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "stepPercentage";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "uint128";
                    readonly name: "amount";
                    readonly type: "uint128";
                }, {
                    readonly internalType: "bool";
                    readonly name: "fromBentoBox";
                    readonly type: "bool";
                }];
                readonly internalType: "struct IFuroVesting.VestParams";
                readonly name: "vestParams";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "minShare";
                readonly type: "uint256";
            }];
            readonly name: "createVesting";
            readonly outputs: readonly [{
                readonly internalType: "uint256";
                readonly name: "depositedShares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "vestId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepShares";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "cliffShares";
                readonly type: "uint128";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "furoVesting";
            readonly outputs: readonly [{
                readonly internalType: "contract IFuroVesting";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "data";
                readonly type: "bytes[]";
            }];
            readonly name: "multicall";
            readonly outputs: readonly [{
                readonly internalType: "bytes[]";
                readonly name: "results";
                readonly type: "bytes[]";
            }];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [{
                readonly internalType: "address";
                readonly name: "user";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "approved";
                readonly type: "bool";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }];
            readonly name: "setBentoBoxApproval";
            readonly outputs: readonly [];
            readonly stateMutability: "payable";
            readonly type: "function";
        }, {
            readonly inputs: readonly [];
            readonly name: "wETH";
            readonly outputs: readonly [{
                readonly internalType: "address";
                readonly name: "";
                readonly type: "address";
            }];
            readonly stateMutability: "view";
            readonly type: "function";
        }];
    };
};
export type FuroVestingRouterExports = typeof furoVestingRouterExports;
export type FuroVestingRouterChainId = NumberStringToNumber<keyof FuroVestingRouterExports>;
export declare const isFuroVestingRouterChainId: (chainId: number) => chainId is FuroVestingRouterChainId;
export declare const furoVestingRouterAddress: {
    readonly 1: "0x8E190A2173334c67734119791CF63299A7570877";
    readonly 5: "0x134C28E1aA0b5F339e498951bAEA9165c4Dbea90";
    readonly 10: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 56: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 100: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 137: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 199: "0xBD87Bef520f8CEC45d73B0413B6cBb8b061736d9";
    readonly 250: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 1284: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 1285: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 42161: "0x312A8E33d78d3Ab79E62971E86e5e8c9c5E28D64";
    readonly 43114: "0x134C28E1aA0b5F339e498951bAEA9165c4Dbea90";
};
export declare const furoVestingRouterAbi: {
    readonly 1: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 5: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 10: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 56: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 100: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 137: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 199: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 250: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 1284: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 1285: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 42161: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly 43114: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "_bentoBox";
            readonly type: "address";
        }, {
            readonly internalType: "contract IFuroVesting";
            readonly name: "_furoVesting";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wETH";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientShares";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "bentoBox";
        readonly outputs: readonly [{
            readonly internalType: "contract IBentoBoxMinimal";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "token";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "uint32";
                readonly name: "start";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "cliffDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "stepDuration";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "steps";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint128";
                readonly name: "stepPercentage";
                readonly type: "uint128";
            }, {
                readonly internalType: "uint128";
                readonly name: "amount";
                readonly type: "uint128";
            }, {
                readonly internalType: "bool";
                readonly name: "fromBentoBox";
                readonly type: "bool";
            }];
            readonly internalType: "struct IFuroVesting.VestParams";
            readonly name: "vestParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "minShare";
            readonly type: "uint256";
        }];
        readonly name: "createVesting";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "depositedShares";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "vestId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint128";
            readonly name: "stepShares";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint128";
            readonly name: "cliffShares";
            readonly type: "uint128";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "furoVesting";
        readonly outputs: readonly [{
            readonly internalType: "contract IFuroVesting";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "data";
            readonly type: "bytes[]";
        }];
        readonly name: "multicall";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "results";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "user";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "setBentoBoxApproval";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wETH";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
};
export declare const furoVestingRouterChainIds: FuroVestingRouterChainId[];
